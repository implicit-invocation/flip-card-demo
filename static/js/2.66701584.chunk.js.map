{"version":3,"sources":["../node_modules/@babel/runtime/regenerator/index.js","../node_modules/klasse/index.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/kami-texture2/index.js","../node_modules/kami-util/index.js","../node_modules/number-util/index.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/gdxjs/lib/loadTexture.js","../node_modules/kami-mesh-buffer/index.js","../node_modules/fbemitter/lib/EmitterSubscription.js","../node_modules/fbjs/lib/invariant.js","../node_modules/gdxjs/lib/createBatch.js","../node_modules/kami-batch2/index.js","../node_modules/gdxjs/lib/InputHandler.js","../node_modules/fbemitter/index.js","../node_modules/gl-matrix/esm/common.js","../node_modules/gl-matrix/esm/mat4.js","../node_modules/gdxjs/lib/mathUtils.js","../node_modules/gdxjs/lib/orthoCamera.js","../node_modules/gdxjs/lib/TextureRegion.js","../node_modules/gdxjs/lib/loadAtlas.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/kami-util/wrapper.js","../node_modules/kami-shader/index.js","../node_modules/webgl-compile-shader/index.js","../node_modules/webgl-context/index.js","../node_modules/kami-base-batch/index.js","../node_modules/kami-base-batch/mixins.js","../node_modules/fbemitter/lib/BaseEventEmitter.js","../node_modules/fbemitter/lib/EventSubscription.js","../node_modules/fbemitter/lib/EventSubscriptionVendor.js","../node_modules/fbjs/lib/emptyFunction.js","../node_modules/kami-batch2/node_modules/gl-matrix/lib/gl-matrix/common.js","../node_modules/kami-batch2/node_modules/gl-matrix/lib/gl-matrix/mat2.js","../node_modules/kami-batch2/node_modules/gl-matrix/lib/gl-matrix/mat2d.js","../node_modules/kami-batch2/node_modules/gl-matrix/lib/gl-matrix/mat3.js","../node_modules/kami-batch2/node_modules/gl-matrix/lib/gl-matrix/mat4.js","../node_modules/kami-batch2/node_modules/gl-matrix/lib/gl-matrix/vec3.js","../node_modules/kami-batch2/node_modules/gl-matrix/lib/gl-matrix/vec4.js","../node_modules/kami-batch2/node_modules/gl-matrix/lib/gl-matrix/quat.js","../node_modules/kami-batch2/node_modules/gl-matrix/lib/gl-matrix/quat2.js","../node_modules/kami-batch2/node_modules/gl-matrix/lib/gl-matrix/vec2.js","../node_modules/kami-batch2/node_modules/gl-matrix/lib/gl-matrix.js"],"names":["module","exports","getProperty","definition","k","isClassDescriptor","def","Object","getOwnPropertyDescriptor","value","get","set","hasGetterOrSetter","enumerable","configurable","hasNonConfigurable","obj","prop","extend","ctor","hasOwnProperty","prototype","Class","ignoreFinals","Error","defineProperty","mixin","myClass","mixins","Array","isArray","i","length","initialize","Extends","base","apply","this","arguments","create","constructor","Mixins","_slicedToArray","arr","Symbol","iterator","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","TypeError","require","isPowerOfTwo","nextPowerOfTwo","BaseObject","Texture","context","options","managedArgs","id","target","gl","TEXTURE_2D","width","height","__shape","wrapS","DEFAULT_WRAP","wrapT","minFilter","DEFAULT_FILTER","magFilter","addManagedObject","setup","src","img","Image","path","crossOrigin","successCB","onLoad","failCB","onError","genMipmaps","self","USE_DUMMY_1x1_DATA","uploadData","onload","ev","uploadImage","onerror","generateMipmap","onabort","image","format","dataType","data","createTexture","bind","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_PREMULTIPLY_ALPHA","UNPACK_ALIGNMENT","UNPACK_FLIP_Y_WEBGL","UNPACK_FLIP_Y","colorspace","UNPACK_COLORSPACE_CONVERSION","BROWSER_DEFAULT_WEBGL","UNPACK_COLORSPACE_CONVERSION_WEBGL","setWrap","setFilter","destroy","deleteTexture","removeManagedObject","s","t","ignoreBind","_checkPOT","texParameteri","TEXTURE_WRAP_S","TEXTURE_WRAP_T","min","mag","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","type","RGBA","UNSIGNED_BYTE","texImage2D","domObject","uploadSubImage","FORCE_POT","wrongFilter","Filter","LINEAR","NEAREST","wrongWrap","Wrap","CLAMP_TO_EDGE","unit","activeTexture","TEXTURE0","bindTexture","shape","NEAREST_MIPMAP_LINEAR","NEAREST_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","MIRRORED_REPEAT","REPEAT","Format","DEPTH_COMPONENT","ALPHA","RGB","LUMINANCE","LUMINANCE_ALPHA","DataType","BYTE","SHORT","INT","FLOAT","UNSIGNED_INT","UNSIGNED_SHORT","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","getNumComponents","GLContextWrapper","wrapContext","rawgl","window","WebGLRenderingContext","int8","Int8Array","int32","Int32Array","buffer","float32","Float32Array","NumberUtil","intBitsToFloat","floatToIntBits","f","intToFloatColor","colorToFloat","r","g","b","a","n","_classCallCheck","instance","Constructor","_defineProperties","props","descriptor","writable","key","_createClass","protoProps","staticProps","_defineProperty","url","Promise","resolve","texture","Mesh","dirty","val","verticesDirty","indicesDirty","isStatic","numVerts","numIndices","vertexAttribs","vertices","indices","vertexBuffer","indexBuffer","indexUsage","vertexUsage","_vertexAttribs","vertexStride","STATIC_DRAW","DYNAMIC_DRAW","totalNumComponents","offsetCount","Uint16Array","createBuffer","deleteBuffer","_updateBuffers","subDataLength","bindBuffer","ELEMENT_ARRAY_BUFFER","bufferData","ARRAY_BUFFER","view","subarray","bufferSubData","draw","primitiveType","count","offset","drawElements","drawArrays","shader","stride","loc","location","getAttributeLocation","name","enableVertexAttribArray","vertexAttribPointer","numComponents","normalize","unbind","disableVertexAttribArray","Attrib","Boolean","EmitterSubscription","_EventSubscription","subscriber","listener","subClass","superClass","setPrototypeOf","__proto__","_inherits","validateFormat","condition","c","d","e","error","args","argIndex","replace","framesToPop","createBatch","ShaderProgram","BaseBatch","mat4","SpriteBatch","projection","resize","setProjection","getVertexSize","VERTEX_SIZE","_createVertexAttributes","POSITION_ATTRIBUTE","COLOR_ATTRIBUTE","TEXCOORD_ATTRIBUTE","drawing","x","oldX","y","oldY","flush","updateMatrices","_createShader","DEFAULT_VERT_SHADER","DEFAULT_FRAG_SHADER","log","console","warn","setUniformMatrix4","_preRender","begin","setUniformi","depthMask","end","idx","totalRenderCalls","drawRegion","region","u","v","u2","v2","originX","originY","rotation","scaleX","scaleY","u1","v1","x1","x2","x3","x4","y1","y2","y3","y4","color","cos","Math","sin","rotatedX1","rotatedY1","rotatedX2","rotatedY2","rotatedX3","rotatedY3","rotatedX4","rotatedY4","drawVertices","verts","off","join","InputHandler","canvas","lastX","lastY","touched","emitter","EventEmitter","mouseDownHandler","evt","handleMove","emit","getX","getY","mouseUpHandler","mouseMoveHandler","touchStartHandler","preventDefault","touch","touches","dispatchEvent","MouseEvent","clientX","clientY","touchEndHandler","touchMoveHandler","addEventListener","removeEventListener","event","addListener","rect","getBoundingClientRect","left","top","fbemitter","EPSILON","ARRAY_TYPE","random","PI","out","glMatrix","clone","copy","fromValues","m00","m01","m02","m03","m10","m11","m12","m13","m20","m21","m22","m23","m30","m31","m32","m33","identity","transpose","a01","a02","a03","a12","a13","a23","invert","a00","a10","a11","a20","a21","a22","a30","a31","a32","a33","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","adjoint","determinant","multiply","b0","b1","b2","b3","translate","z","scale","rotate","rad","axis","b12","b20","b21","b22","len","hypot","rotateX","rotateY","rotateZ","fromTranslation","fromScaling","fromRotation","fromXRotation","fromYRotation","fromZRotation","fromRotationTranslation","q","w","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","fromQuat2","translation","bx","by","bz","bw","ax","ay","az","aw","magnitude","getTranslation","mat","getScaling","getRotation","scaling","is1","is2","is3","sm11","sm12","sm13","sm21","sm22","sm23","sm31","sm32","sm33","trace","S","sqrt","fromRotationTranslationScale","sx","sy","sz","fromRotationTranslationScaleOrigin","o","ox","oy","oz","out0","out1","out2","out4","out5","out6","out8","out9","out10","fromQuat","yx","zx","zy","frustum","right","bottom","near","far","rl","tb","nf","perspective","fovy","aspect","tan","Infinity","perspectiveFromFieldOfView","fov","upTan","upDegrees","downTan","downDegrees","leftTan","leftDegrees","rightTan","rightDegrees","xScale","yScale","ortho","lr","bt","lookAt","eye","center","up","x0","y0","z0","z1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","abs","targetTo","str","frob","add","subtract","multiplyScalar","multiplyScalarAndAdd","exactEquals","equals","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","a14","a15","b4","b5","b6","b7","b8","b9","b13","b14","b15","max","mul","sub","unproject","vec3","invMat4","viewX","viewY","viewWidth","viewHeight","m","l_w","project","viewportWidth","viewportHeight","combined","invOrtho","transform","tmp3","origin","scaleVec","negOriginVec","translateVec","setMatrix","unprojectVector2","input","TextureRegion","tex","extraData","invTexWidth","invTexHeight","batch","concatAndResolveUrl","concat","url1","split","url2","url3","l","pop","TextureWrap","packFileUrl","textureOptions","async","fetch","then","res","text","packFileContent","pages","regionsData","lines","line","trim","pageImage","file","tuple","map","parseInt","direction","repeatX","repeatY","mipMaps","page","splits","pads","originalWidth","originalHeight","offsetX","offsetY","index","loadTexture","regions","regionData","getPages","getRegions","findRegion","findRegions","filter","sort","runtime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","Context","_invoke","state","GenStateSuspendedStart","method","arg","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","GenStateSuspendedYield","makeInvokeMethod","fn","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","previousPromise","callInvokeWithMethodAndArg","reject","invoke","result","__await","unwrapped","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","mark","awrap","iter","keys","object","reverse","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","compileShader","vertSource","fragSource","attributeLocations","vertShader","fragShader","program","uniformCache","attributeCache","_compileShaders","vertex","fragment","verbose","VERBOSE_COMPILE","_fetchUniforms","_fetchAttributes","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","size","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","useProgram","detachShader","deleteShader","deleteProgram","getUniformInfo","getAttributeInfo","hasUniform","hasAttribute","getUniform","getUniformAt","uniform1i","uniform2i","uniform3i","uniform4i","setUniformf","uniform1f","uniform2f","uniform3f","uniform4f","setUniformfv","arrayBuffer","uniform1fv","uniform2fv","uniform3fv","uniform4fv","setUniformiv","uniform1iv","uniform2iv","uniform3iv","uniform4iv","setUniformMatrix3","uniformMatrix3fv","uniformMatrix4fv","NORMAL_ATTRIBUTE","getGL","loadShader","source","createShader","shaderSource","typeStr","VERTEX_SHADER","logResult","getShaderInfoLog","getShaderParameter","COMPILE_STATUS","addLineNumbers","string","opts","attribs","vert","frag","FRAGMENT_SHADER","createProgram","attachShader","bindAttribLocation","floor","linkProgram","getProgramInfoLog","LINK_STATUS","compile","document","createElement","attributes","getContext","BaseMixins","mesh","_createMesh","j","_blendingEnabled","enable","BLEND","disable","_blendSrc","_blendDst","blendFunc","spriteCount","TRIANGLES","maxVertices","ownsShader","defaultShader","_shader","ONE","ONE_MINUS_SRC_ALPHA","premultiplied","blendingEnabled","old","blendSrc","blendDst","setBlendFunction","wasDrawing","setColor","rnum","EventSubscriptionVendor","emptyFunction","invariant","BaseEventEmitter","_subscriber","_currentSubscription","eventType","addSubscription","once","removeCurrentListener","removeAllListeners","removeAllSubscriptions","removeSubscription","listeners","subscriptions","getSubscriptionsForType","thatReturnsTrue","subscription","ii","__emitToSubscription","EventSubscription","remove","_subscriptionsForType","subscriptionsForType","makeEmptyFunction","thatReturns","thatReturnsFalse","thatReturnsNull","thatReturnsThis","thatReturnsArgument","RANDOM","setMatrixArrayType","degree","toRadian","v0","pow","LDU","L","D","U","tx","ty","aa","ab","ac","ad","atx","aty","fromMat4","fromMat2d","normalFromMat4","divide","ceil","round","scaleAndAdd","distance","squaredDistance","squaredLength","negate","inverse","dot","cross","lerp","hermite","factorTimes2","factor1","factor2","factor3","factor4","bezier","inverseFactor","inverseFactorTimesTwo","zScale","transformMat4","transformMat3","transformQuat","qx","qy","qz","qw","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","p","angle","tempA","tempB","cosine","acos","div","dist","sqrDist","sqrLen","vec","v3","v4","s1","s2","ix","iy","iz","iw","setAxisAngle","getAxisAngle","out_axis","calculateW","slerp","omega","cosom","sinom","scale0","scale1","u3","sqrt1MinusU1","sqrtU1","invDot","conjugate","fromMat3","fTrace","fRoot","fromEuler","halfToRad","cx","cy","cz","vec4","rotationTo","tmpvec3","xUnitVec3","yUnitVec3","sqlerp","temp1","temp2","setAxes","matr","mat3","dq","w1","fromRotationTranslationValues","outer","quat","getReal","getDual","setReal","setDual","ax1","ay1","az1","aw1","bx1","by1","bz1","ax2","ay2","az2","aw2","rotateByQuatAppend","rotateByQuatPrepend","rotateAroundAxis","axisLength","ax0","ay0","az0","aw0","bw1","bx0","by0","bz0","bw0","mt","sqlen","a_dot_b","transformMat2","transformMat2d","p0","p1","sinC","cosC","len1","len2"],"mappings":"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","file":"static/js/2.66701584.chunk.js","sourcesContent":["module.exports = require(\"regenerator-runtime\");\n","function hasGetterOrSetter(def) {\n\treturn (!!def.get && typeof def.get === \"function\") || (!!def.set && typeof def.set === \"function\");\n}\n\nfunction getProperty(definition, k, isClassDescriptor) {\n\t//This may be a lightweight object, OR it might be a property\n\t//that was defined previously.\n\t\n\t//For simple class descriptors we can just assume its NOT previously defined.\n\tvar def = isClassDescriptor \n\t\t\t\t? definition[k] \n\t\t\t\t: Object.getOwnPropertyDescriptor(definition, k);\n\n\tif (!isClassDescriptor && def.value && typeof def.value === \"object\") {\n\t\tdef = def.value;\n\t}\n\n\n\t//This might be a regular property, or it may be a getter/setter the user defined in a class.\n\tif ( def && hasGetterOrSetter(def) ) {\n\t\tif (typeof def.enumerable === \"undefined\")\n\t\t\tdef.enumerable = true;\n\t\tif (typeof def.configurable === \"undefined\")\n\t\t\tdef.configurable = true;\n\t\treturn def;\n\t} else {\n\t\treturn false;\n\t}\n}\n\nfunction hasNonConfigurable(obj, k) {\n\tvar prop = Object.getOwnPropertyDescriptor(obj, k);\n\tif (!prop)\n\t\treturn false;\n\n\tif (prop.value && typeof prop.value === \"object\")\n\t\tprop = prop.value;\n\n\tif (prop.configurable === false) \n\t\treturn true;\n\n\treturn false;\n}\n\n//TODO: On create, \n//\t\tOn mixin, \n\nfunction extend(ctor, definition, isClassDescriptor, extend) {\n\tfor (var k in definition) {\n\t\tif (!definition.hasOwnProperty(k))\n\t\t\tcontinue;\n\n\t\tvar def = getProperty(definition, k, isClassDescriptor);\n\n\t\tif (def !== false) {\n\t\t\t//If Extends is used, we will check its prototype to see if \n\t\t\t//the final variable exists.\n\t\t\t\n\t\t\tvar parent = extend || ctor;\n\t\t\tif (hasNonConfigurable(parent.prototype, k)) {\n\n\t\t\t\t//just skip the final property\n\t\t\t\tif (Class.ignoreFinals)\n\t\t\t\t\tcontinue;\n\n\t\t\t\t//We cannot re-define a property that is configurable=false.\n\t\t\t\t//So we will consider them final and throw an error. This is by\n\t\t\t\t//default so it is clear to the developer what is happening.\n\t\t\t\t//You can set ignoreFinals to true if you need to extend a class\n\t\t\t\t//which has configurable=false; it will simply not re-define final properties.\n\t\t\t\tthrow new Error(\"cannot override final property '\"+k\n\t\t\t\t\t\t\t+\"', set Class.ignoreFinals = true to skip\");\n\t\t\t}\n\n\t\t\tObject.defineProperty(ctor.prototype, k, def);\n\t\t} else {\n\t\t\tctor.prototype[k] = definition[k];\n\t\t}\n\n\t}\n}\n\n/**\n */\nfunction mixin(myClass, mixins) {\n\tif (!mixins)\n\t\treturn;\n\n\tif (!Array.isArray(mixins))\n\t\tmixins = [mixins];\n\n\tfor (var i=0; i<mixins.length; i++) {\n\t\textend(myClass, mixins[i].prototype || mixins[i]);\n\t}\n}\n\n/**\n * Creates a new class with the given descriptor.\n * The constructor, defined by the name `initialize`,\n * is an optional function. If unspecified, an anonymous\n * function will be used which calls the parent class (if\n * one exists). \n *\n * You can also use `Extends` and `Mixins` to provide subclassing\n * and inheritance.\n *\n * @class  Class\n * @constructor\n * @param {Object} definition a dictionary of functions for the class\n * @example\n *\n * \t\tvar MyClass = new Class({\n * \t\t\n * \t\t\tinitialize: function() {\n * \t\t\t\tthis.foo = 2.0;\n * \t\t\t},\n *\n * \t\t\tbar: function() {\n * \t\t\t\treturn this.foo + 5;\n * \t\t\t}\n * \t\t});\n */\nfunction Class(definition) {\n\tif (!definition)\n\t\tdefinition = {};\n\n\t//The variable name here dictates what we see in Chrome debugger\n\tvar initialize;\n\tvar Extends;\n\n\tif (definition.initialize) {\n\t\tif (typeof definition.initialize !== \"function\")\n\t\t\tthrow new Error(\"initialize must be a function\");\n\t\tinitialize = definition.initialize;\n\n\t\t//Usually we should avoid \"delete\" in V8 at all costs.\n\t\t//However, its unlikely to make any performance difference\n\t\t//here since we only call this on class creation (i.e. not object creation).\n\t\tdelete definition.initialize;\n\t} else {\n\t\tif (definition.Extends) {\n\t\t\tvar base = definition.Extends;\n\t\t\tinitialize = function () {\n\t\t\t\tbase.apply(this, arguments);\n\t\t\t}; \n\t\t} else {\n\t\t\tinitialize = function () {}; \n\t\t}\n\t}\n\n\tif (definition.Extends) {\n\t\tinitialize.prototype = Object.create(definition.Extends.prototype);\n\t\tinitialize.prototype.constructor = initialize;\n\t\t//for getOwnPropertyDescriptor to work, we need to act\n\t\t//directly on the Extends (or Mixin)\n\t\tExtends = definition.Extends;\n\t\tdelete definition.Extends;\n\t} else {\n\t\tinitialize.prototype.constructor = initialize;\n\t}\n\n\t//Grab the mixins, if they are specified...\n\tvar mixins = null;\n\tif (definition.Mixins) {\n\t\tmixins = definition.Mixins;\n\t\tdelete definition.Mixins;\n\t}\n\n\t//First, mixin if we can.\n\tmixin(initialize, mixins);\n\n\t//Now we grab the actual definition which defines the overrides.\n\textend(initialize, definition, true, Extends);\n\n\treturn initialize;\n};\n\nClass.extend = extend;\nClass.mixin = mixin;\nClass.ignoreFinals = false;\n\nmodule.exports = Class;","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","/**\n * Texture utils for kami.\n *\n * @module kami-texture\n */\n\nvar Class = require(\"klasse\");\nvar nextPowerOfTwo = require(\"number-util\").nextPowerOfTwo;\nvar isPowerOfTwo = require(\"number-util\").isPowerOfTwo;\nvar BaseObject = require(\"kami-util\").BaseObject;\n\nvar Texture = new Class({\n  /**\n   * Creates a new texture with the optional width, height, and data.\n   *\n   * If the constructor is passed no parameters other than the context, then\n   * it will not be initialized and will be non-renderable. You will need to manually\n   * uploadData or uploadImage yourself.\n   *\n   * If the options passed includes 'src', it assumes an image is to be loaded,\n   * and will use the width/height from that resulting image. Otherwise, it\n   * will look for 'data', which may be a typed array or any valid \"image\" object.\n   * A typed array will need its width/height passed explicitly.\n   *\n   * If the context is a kami-context, we will try to manage the Texture object by\n   * keeping the arguments in memory for future use.\n   *\n   * Most users will want to use the AssetManager to create and manage their textures\n   * with asynchronous loading and context loss.\n   *\n   * @class  Texture\n   * @constructor\n   * @param  {WebGLRenderingContext|kami-context} context the WebGL context\n   * @param  {Object} options the options to create this texture\n   *   @param {String} options.src the path to the image file, if ommitted we assume data will be given\n   *   @param {Function} options.onLoad called when the image is loaded (if src is provided)\n   *   @param {Function} options.onError called when there was an error loading the image (if src is provided)\n   *   @param {String} options.crossOrigin the image cross-origin parameter (if src is provided)\n   *   @param {ArrayBuffer} options.data some typed array with texture data, ignored if 'src' is specified\n   *   @param {GLenum} options.format the texture format, default Texture.Format.RGBA (for when data is specified)\n   *   @param {GLenum} options.type the data type, default Texture.DataType.UNSIGNED_BYTE (for when data is specified)\n   *   @param {Number} options.width the width of the texture (if we are not specifying an image URL)\n   *   @param {Number} options.height the height of the texture (if we are not specifying an image URL)\n   *   @param {Boolean} options.genMipmaps whether to generate mipmaps after upload\n   */\n  initialize: function Texture(context, options) {\n    if (!(this instanceof Texture)) return new Texture(context, options);\n\n    //sets up base Kami object..\n    BaseObject.call(this, context);\n\n    /**\n     * When a texture is created, we keep track of the arguments provided to\n     * its constructor. On context loss and restore, these arguments are re-supplied\n     * to the Texture, so as to re-create it in its correct form.\n     *\n     * This is mainly useful if you are procedurally creating textures and passing\n     * their data directly (e.g. for generic lookup tables in a shader). For image\n     * or media based textures, it would be better to use an AssetManager to manage\n     * the asynchronous texture upload.\n     *\n     * Upon destroying a texture, a reference to this is also lost.\n     *\n     * @property managedArgs\n     * @type {Object} the options given to the Texture constructor, or undefined\n     */\n    this.managedArgs = options;\n\n    /**\n     * The WebGLTexture which backs this Texture object. This\n     * can be used for low-level GL calls.\n     *\n     * @type {WebGLTexture}\n     */\n    this.id = null; //initialized in create()\n\n    /**\n     * The target for this texture unit, i.e. TEXTURE_2D. Subclasses\n     * should override the create() method to change this, for correct\n     * usage with context restore.\n     *\n     * @property target\n     * @type {GLenum}\n     * @default  gl.TEXTURE_2D\n     */\n    this.target = this.context.gl.TEXTURE_2D;\n\n    /**\n     * The width of this texture, in pixels.\n     *\n     * @property width\n     * @readOnly\n     * @type {Number} the width\n     */\n    this.width = 0; //initialized on texture upload\n\n    /**\n     * The height of this texture, in pixels.\n     *\n     * @property height\n     * @readOnly\n     * @type {Number} the height\n     */\n    this.height = 0; //initialized on texture upload\n\n    this.__shape = [0, 0];\n\n    /**\n     * The S wrap parameter.\n     * @property {GLenum} wrapS\n     */\n    this.wrapS = Texture.DEFAULT_WRAP;\n    /**\n     * The T wrap parameter.\n     * @property {GLenum} wrapT\n     */\n    this.wrapT = Texture.DEFAULT_WRAP;\n    /**\n     * The minifcation filter.\n     * @property {GLenum} minFilter\n     */\n    this.minFilter = Texture.DEFAULT_FILTER;\n\n    /**\n     * The magnification filter.\n     * @property {GLenum} magFilter\n     */\n    this.magFilter = Texture.DEFAULT_FILTER;\n\n    //manage if we're dealing with a kami-context\n    this.context.addManagedObject(this);\n    this.create();\n  },\n\n  /**\n   * This can be called after creating a Texture to load an Image object asynchronously,\n   * or upload image data directly. It takes the same options as the constructor.\n   *\n   * Users will generally not need to call this directly.\n   *\n   * @protected\n   * @method  setup\n   */\n  setup: function(options) {\n    var gl = this.gl;\n\n    //If no options is provided... this method does nothing.\n    if (!options) return;\n\n    // width, height, format, dataType, data, genMipmaps\n\n    //If 'src' is provided, try to load the image from a path...\n    if (options.src && typeof options.src === \"string\") {\n      var img = new Image();\n      var path = options.src;\n      var crossOrigin = options.crossOrigin;\n      var successCB =\n        typeof options.onLoad === \"function\" ? options.onLoad : null;\n      var failCB =\n        typeof options.onError === \"function\" ? options.onError : null;\n      var genMipmaps = options.genMipmaps;\n\n      var self = this;\n\n      //If you try to render a texture that is not yet \"renderable\" (i.e. the\n      //async load hasn't completed yet, which is always the case in Chrome since requestAnimationFrame\n      //fires before img.onload), WebGL will throw us errors. So instead we will just upload some\n      //dummy data until the texture load is complete. Users can disable this with the global flag.\n      if (Texture.USE_DUMMY_1x1_DATA) {\n        self.uploadData(1, 1);\n        this.width = this.height = 0;\n      }\n\n      img.crossOrigin = crossOrigin;\n\n      img.onload = function(ev) {\n        self.uploadImage(img, undefined, undefined, genMipmaps);\n        if (typeof successCB === \"function\") successCB.call(self, ev, self);\n      };\n      img.onerror = function(ev) {\n        if (genMipmaps)\n          //we still need to gen mipmaps on the 1x1 dummy\n          gl.generateMipmap(gl.TEXTURE_2D);\n        if (typeof failCB === \"function\") failCB.call(self, ev, self);\n      };\n      img.onabort = function(ev) {\n        if (genMipmaps) gl.generateMipmap(gl.TEXTURE_2D);\n        if (typeof failCB === \"function\") failCB.call(self, ev, self);\n      };\n\n      img.src = path;\n    }\n    //otherwise see if we have an 'image' specified\n    else if (options.image) {\n      this.uploadImage(\n        options.image,\n        options.format,\n        options.dataType,\n        options.genMipmaps\n      );\n    }\n    //otherwise assume our regular list of width/height arguments are passed\n    else {\n      this.uploadData(\n        options.width,\n        options.height,\n        options.format,\n        options.dataType,\n        options.data,\n        options.genMipmaps\n      );\n    }\n  },\n\n  /**\n   * Called in the Texture constructor, and after the GL context has been re-initialized.\n   * Subclasses can override this to provide a custom data upload, e.g. cubemaps or compressed\n   * textures.\n   *\n   * @method  create\n   */\n  create: function() {\n    this.gl = this.context.gl;\n    var gl = this.gl;\n\n    this.id = gl.createTexture(); //texture ID is recreated\n    this.width = this.height = 0; //size is reset to zero until loaded\n    this.target = gl.TEXTURE_2D; //the provider can change this if necessary (e.g. cube maps)\n\n    this.bind();\n\n    //TODO: clean these up a little.\n    gl.pixelStorei(\n      gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL,\n      Texture.UNPACK_PREMULTIPLY_ALPHA\n    );\n    gl.pixelStorei(gl.UNPACK_ALIGNMENT, Texture.UNPACK_ALIGNMENT);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, Texture.UNPACK_FLIP_Y);\n\n    var colorspace =\n      Texture.UNPACK_COLORSPACE_CONVERSION || gl.BROWSER_DEFAULT_WEBGL;\n    gl.pixelStorei(gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, colorspace);\n\n    //setup wrap modes without binding redundantly\n    this.setWrap(this.wrapS, this.wrapT, false);\n    this.setFilter(this.minFilter, this.magFilter, false);\n\n    if (this.managedArgs) {\n      this.setup(this.managedArgs);\n    }\n  },\n\n  /**\n   * Destroys this texture by deleting the GL resource,\n   * removing it from the WebGLContext management stack,\n   * setting its size to zero, and id and managed arguments to null.\n   *\n   * Trying to use this texture after may lead to undefined behaviour.\n   *\n   * @method  destroy\n   */\n  destroy: function() {\n    if (this.id && this.gl) this.gl.deleteTexture(this.id);\n    if (this.context) this.context.removeManagedObject(this);\n    this.width = this.height = 0;\n    this.id = null;\n    this.managedArgs = null;\n    this.context = null;\n    this.gl = null;\n  },\n\n  /**\n   * Sets the wrap mode for this texture; if the second argument\n   * is undefined or falsy, then both S and T wrap will use the first\n   * argument.\n   *\n   * You can use Texture.Wrap constants for convenience, to avoid needing\n   * a GL reference.\n   *\n   * @method  setWrap\n   * @param {GLenum} s the S wrap mode\n   * @param {GLenum} t the T wrap mode\n   * @param {Boolean} ignoreBind (optional) if true, the bind will be ignored.\n   */\n  setWrap: function(s, t, ignoreBind) {\n    //TODO: support R wrap mode\n    if (s && t) {\n      this.wrapS = s;\n      this.wrapT = t;\n    } else this.wrapS = this.wrapT = s;\n\n    //enforce POT rules..\n    this._checkPOT();\n\n    if (!ignoreBind) this.bind();\n\n    var gl = this.gl;\n    gl.texParameteri(this.target, gl.TEXTURE_WRAP_S, this.wrapS);\n    gl.texParameteri(this.target, gl.TEXTURE_WRAP_T, this.wrapT);\n  },\n\n  /**\n   * Sets the min and mag filter for this texture;\n   * if mag is undefined or falsy, then both min and mag will use the\n   * filter specified for min.\n   *\n   * You can use Texture.Filter constants for convenience, to avoid needing\n   * a GL reference.\n   *\n   * @method  setFilter\n   * @param {GLenum} min the minification filter\n   * @param {GLenum} mag the magnification filter\n   * @param {Boolean} ignoreBind if true, the bind will be ignored.\n   */\n  setFilter: function(min, mag, ignoreBind) {\n    if (min && mag) {\n      this.minFilter = min;\n      this.magFilter = mag;\n    } else this.minFilter = this.magFilter = min;\n\n    //enforce POT rules..\n    this._checkPOT();\n\n    if (!ignoreBind) this.bind();\n\n    var gl = this.gl;\n    gl.texParameteri(this.target, gl.TEXTURE_MIN_FILTER, this.minFilter);\n    gl.texParameteri(this.target, gl.TEXTURE_MAG_FILTER, this.magFilter);\n  },\n\n  /**\n   * A low-level method to upload the specified ArrayBufferView\n   * to this texture. This will cause the width and height of this\n   * texture to change.\n   *\n   * @method  uploadData\n   * @param  {Number} width          the new width of this texture,\n   *                                 defaults to the last used width (or zero)\n   * @param  {Number} height         the new height of this texture\n   *                                 defaults to the last used height (or zero)\n   * @param  {GLenum} format         the data format, default RGBA\n   * @param  {GLenum} type           the data type, default UNSIGNED_BYTE (Uint8Array)\n   * @param  {ArrayBufferView} data  the raw data for this texture, or null for an empty image\n   * @param  {Boolean} genMipmaps\t   whether to generate mipmaps after uploading the data, default false\n   */\n  uploadData: function(width, height, format, type, data, genMipmaps) {\n    var gl = this.gl;\n\n    format = format || gl.RGBA;\n    type = type || gl.UNSIGNED_BYTE;\n    data = data || null; //make sure falsey value is null for texImage2D\n\n    this.width = width || width == 0 ? width : this.width;\n    this.height = height || height == 0 ? height : this.height;\n\n    this._checkPOT();\n\n    this.bind();\n\n    gl.texImage2D(\n      this.target,\n      0,\n      format,\n      this.width,\n      this.height,\n      0,\n      format,\n      type,\n      data\n    );\n\n    if (genMipmaps) gl.generateMipmap(this.target);\n  },\n\n  /**\n   * Uploads ImageData, HTMLImageElement, HTMLCanvasElement or\n   * HTMLVideoElement.\n   *\n   * @method  uploadImage\n   * @param  {Object} domObject the DOM image container\n   * @param  {GLenum} format the format, default gl.RGBA\n   * @param  {GLenum} type the data type, default gl.UNSIGNED_BYTE\n   * @param  {Boolean} genMipmaps whether to generate mipmaps after uploading the data, default false\n   */\n  uploadImage: function(domObject, format, type, genMipmaps) {\n    var gl = this.gl;\n\n    format = format || gl.RGBA;\n    type = type || gl.UNSIGNED_BYTE;\n\n    this.width = domObject.width;\n    this.height = domObject.height;\n\n    this._checkPOT();\n\n    this.bind();\n\n    gl.texImage2D(this.target, 0, format, format, type, domObject);\n\n    if (genMipmaps) gl.generateMipmap(this.target);\n  },\n\n  uploadSubImage: function() {},\n\n  /**\n   * If FORCE_POT is false, we verify this texture to see if it is valid,\n   * as per non-power-of-two rules. If it is non-power-of-two, it must have\n   * a wrap mode of CLAMP_TO_EDGE, and the minification filter must be LINEAR\n   * or NEAREST. If we don't satisfy these needs, an error is thrown.\n   *\n   * @method  _checkPOT\n   * @private\n   * @return {[type]} [description]\n   */\n  _checkPOT: function() {\n    if (!Texture.FORCE_POT) {\n      //If minFilter is anything but LINEAR or NEAREST\n      //or if wrapS or wrapT are not CLAMP_TO_EDGE...\n      var wrongFilter =\n        this.minFilter !== Texture.Filter.LINEAR &&\n        this.minFilter !== Texture.Filter.NEAREST;\n      var wrongWrap =\n        this.wrapS !== Texture.Wrap.CLAMP_TO_EDGE ||\n        this.wrapT !== Texture.Wrap.CLAMP_TO_EDGE;\n\n      if (wrongFilter || wrongWrap) {\n        if (!isPowerOfTwo(this.width) || !isPowerOfTwo(this.height))\n          throw new Error(\n            wrongFilter\n              ? \"Non-power-of-two textures cannot use mipmapping as filter\"\n              : \"Non-power-of-two textures must use CLAMP_TO_EDGE as wrap\"\n          );\n      }\n    }\n  },\n\n  /**\n   * Binds the texture. If unit is specified,\n   * it will bind the texture at the given slot\n   * (TEXTURE0, TEXTURE1, etc). If unit is not specified,\n   * it will simply bind the texture at whichever slot\n   * is currently active.\n   *\n   * @method  bind\n   * @param  {Number} unit the texture unit index, starting at 0\n   */\n  bind: function(unit) {\n    var gl = this.gl;\n    if (unit || unit === 0) gl.activeTexture(gl.TEXTURE0 + unit);\n    gl.bindTexture(this.target, this.id);\n  },\n\n  toString: function() {\n    return this.id + \":\" + this.width + \"x\" + this.height + \"\";\n  },\n\n  shape: {\n    get: function() {\n      this.__shape[0] = this.width;\n      this.__shape[1] = this.height;\n      return this.__shape;\n    },\n    set: function(shape) {\n      throw new Error(\"changing shape not supported\");\n    }\n  }\n});\n\n/**\n * A set of Filter constants that match their GL counterparts.\n * This is for convenience, to avoid the need for a GL rendering context.\n *\n * @example\n * ```\n *     Texture.Filter.NEAREST\n *     Texture.Filter.NEAREST_MIPMAP_LINEAR\n *     Texture.Filter.NEAREST_MIPMAP_NEAREST\n *     Texture.Filter.LINEAR\n *     Texture.Filter.LINEAR_MIPMAP_LINEAR\n *     Texture.Filter.LINEAR_MIPMAP_NEAREST\n * ```\n * @attribute Filter\n * @static\n * @type {Object}\n */\nTexture.Filter = {\n  NEAREST: 9728,\n  NEAREST_MIPMAP_LINEAR: 9986,\n  NEAREST_MIPMAP_NEAREST: 9984,\n  LINEAR: 9729,\n  LINEAR_MIPMAP_LINEAR: 9987,\n  LINEAR_MIPMAP_NEAREST: 9985\n};\n\n/**\n * A set of Wrap constants that match their GL counterparts.\n * This is for convenience, to avoid the need for a GL rendering context.\n *\n * @example\n * ```\n *     Texture.Wrap.CLAMP_TO_EDGE\n *     Texture.Wrap.MIRRORED_REPEAT\n *     Texture.Wrap.REPEAT\n * ```\n * @attribute Wrap\n * @static\n * @type {Object}\n */\nTexture.Wrap = {\n  CLAMP_TO_EDGE: 33071,\n  MIRRORED_REPEAT: 33648,\n  REPEAT: 10497\n};\n\n/**\n * A set of Format constants that match their GL counterparts.\n * This is for convenience, to avoid the need for a GL rendering context.\n *\n * @example\n * ```\n *     Texture.Format.RGB\n *     Texture.Format.RGBA\n *     Texture.Format.LUMINANCE_ALPHA\n * ```\n * @attribute Format\n * @static\n * @type {Object}\n */\nTexture.Format = {\n  DEPTH_COMPONENT: 6402,\n  ALPHA: 6406,\n  RGBA: 6408,\n  RGB: 6407,\n  LUMINANCE: 6409,\n  LUMINANCE_ALPHA: 6410\n};\n\n/**\n * A set of DataType constants that match their GL counterparts.\n * This is for convenience, to avoid the need for a GL rendering context.\n *\n * @example\n * ```\n *     Texture.DataType.UNSIGNED_BYTE\n *     Texture.DataType.FLOAT\n * ```\n * @attribute DataType\n * @static\n * @type {Object}\n */\nTexture.DataType = {\n  BYTE: 5120,\n  SHORT: 5122,\n  INT: 5124,\n  FLOAT: 5126,\n  UNSIGNED_BYTE: 5121,\n  UNSIGNED_INT: 5125,\n  UNSIGNED_SHORT: 5123,\n  UNSIGNED_SHORT_4_4_4_4: 32819,\n  UNSIGNED_SHORT_5_5_5_1: 32820,\n  UNSIGNED_SHORT_5_6_5: 33635\n};\n\n/**\n * The default wrap mode when creating new textures. If a custom\n * provider was specified, it may choose to override this default mode.\n *\n * @attribute {GLenum} DEFAULT_WRAP\n * @static\n * @default  Texture.Wrap.CLAMP_TO_EDGE\n */\nTexture.DEFAULT_WRAP = Texture.Wrap.CLAMP_TO_EDGE;\n\n/**\n * The default filter mode when creating new textures. If a custom\n * provider was specified, it may choose to override this default mode.\n *\n * @attribute {GLenum} DEFAULT_FILTER\n * @static\n * @default  Texture.Filter.LINEAR\n */\nTexture.DEFAULT_FILTER = Texture.Filter.NEAREST;\n\n/**\n * By default, we do some error checking when creating textures\n * to ensure that they will be \"renderable\" by WebGL. Non-power-of-two\n * textures must use CLAMP_TO_EDGE as their wrap mode, and NEAREST or LINEAR\n * as their wrap mode. Further, trying to generate mipmaps for a NPOT image\n * will lead to errors.\n *\n * However, you can disable this error checking by setting `FORCE_POT` to true.\n * This may be useful if you are running on specific hardware that supports POT\n * textures, or in some future case where NPOT textures is added as a WebGL extension.\n *\n * @attribute {Boolean} FORCE_POT\n * @static\n * @default  false\n */\nTexture.FORCE_POT = false;\n\n//default pixel store operations. Used in create()\nTexture.UNPACK_FLIP_Y = false;\nTexture.UNPACK_ALIGNMENT = 1;\nTexture.UNPACK_PREMULTIPLY_ALPHA = true;\nTexture.UNPACK_COLORSPACE_CONVERSION = undefined;\n\n//for the Image constructor we need to handle things a bit differently..\nTexture.USE_DUMMY_1x1_DATA = true;\n\n/**\n * Utility to get the number of components for the given GLenum, e.g. gl.RGBA returns 4.\n * Returns null if the specified format is not of type DEPTH_COMPONENT, ALPHA, LUMINANCE,\n * LUMINANCE_ALPHA, RGB, or RGBA.\n *\n * @method getNumComponents\n * @static\n * @param  {GLenum} format a texture format, i.e. Texture.Format.RGBA\n * @return {Number} the number of components for this format\n */\nTexture.getNumComponents = function(format) {\n  switch (format) {\n    case Texture.Format.DEPTH_COMPONENT:\n    case Texture.Format.ALPHA:\n    case Texture.Format.LUMINANCE:\n      return 1;\n    case Texture.Format.LUMINANCE_ALPHA:\n      return 2;\n    case Texture.Format.RGB:\n      return 3;\n    case Texture.Format.RGBA:\n      return 4;\n  }\n  return null;\n};\n\nmodule.exports = Texture;\n","var GLContextWrapper = require('./wrapper');\n\nfunction wrapContext(gl) {\n    //Chrome's WebGLInspector wraps it with a different class\n    //and then puts the original in 'rawgl' property\n    var rawgl = gl && gl.rawgl ? gl.rawgl : gl;\n    if (typeof window.WebGLRenderingContext !== \"undefined\" && rawgl instanceof window.WebGLRenderingContext) {\n        return new GLContextWrapper(gl);\n    } else\n        return gl;\n}\n\n/**\n * Duck-types WebGLRenderingContext / kami.WebGLContext.\n *\n * If WebGLRenderingContext is passed, the object will not have its\n * state managed during context loss/restore. If a Kami WebGLContext\n * is passed, the object will try to maintain its state during lost/restore.\n * \n * @param  {WebGLRenderingContext|kami.WebGLContext} gl the GL context\n * @return {Object|kami.WebGLContext} a wrapper that has a `gl` property\n */\nmodule.exports.wrapContext = wrapContext;\n\nmodule.exports.BaseObject = function(context) {\n    if (!context || typeof context !== \"object\")\n        throw \"valid GL context not specified\";\n\n    this.context = wrapContext(context);\n};","var int8 = new Int8Array(4);\nvar int32 = new Int32Array(int8.buffer, 0, 1);\nvar float32 = new Float32Array(int8.buffer, 0, 1);\n\n/**\n * A singleton for number utilities. \n * @class NumberUtil\n */\nvar NumberUtil = function() {\n\n};\n\n\n/**\n * Returns a float representation of the given int bits. ArrayBuffer\n * is used for the conversion.\n *\n * @method  intBitsToFloat\n * @static\n * @param  {Number} i the int to cast\n * @return {Number}   the float\n */\nNumberUtil.intBitsToFloat = function(i) {\n\tint32[0] = i;\n\treturn float32[0];\n};\n\n/**\n * Returns the int bits from the given float. ArrayBuffer is used\n * for the conversion.\n *\n * @method  floatToIntBits\n * @static\n * @param  {Number} f the float to cast\n * @return {Number}   the int bits\n */\nNumberUtil.floatToIntBits = function(f) {\n\tfloat32[0] = f;\n\treturn int32[0];\n};\n\n/**\n * Encodes ABGR int as a float, with slight precision loss.\n *\n * @method  intToFloatColor\n * @static\n * @param {Number} value an ABGR packed integer\n */\nNumberUtil.intToFloatColor = function(value) {\n\treturn NumberUtil.intBitsToFloat( value & 0xfeffffff );\n};\n\n/**\n * Returns a float encoded ABGR value from the given RGBA\n * bytes (0 - 255). Useful for saving bandwidth in vertex data.\n *\n * @method  colorToFloat\n * @static\n * @param {Number} r the Red byte (0 - 255)\n * @param {Number} g the Green byte (0 - 255)\n * @param {Number} b the Blue byte (0 - 255)\n * @param {Number} a the Alpha byte (0 - 255)\n * @return {Float32}  a Float32 of the RGBA color\n */\nNumberUtil.colorToFloat = function(r, g, b, a) {\n\tvar bits = (a << 24 | b << 16 | g << 8 | r);\n\treturn NumberUtil.intToFloatColor(bits);\n};\n\n/**\n * Returns true if the number is a power-of-two.\n *\n * @method  isPowerOfTwo\n * @param  {Number}  n the number to test\n * @return {Boolean}   true if power-of-two\n */\nNumberUtil.isPowerOfTwo = function(n) {\n\treturn (n & (n - 1)) === 0;\n};\n\n/**\n * Returns the next highest power-of-two from the specified number. \n * \n * @param  {Number} n the number to test\n * @return {Number}   the next highest power of two\n */\nNumberUtil.nextPowerOfTwo = function(n) {\n\tn--;\n\tn |= n >> 1;\n\tn |= n >> 2;\n\tn |= n >> 4;\n\tn |= n >> 8;\n\tn |= n >> 16;\n\treturn n+1;\n};\n\nmodule.exports = NumberUtil;","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import Texture from \"kami-texture2\";\nexport default ((gl, url, options) => new Promise(resolve => {\n  const image = new Image();\n  image.src = url;\n\n  image.onload = () => {\n    const texture = new Texture(gl, { ...options,\n      image\n    });\n    texture.setFilter(Texture.Filter.LINEAR, Texture.Filter.LINEAR, false);\n    resolve(texture);\n  };\n}));\nexport const Filter = Texture.Filter;","/**\n * A mesh class that wraps VBO and IBO. Mostly used internally.\n * \n * @module kami-mesh-buffer\n */\n\nvar Class = require('klasse');\nvar BaseObject = require('kami-util').BaseObject;\n\n//TODO: decouple into VBO + IBO utilities \n/**\n * \n *\n * @class  Mesh\n */\nvar Mesh = new Class({\n\n\n\t/**\n\t * A write-only property which sets both vertices and indices \n\t * flag to dirty or not. \n\t *\n\t * @property dirty\n\t * @type {Boolean}\n\t * @writeOnly\n\t */\n\tdirty: {\n\t\tset: function(val) {\n\t\t\tthis.verticesDirty = val;\n\t\t\tthis.indicesDirty = val;\n\t\t}\n\t},\n\n\t/**\n\t * Creates a new Mesh with the provided parameters.\n\t *\n\t * If numIndices is 0 or falsy, no index buffer will be used\n\t * and indices will be an empty ArrayBuffer and a null indexBuffer.\n\t * \n\t * If isStatic is true, then vertexUsage and indexUsage will\n\t * be set to gl.STATIC_DRAW. Otherwise they will use gl.DYNAMIC_DRAW.\n\t * You may want to adjust these after initialization for further control.\n\t * \n\t * @param  {WebGLContext}  context the context for management\n\t * @param  {Boolean} isStatic      a hint as to whether this geometry is static\n\t * @param  {[type]}  numVerts      [description]\n\t * @param  {[type]}  numIndices    [description]\n\t * @param  {[type]}  vertexAttribs [description]\n\t * @return {[type]}                [description]\n\t */\n\tinitialize: function Mesh(context, isStatic, numVerts, numIndices, vertexAttribs) {\n\t\t//TODO: use options here...\n\t\tif (!numVerts)\n\t\t\tthrow \"numVerts not specified, must be > 0\";\n\n\t\tBaseObject.call(this, context);\n\n\t\tthis.gl = this.context.gl;\n\t\t\n\t\tthis.numVerts = null;\n\t\tthis.numIndices = null;\n\t\t\n\t\tthis.vertices = null;\n\t\tthis.indices = null;\n\t\tthis.vertexBuffer = null;\n\t\tthis.indexBuffer = null;\n\n\t\tthis.verticesDirty = true;\n\t\tthis.indicesDirty = true;\n\t\tthis.indexUsage = null;\n\t\tthis.vertexUsage = null;\n\n\t\t/** \n\t\t * @property\n\t\t * @private\n\t\t */\n\t\tthis._vertexAttribs = null;\n\n\t\t/** \n\t\t * The stride for one vertex _in bytes_. \n\t\t * \n\t\t * @property {Number} vertexStride\n\t\t */\n\t\tthis.vertexStride = null;\n\n\t\tthis.numVerts = numVerts;\n\t\tthis.numIndices = numIndices || 0;\n\t\tthis.vertexUsage = isStatic ? this.gl.STATIC_DRAW : this.gl.DYNAMIC_DRAW;\n\t\tthis.indexUsage  = isStatic ? this.gl.STATIC_DRAW : this.gl.DYNAMIC_DRAW;\n\t\tthis._vertexAttribs = vertexAttribs || [];\n\t\t\n\t\tthis.indicesDirty = true;\n\t\tthis.verticesDirty = true;\n\n\t\t//determine the vertex stride based on given attributes\n\t\tvar totalNumComponents = 0;\n\t\tfor (var i=0; i<this._vertexAttribs.length; i++)\n\t\t\ttotalNumComponents += this._vertexAttribs[i].offsetCount;\n\t\tthis.vertexStride = totalNumComponents * 4; // in bytes\n\n\t\tthis.vertices = new Float32Array(this.numVerts);\n\t\tthis.indices = new Uint16Array(this.numIndices);\n\n\t\t//add this VBO to the managed cache\n\t\tthis.context.addManagedObject(this);\n\n\t\tthis.create();\n\t},\n\n\t//recreates the buffers on context loss\n\tcreate: function() {\n\t\tthis.gl = this.context.gl;\n\t\tvar gl = this.gl;\n\t\tthis.vertexBuffer = gl.createBuffer();\n\n\t\t//ignore index buffer if we haven't specified any\n\t\tthis.indexBuffer = this.numIndices > 0\n\t\t\t\t\t? gl.createBuffer()\n\t\t\t\t\t: null;\n\n\t\tthis.dirty = true;\n\t},\n\n\tdestroy: function() {\n\t\tthis.vertices = null;\n\t\tthis.indices = null;\n\t\tif (this.vertexBuffer && this.gl)\n\t\t\tthis.gl.deleteBuffer(this.vertexBuffer);\n\t\tif (this.indexBuffer && this.gl)\n\t\t\tthis.gl.deleteBuffer(this.indexBuffer);\n\t\tthis.vertexBuffer = null;\n\t\tthis.indexBuffer = null;\n\t\tif (this.context)\n\t\t\tthis.context.removeManagedObject(this);\n\t\tthis.gl = null;\n\t\tthis.context = null;\n\t},\n\n\t_updateBuffers: function(ignoreBind, subDataLength) {\n\t\tvar gl = this.gl;\n\n\t\t//bind our index data, if we have any\n\t\tif (this.numIndices > 0) {\n\t\t\tif (!ignoreBind)\n\t\t\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\n\n\t\t\t//update the index data\n\t\t\tif (this.indicesDirty) {\n\t\t\t\tgl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.indices, this.indexUsage);\n\t\t\t\tthis.indicesDirty = false;\n\t\t\t}\n\t\t}\n\n\t\t//bind our vertex data\n\t\tif (!ignoreBind)\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\n\n\t\t//update our vertex data\n\t\tif (this.verticesDirty) {\n\t\t\tif (subDataLength) {\n\t\t\t\t// TODO: When decoupling VBO/IBO be sure to give better subData support..\n\t\t\t\tvar view = this.vertices.subarray(0, subDataLength);\n\t\t\t\tgl.bufferSubData(gl.ARRAY_BUFFER, 0, view);\n\t\t\t} else {\n\t\t\t\tgl.bufferData(gl.ARRAY_BUFFER, this.vertices, this.vertexUsage);\t\n\t\t\t}\n\n\t\t\t\n\t\t\tthis.verticesDirty = false;\n\t\t}\n\t},\n\n\tdraw: function(primitiveType, count, offset, subDataLength) {\n\t\tif (count === 0)\n\t\t\treturn;\n\n\t\tvar gl = this.gl;\n\t\t\n\t\toffset = offset || 0;\n\n\t\t//binds and updates our buffers. pass ignoreBind as true\n\t\t//to avoid binding unnecessarily\n\t\tthis._updateBuffers(true, subDataLength);\n\n\t\tif (this.numIndices > 0) { \n\t\t\tgl.drawElements(primitiveType, count, \n\t\t\t\t\t\tgl.UNSIGNED_SHORT, offset * 2); //* Uint16Array.BYTES_PER_ELEMENT\n\t\t} else\n\t\t\tgl.drawArrays(primitiveType, offset, count);\n\t},\n\n\t//binds this mesh's vertex attributes for the given shader\n\tbind: function(shader) {\n\t\tvar gl = this.gl;\n\n\t\tvar offset = 0;\n\t\tvar stride = this.vertexStride;\n\n\t\t//bind and update our vertex data before binding attributes\n\t\tthis._updateBuffers();\n\n\t\t//for each attribtue\n\t\tfor (var i=0; i<this._vertexAttribs.length; i++) {\n\t\t\tvar a = this._vertexAttribs[i];\n\n\t\t\t//location of the attribute\n\t\t\tvar loc = a.location === null \n\t\t\t\t\t? shader.getAttributeLocation(a.name)\n\t\t\t\t\t: a.location;\n\n\t\t\t//TODO: We may want to skip unfound attribs\n\t\t\t// if (loc!==0 && !loc)\n\t\t\t// \tconsole.warn(\"WARN:\", a.name, \"is not enabled\");\n\n\t\t\t//first, enable the vertex array\n\t\t\tgl.enableVertexAttribArray(loc);\n\n\t\t\t//then specify our vertex format\n\t\t\tgl.vertexAttribPointer(loc, a.numComponents, a.type || gl.FLOAT, \n\t\t\t\t\t\t\t\t   a.normalize, stride, offset);\n\n\t\t\t//and increase the offset...\n\t\t\toffset += a.offsetCount * 4; //in bytes\n\t\t}\n\t},\n\n\tunbind: function(shader) {\n\t\tvar gl = this.gl;\n\n\t\t//for each attribtue\n\t\tfor (var i=0; i<this._vertexAttribs.length; i++) {\n\t\t\tvar a = this._vertexAttribs[i];\n\n\t\t\t//location of the attribute\n\t\t\tvar loc = a.location === null \n\t\t\t\t\t? shader.getAttributeLocation(a.name)\n\t\t\t\t\t: a.location;\n\n\t\t\t//first, enable the vertex array\n\t\t\tgl.disableVertexAttribArray(loc);\n\t\t}\n\t}\n});\n\nMesh.Attrib = new Class({\n\n\tname: null,\n\tnumComponents: null,\n\tlocation: null,\n\ttype: null,\n\n\t/**\n\t * Mesh vertex attribute holder.\n\t * \n\t * Location is optional and for advanced users that\n\t * want vertex arrays to match across shaders. Any non-numerical\n\t * value will be converted to null, and ignored. If a numerical\n\t * value is given, it will override the position of this attribute\n\t * when given to a mesh.\n\t *\n\t * @class  Mesh.Attrib\n\t * @constructor\n\t * @param {String} name the name of the attribute\n\t * @param {Number} numComponents the number of components, e.g. 2 for vec2\n\t * @param {Number} location optional attribute index location\n\t * @param {Number} type defaults to GL_FLOAT \n\t * @param {Number} normalize whether to normalize to 0-1, default false\n\t */\n\tinitialize: function(name, numComponents, location, type, normalize, offsetCount) {\n\t\tthis.name = name;\n\t\tthis.numComponents = numComponents;\n\t\tthis.location = typeof location === \"number\" ? location : null;\n\t\tthis.type = type;\n\t\tthis.normalize = Boolean(normalize);\n\t\tthis.offsetCount = typeof offsetCount === \"number\" ? offsetCount : this.numComponents;\n\t}\n});\n\n\nmodule.exports = Mesh;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n * \n * @providesModule EmitterSubscription\n * @typechecks\n */\n\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar EventSubscription = require('./EventSubscription');\n\n/**\n * EmitterSubscription represents a subscription with listener and context data.\n */\n\nvar EmitterSubscription = (function (_EventSubscription) {\n  _inherits(EmitterSubscription, _EventSubscription);\n\n  /**\n   * @param {EventSubscriptionVendor} subscriber - The subscriber that controls\n   *   this subscription\n   * @param {function} listener - Function to invoke when the specified event is\n   *   emitted\n   * @param {*} context - Optional context object to use when invoking the\n   *   listener\n   */\n\n  function EmitterSubscription(subscriber, listener, context) {\n    _classCallCheck(this, EmitterSubscription);\n\n    _EventSubscription.call(this, subscriber);\n    this.listener = listener;\n    this.context = context;\n  }\n\n  return EmitterSubscription;\n})(EventSubscription);\n\nmodule.exports = EmitterSubscription;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (process.env.NODE_ENV !== 'production') {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;","import createBatch from \"kami-batch2\";\nexport default createBatch;","/**\n * A fast and efficient 2D sprite batcher.\n * \n * @module kami-batch\n */\n\n// Requires....\nvar Class = require('klasse');\n\nvar Mesh = require('kami-mesh-buffer');\nvar ShaderProgram = require('kami-shader');\nvar BaseBatch = require('kami-base-batch');\nvar mat4 = require('gl-matrix').mat4;\n\n/**\n * A basic implementation of a batcher which draws 2D sprites.\n * This uses two triangles (quads) with indexed and interleaved\n * vertex data. Each vertex holds 5 floats (Position.xy, Color, TexCoord0.xy).\n *\n * The color is packed into a single float to reduce vertex bandwidth, and\n * the data is interleaved for best performance. We use a static index buffer,\n * and a dynamic vertex buffer that is updated with bufferSubData. \n * \n * @example\n *      //create a new batcher\n *      var batch = require('kami-batch')(context);\n *\n *      function render() {\n *          batch.begin();\n *          \n *          //draw some sprites in between begin and end...\n *          batch.draw( texture, 0, 0, 25, 32 );\n *          batch.draw( texture1, 0, 25, 42, 23 );\n * \n *          batch.end();\n *      }\n * \n * @class  SpriteBatch\n * @uses BaseBatch\n * @constructor\n * @param {WebGLContext} context the context for this batch\n * @param {Object} options the options\n * @param {Number} options.size the optional size of this batch, i.e. max number of quads\n */\nvar SpriteBatch = new Class({\n\t//inherit some stuff onto this prototype\n\tMixins: BaseBatch,\n\n\t//Constructor\n\tinitialize: function SpriteBatch(context, options) {\n\t\tif (!(this instanceof SpriteBatch))\n\t\t\treturn new SpriteBatch(context, options);\n\t\tBaseBatch.call(this, context, options);\n\n\t\t/**\n\t\t * The projection Float32Array vec2 which is\n\t\t * used to avoid some matrix calculations.\n\t\t *\n\t\t * @property projection\n\t\t * @type {Float32Array}\n\t\t */\n\t\t// this.projection = new Float32Array(2);\n\n\t\t// var ctxCanvas = this.context.gl.canvas;\n\t\t//Sets up a default projection vector so that the batch works without setProjection\n\t\t// this.projection[0] = ctxCanvas.width/2;\n\t\t// this.projection[1] = ctxCanvas.height/2;\n\t\tthis.projection = mat4.create();\n\n\t\t/**\n\t\t * The currently bound texture. Do not modify.\n\t\t * \n\t\t * @property {Texture} texture\n\t\t * @readOnly\n\t\t */\n\t\tthis.texture = null;\n\t},\n\n\t/**\n\t * This is a convenience function to set the batch's projection\n\t * matrix to an orthographic 2D projection, based on the given screen\n\t * size. This allows users to render in 2D without any need for a camera.\n\t * \n\t * @param  {[type]} width  [description]\n\t * @param  {[type]} height [description]\n\t * @return {[type]}        [description]\n\t */\n\tresize: function(width, height) {\n\t\tthis.setProjection(width / 2, height / 2);\n\t},\n\n\t/**\n\t * The number of floats per vertex for this batcher \n\t * (Position.xy + Color + TexCoord0.xy).\n\t *\n\t * @method  getVertexSize\n\t * @return {Number} the number of floats per vertex\n\t */\n\tgetVertexSize: function() {\n\t\treturn SpriteBatch.VERTEX_SIZE;\n\t},\n\n\t/**\n\t * Used internally to return the Position, Color, and TexCoord0 attributes.\n\t *\n\t * @method  _createVertexAttribuets\n\t * @protected\n\t * @return {[type]} [description]\n\t */\n\t_createVertexAttributes: function() {\n\t\tvar gl = this.context.gl;\n\n\t\treturn [\n\t\t\tnew Mesh.Attrib(ShaderProgram.POSITION_ATTRIBUTE, 2),\n\t\t\t//pack the color for smaller CPU -> GPU bandwidth\n\t\t\tnew Mesh.Attrib(\n\t\t\t\tShaderProgram.COLOR_ATTRIBUTE,\n\t\t\t\t4,\n\t\t\t\tnull,\n\t\t\t\tgl.UNSIGNED_BYTE,\n\t\t\t\ttrue,\n\t\t\t\t1\n\t\t\t),\n\t\t\tnew Mesh.Attrib(ShaderProgram.TEXCOORD_ATTRIBUTE + '0', 2)\n\t\t];\n\t},\n\n\t/**\n\t * Sets the projection vector, an x and y\n\t * defining the middle points of your stage.\n\t *\n\t * @method setProjection\n\t * @param {Number} x the x projection value\n\t * @param {Number} y the y projection value\n\t */\n\tsetProjection: function(mat4) {\n\t\tthis.projection = mat4;\n\t\tif (this.drawing && (x != oldX || y != oldY)) {\n\t\t\tthis.flush();\n\t\t\tthis.updateMatrices();\n\t\t}\n\t},\n\n\t/**\n\t * Creates a default shader for this batch.\n\t *\n\t * @method  _createShader\n\t * @protected\n\t * @return {ShaderProgram} a new instance of ShaderProgram\n\t */\n\t_createShader: function() {\n\t\tvar shader = new ShaderProgram(\n\t\t\tthis.context,\n\t\t\tSpriteBatch.DEFAULT_VERT_SHADER,\n\t\t\tSpriteBatch.DEFAULT_FRAG_SHADER\n\t\t);\n\t\tif (shader.log) console.warn('Shader Log:\\n' + shader.log);\n\t\treturn shader;\n\t},\n\n\t/**\n\t * This is called during rendering to update projection/transform\n\t * matrices and upload the new values to the shader. For example,\n\t * if the user calls setProjection mid-draw, the batch will flush\n\t * and this will be called before continuing to add items to the batch.\n\t *\n\t * You generally should not need to call this directly.\n\t * \n\t * @method  updateMatrices\n\t * @protected\n\t */\n\tupdateMatrices: function() {\n\t\tthis.shader.setUniformMatrix4('u_projection', this.projection);\n\t},\n\n\t/**\n\t * Called before rendering, and binds the current texture.\n\t * \n\t * @method _preRender\n\t * @protected\n\t */\n\t_preRender: function() {\n\t\tif (this.texture) this.texture.bind();\n\t},\n\n\t/**\n\t * Binds the shader, disables depth writing, \n\t * enables blending, activates texture unit 0, and sends\n\t * default matrices and sampler2D uniforms to the shader.\n\t *\n\t * @method  begin\n\t */\n\tbegin: function() {\n\t\t//sprite batch doesn't hold a reference to GL since it is volatile\n\t\tvar gl = this.context.gl;\n\n\t\t//This binds the shader and mesh!\n\t\tBaseBatch.prototype.begin.call(this);\n\n\t\tthis.updateMatrices(); //send projection/transform to shader\n\n\t\t//upload the sampler uniform. not necessary every flush so we just\n\t\t//do it here.\n\t\tthis.shader.setUniformi('u_texture0', 0);\n\n\t\t//disable depth mask\n\t\tgl.depthMask(false);\n\t},\n\n\t/**\n\t * Ends the sprite batcher and flushes any remaining data to the GPU.\n\t * \n\t * @method end\n\t */\n\tend: function() {\n\t\t//sprite batch doesn't hold a reference to GL since it is volatile\n\t\tvar gl = this.context.gl;\n\n\t\t//just do direct parent call for speed here\n\t\t//This binds the shader and mesh!\n\t\tBaseBatch.prototype.end.call(this);\n\n\t\tgl.depthMask(true);\n\t},\n\n\t/**\n\t * Flushes the batch to the GPU. This should be called when\n\t * state changes, such as blend functions, depth or stencil states,\n\t * shaders, and so forth.\n\t * \n\t * @method flush\n\t */\n\tflush: function() {\n\t\t//ignore flush if texture is null or our batch is empty\n\t\tif (!this.texture) return;\n\t\tif (this.idx === 0) return;\n\t\tBaseBatch.prototype.flush.call(this);\n\t\tSpriteBatch.totalRenderCalls++;\n\t},\n\n\tdrawRegion: function(region, x, y, width, height) {\n\t\tthis.draw(\n\t\t\tregion.texture,\n\t\t\tx,\n\t\t\ty,\n\t\t\twidth,\n\t\t\theight,\n\t\t\tregion.u,\n\t\t\tregion.v,\n\t\t\tregion.u2,\n\t\t\tregion.v2\n\t\t);\n\t},\n\n\t/**\n\t * Adds a sprite to this batch. The sprite is drawn in \n\t * screen-space with the origin at the upper-left corner (y-down).\n\t * \n\t * @method draw\n\t * @param  {Texture} texture the Texture\n\t * @param  {Number} x       the x position in pixels, defaults to zero\n\t * @param  {Number} y       the y position in pixels, defaults to zero\n\t * @param  {Number} width   the width in pixels, defaults to the texture width\n\t * @param  {Number} height  the height in pixels, defaults to the texture height\n\t * @param  {Number} u1      the first U coordinate, default zero\n\t * @param  {Number} v1      the first V coordinate, default zero\n\t * @param  {Number} u2      the second U coordinate, default one\n\t * @param  {Number} v2      the second V coordinate, default one\n\t */\n\tdraw: function(\n\t\ttexture,\n\t\tx,\n\t\ty,\n\t\twidth,\n\t\theight,\n\t\toriginX = 0,\n\t\toriginY = 0,\n\t\trotation = 0,\n\t\tscaleX = 1,\n\t\tscaleY = 1,\n\t\tu1 = 0,\n\t\tv1 = 0,\n\t\tu2 = 1,\n\t\tv2 = 1\n\t) {\n\t\tif (!this.drawing)\n\t\t\tthrow 'Illegal State: trying to draw a batch before begin()';\n\n\t\t//don't draw anything if GL tex doesn't exist..\n\t\tif (!texture) return;\n\n\t\tif (this.texture === null || this.texture.id !== texture.id) {\n\t\t\t//new texture.. flush previous data\n\t\t\tthis.flush();\n\t\t\tthis.texture = texture;\n\t\t} else if (this.idx == this.vertices.length) {\n\t\t\tthis.flush(); //we've reached our max, flush before pushing more data\n\t\t}\n\n\t\twidth = width === 0 ? width : width || texture.width;\n\t\theight = height === 0 ? height : height || texture.height;\n\t\tx = x || 0;\n\t\ty = y || 0;\n\n\t\tvar x1 = -originX;\n\t\tvar x2 = width - originX;\n\t\tvar x3 = width - originX;\n\t\tvar x4 = -originX;\n\n\t\tvar y1 = -originY;\n\t\tvar y2 = -originY;\n\t\tvar y3 = height - originY;\n\t\tvar y4 = height - originY;\n\n\t\tvar c = this.color;\n\n\t\tif (scaleX !== 1) {\n\t\t\tx1 = x1 * scaleX;\n\t\t\tx2 = x2 * scaleX;\n\t\t\tx3 = x3 * scaleX;\n\t\t\tx4 = x4 * scaleX;\n\t\t}\n\n\t\tif (scaleY !== 1) {\n\t\t\ty1 = y1 * scaleY;\n\t\t\ty2 = y2 * scaleY;\n\t\t\ty3 = y3 * scaleY;\n\t\t\ty4 = y4 * scaleY;\n\t\t}\n\n\t\tif (rotation !== 0) {\n\t\t\tvar cos = Math.cos(rotation);\n\t\t\tvar sin = Math.sin(rotation);\n\n\t\t\tvar rotatedX1 = cos * x1 - sin * y1;\n\t\t\tvar rotatedY1 = sin * x1 + cos * y1;\n\n\t\t\tvar rotatedX2 = cos * x2 - sin * y2;\n\t\t\tvar rotatedY2 = sin * x2 + cos * y2;\n\n\t\t\tvar rotatedX3 = cos * x3 - sin * y3;\n\t\t\tvar rotatedY3 = sin * x3 + cos * y3;\n\n\t\t\tvar rotatedX4 = cos * x4 - sin * y4;\n\t\t\tvar rotatedY4 = sin * x4 + cos * y4;\n\n\t\t\tx1 = rotatedX1;\n\t\t\tx2 = rotatedX2;\n\t\t\tx3 = rotatedX3;\n\t\t\tx4 = rotatedX4;\n\n\t\t\ty1 = rotatedY1;\n\t\t\ty2 = rotatedY2;\n\t\t\ty3 = rotatedY3;\n\t\t\ty4 = rotatedY4;\n\t\t}\n\n\t\tx1 += x + originX;\n\t\tx2 += x + originX;\n\t\tx3 += x + originX;\n\t\tx4 += x + originX;\n\n\t\ty1 += y + originY;\n\t\ty2 += y + originY;\n\t\ty3 += y + originY;\n\t\ty4 += y + originY;\n\n\t\t//xy\n\t\tthis.vertices[this.idx++] = x1;\n\t\tthis.vertices[this.idx++] = y1;\n\t\t//color\n\t\tthis.vertices[this.idx++] = c;\n\t\t//uv\n\t\tthis.vertices[this.idx++] = u1;\n\t\tthis.vertices[this.idx++] = v1;\n\n\t\t//xy\n\t\tthis.vertices[this.idx++] = x2;\n\t\tthis.vertices[this.idx++] = y2;\n\t\t//color\n\t\tthis.vertices[this.idx++] = c;\n\t\t//uv\n\t\tthis.vertices[this.idx++] = u2;\n\t\tthis.vertices[this.idx++] = v1;\n\n\t\t//xy\n\t\tthis.vertices[this.idx++] = x3;\n\t\tthis.vertices[this.idx++] = y3;\n\t\t//color\n\t\tthis.vertices[this.idx++] = c;\n\t\t//uv\n\t\tthis.vertices[this.idx++] = u2;\n\t\tthis.vertices[this.idx++] = v2;\n\n\t\t//xy\n\t\tthis.vertices[this.idx++] = x4;\n\t\tthis.vertices[this.idx++] = y4;\n\t\t//color\n\t\tthis.vertices[this.idx++] = c;\n\t\t//uv\n\t\tthis.vertices[this.idx++] = u1;\n\t\tthis.vertices[this.idx++] = v2;\n\t},\n\n\t/**\n\t * Adds a single quad mesh to this sprite batch from the given\n\t * array of vertices. The sprite is drawn in \n\t * screen-space with the origin at the upper-left corner (y-down).\n\t *\n\t * This reads 20 interleaved floats from the given offset index, in the format\n\t *\n\t *  { x, y, color, u, v,\n\t *      ...  }\n\t *\n\t * @method  drawVertices\n\t * @param {Texture} texture the Texture object\n\t * @param {Float32Array} verts an array of vertices\n\t * @param {Number} off the offset into the vertices array to read from\n\t */\n\tdrawVertices: function(texture, verts, off) {\n\t\tif (!this.drawing)\n\t\t\tthrow 'Illegal State: trying to draw a batch before begin()';\n\n\t\t//don't draw anything if GL tex doesn't exist..\n\t\tif (!texture) return;\n\n\t\tif (this.texture != texture) {\n\t\t\t//new texture.. flush previous data\n\t\t\tthis.flush();\n\t\t\tthis.texture = texture;\n\t\t} else if (this.idx == this.vertices.length) {\n\t\t\tthis.flush(); //we've reached our max, flush before pushing more data\n\t\t}\n\n\t\toff = off || 0;\n\t\t//TODO: use a loop here?\n\t\t//xy\n\t\tthis.vertices[this.idx++] = verts[off++];\n\t\tthis.vertices[this.idx++] = verts[off++];\n\t\t//color\n\t\tthis.vertices[this.idx++] = verts[off++];\n\t\t//uv\n\t\tthis.vertices[this.idx++] = verts[off++];\n\t\tthis.vertices[this.idx++] = verts[off++];\n\n\t\t//xy\n\t\tthis.vertices[this.idx++] = verts[off++];\n\t\tthis.vertices[this.idx++] = verts[off++];\n\t\t//color\n\t\tthis.vertices[this.idx++] = verts[off++];\n\t\t//uv\n\t\tthis.vertices[this.idx++] = verts[off++];\n\t\tthis.vertices[this.idx++] = verts[off++];\n\n\t\t//xy\n\t\tthis.vertices[this.idx++] = verts[off++];\n\t\tthis.vertices[this.idx++] = verts[off++];\n\t\t//color\n\t\tthis.vertices[this.idx++] = verts[off++];\n\t\t//uv\n\t\tthis.vertices[this.idx++] = verts[off++];\n\t\tthis.vertices[this.idx++] = verts[off++];\n\n\t\t//xy\n\t\tthis.vertices[this.idx++] = verts[off++];\n\t\tthis.vertices[this.idx++] = verts[off++];\n\t\t//color\n\t\tthis.vertices[this.idx++] = verts[off++];\n\t\t//uv\n\t\tthis.vertices[this.idx++] = verts[off++];\n\t\tthis.vertices[this.idx++] = verts[off++];\n\t}\n});\n\n/**\n * The default vertex size, i.e. number of floats per vertex.\n * @attribute  VERTEX_SIZE\n * @static\n * @final\n * @type {Number}\n * @default  5\n */\nSpriteBatch.VERTEX_SIZE = 5;\n\n/**\n * Incremented after each draw call, can be used for debugging.\n *\n *     SpriteBatch.totalRenderCalls = 0;\n *\n *     ... draw your scene ...\n *\n *     console.log(\"Draw calls per frame:\", SpriteBatch.totalRenderCalls);\n *\n * \n * @attribute  totalRenderCalls\n * @static\n * @type {Number}\n * @default  0\n */\nSpriteBatch.totalRenderCalls = 0;\n\nSpriteBatch.DEFAULT_FRAG_SHADER = [\n\t'precision mediump float;',\n\t'varying vec2 vTexCoord0;',\n\t'varying vec4 vColor;',\n\t'uniform sampler2D u_texture0;',\n\n\t'void main(void) {',\n\t'   gl_FragColor = texture2D(u_texture0, vTexCoord0) * vColor;',\n\t'}'\n].join('\\n');\n\nSpriteBatch.DEFAULT_VERT_SHADER = [\n\t'attribute vec4 ' + ShaderProgram.POSITION_ATTRIBUTE + ';',\n\t'attribute vec4 ' + ShaderProgram.COLOR_ATTRIBUTE + ';',\n\t'attribute vec2 ' + ShaderProgram.TEXCOORD_ATTRIBUTE + '0;',\n\n\t'uniform mat4 u_projection;',\n\t'varying vec2 vTexCoord0;',\n\t'varying vec4 vColor;',\n\n\t'void main(void) {', ///TODO: use a projection and transform matrix\n\t'   gl_Position =  u_projection * ' + ShaderProgram.POSITION_ATTRIBUTE + ';',\n\t'   vTexCoord0 = ' + ShaderProgram.TEXCOORD_ATTRIBUTE + '0;',\n\t'   vColor = ' + ShaderProgram.COLOR_ATTRIBUTE + ';',\n\t'   vColor.a = vColor.a * (256.0/255.0);', //this is so the alpha sits at 0.0 or 1.0\n\t'}'\n].join('\\n');\n\nmodule.exports = SpriteBatch;\n","import { EventEmitter } from \"fbemitter\";\nexport default class InputHandler {\n  constructor(canvas) {\n    this.canvas = canvas;\n    this.lastX = 0;\n    this.lastY = 0;\n    this.touched = false;\n    const emitter = this.emitter = new EventEmitter();\n\n    this.mouseDownHandler = evt => {\n      this.touched = true;\n      this.handleMove(evt);\n      emitter.emit(\"touchStart\", this.getX(), this.getY());\n    };\n\n    this.mouseUpHandler = evt => {\n      this.touched = false;\n      emitter.emit(\"touchEnd\");\n    };\n\n    this.mouseMoveHandler = evt => {\n      this.handleMove(evt);\n      emitter.emit(\"touchMove\", this.getX(), this.getY());\n    };\n\n    this.touchStartHandler = evt => {\n      evt.preventDefault(); // TODO: handle multi touch\n\n      let touch = evt.touches[0];\n      this.canvas.dispatchEvent(new MouseEvent(\"mousedown\", {\n        clientX: touch.clientX,\n        clientY: touch.clientY\n      }));\n    };\n\n    this.touchEndHandler = evt => {\n      evt.preventDefault();\n      this.canvas.dispatchEvent(new MouseEvent(\"mouseup\"));\n    };\n\n    this.touchMoveHandler = evt => {\n      evt.preventDefault();\n      let touch = evt.touches[0];\n      this.canvas.dispatchEvent(new MouseEvent(\"mousemove\", {\n        clientX: touch.clientX,\n        clientY: touch.clientY\n      }));\n    };\n\n    this.canvas.addEventListener(\"mousedown\", this.mouseDownHandler, false);\n    this.canvas.addEventListener(\"mouseup\", this.mouseUpHandler, false);\n    this.canvas.addEventListener(\"mousemove\", this.mouseMoveHandler, false);\n    this.canvas.addEventListener(\"touchstart\", this.touchStartHandler, false);\n    this.canvas.addEventListener(\"touchend\", this.touchEndHandler, false);\n    this.canvas.addEventListener(\"touchmove\", this.touchMoveHandler, false);\n  }\n\n  cleanup() {\n    this.canvas.removeEventListener(\"mousedown\", this.mouseDownHandler);\n    this.canvas.removeEventListener(\"mouseup\", this.mouseUpHandler);\n    this.canvas.removeEventListener(\"mousemove\", this.mouseMoveHandler);\n    this.canvas.removeEventListener(\"touchstart\", this.touchStartHandler);\n    this.canvas.removeEventListener(\"touchend\", this.touchEndHandler);\n    this.canvas.removeEventListener(\"touchmove\", this.touchMoveHandler);\n  }\n\n  addEventListener(event, listener) {\n    this.emitter.addListener(event, listener);\n  }\n\n  handleMove(evt) {\n    const rect = this.canvas.getBoundingClientRect();\n    const x = evt.clientX - rect.left;\n    const y = evt.clientY - rect.top;\n    this.lastX = x;\n    this.lastY = y;\n  }\n\n  getX() {\n    return this.lastX;\n  }\n\n  getY() {\n    return this.lastY;\n  }\n\n  isTouched() {\n    return this.touched;\n  }\n\n}","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\nvar fbemitter = {\n  EventEmitter: require('./lib/BaseEventEmitter'),\n  EmitterSubscription : require('./lib/EmitterSubscription')\n};\n\nmodule.exports = fbemitter;\n","/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Type} type Array type, such as Float32Array or Array\r\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\n\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {mat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {mat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {vec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {quat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {mat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @param {vec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\n\nexport function perspective(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function ortho(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n;\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {mat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' + a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\n}\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {mat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","export const project = (out, vec3, mat4) => {\n  const [x, y, z] = vec3;\n  const m = mat4;\n  const a00 = m[0],\n        a01 = m[1],\n        a02 = m[2],\n        a03 = m[3],\n        a10 = m[4],\n        a11 = m[5],\n        a12 = m[6],\n        a13 = m[7],\n        a20 = m[8],\n        a21 = m[9],\n        a22 = m[10],\n        a23 = m[11],\n        a30 = m[12],\n        a31 = m[13],\n        a32 = m[14],\n        a33 = m[15];\n  const l_w = 1 / (x * a03 + y * a13 + z * a23 + a33);\n  out[0] = (x * a00 + y * a10 + z * a20 + a30) * l_w;\n  out[1] = (x * a01 + y * a11 + z * a21 + a31) * l_w;\n  out[2] = (x * a02 + y * a12 + z * a22 + a32) * l_w;\n  return out;\n};\nexport const unproject = (out, vec3, invMat4, viewX, viewY, viewWidth, viewHeight) => {\n  let [x, y, z] = vec3;\n  x = x - viewX;\n  y = viewHeight - y - 1;\n  y = y - viewY;\n  out[0] = 2 * x / viewWidth - 1;\n  out[1] = 2 * y / viewHeight - 1;\n  out[2] = 2 * z - 1;\n  return project(out, out, invMat4);\n};","import { mat4 } from 'gl-matrix';\nimport { unproject } from './mathUtils';\nexport default ((width, height, viewportWidth, viewportHeight) => {\n  const combined = mat4.create();\n  mat4.ortho(combined, 0, width, height, 0, 0, 1);\n  const invOrtho = mat4.create();\n  mat4.invert(invOrtho, combined);\n  const transform = mat4.create();\n  const tmp3 = [0, 0, 0];\n  const origin = [];\n  const scaleVec = [];\n  const negOriginVec = [];\n  const translateVec = [];\n  return {\n    combined,\n\n    setMatrix(mat) {\n      mat4.copy(combined, mat);\n      mat4.invert(invOrtho, combined);\n    },\n\n    unprojectVector2(out, input) {\n      tmp3[0] = input[0];\n      tmp3[1] = input[1];\n      tmp3[2] = 0;\n      unproject(tmp3, tmp3, invOrtho, 0, 0, viewportWidth, viewportHeight);\n      out[0] = tmp3[0];\n      out[1] = tmp3[1];\n    },\n\n    resize(width, height) {\n      mat4.ortho(combined, 0, width, height, 0, 0, 1);\n      mat4.invert(invOrtho, combined);\n    },\n\n    translate(x, y) {\n      translateVec.length = 0;\n      translateVec[0] = x;\n      translateVec[1] = y;\n      translateVec[2] = 0;\n      mat4.translate(combined, combined, translateVec);\n      mat4.invert(invOrtho, combined);\n    },\n\n    scale(originX, originY, scale) {\n      origin.length = 0;\n      origin[0] = originX;\n      origin[1] = originY;\n      origin[2] = 0;\n      scaleVec.length = 0;\n      scaleVec[0] = scale;\n      scaleVec[1] = scale;\n      scaleVec[2] = 1;\n      negOriginVec.length = 0;\n      negOriginVec[0] = -originX;\n      negOriginVec[1] = -originY;\n      negOriginVec[2] = 0;\n      mat4.identity(transform);\n      mat4.translate(transform, transform, origin);\n      mat4.scale(transform, transform, scaleVec);\n      mat4.translate(transform, transform, negOriginVec);\n      mat4.mul(combined, combined, transform);\n      mat4.invert(invOrtho, combined);\n    }\n\n  };\n});","export default class TextureRegion {\n  constructor(tex, x, y, width, height, extraData, invTexWidth, invTexHeight) {\n    if (!invTexWidth || !invTexHeight) {\n      invTexWidth = 1 / tex.width;\n      invTexHeight = 1 / tex.height;\n    }\n\n    const u = x * invTexWidth;\n    const v = y * invTexHeight;\n    const u2 = (x + width) * invTexWidth;\n    const v2 = (y + height) * invTexHeight;\n    this.texture = tex;\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n    this.u = u;\n    this.v = v;\n    this.u2 = u2;\n    this.v2 = v2;\n\n    for (let key in extraData) {\n      this[key] = extraData[key];\n    }\n  }\n\n  draw(batch, x, y, width, height, originX = 0, originY = 0, rotation = 0, scaleX = 1, scaleY = 1) {\n    batch.draw(this.texture, x, y, width, height, originX, originY, rotation, scaleX, scaleY, this.u, this.v, this.u2, this.v2);\n  }\n\n}","import loadTexture from \"./loadTexture\";\nimport TextureRegion from \"./TextureRegion\";\n\nfunction concatAndResolveUrl(url, concat) {\n  let url1 = url.split(\"/\");\n  let url2 = concat.split(\"/\");\n  let url3 = [];\n\n  for (let i = 0, l = url1.length; i < l; i++) {\n    if (url1[i] === \"..\") {\n      url3.pop();\n    } else if (url1[i] === \".\") {\n      continue;\n    } else {\n      url3.push(url1[i]);\n    }\n  }\n\n  for (let i = 0, l = url2.length; i < l; i++) {\n    if (url2[i] === \"..\") {\n      url3.pop();\n    } else if (url2[i] === \".\") {\n      continue;\n    } else {\n      url3.push(url2[i]);\n    }\n  }\n\n  return url3.join(\"/\");\n}\n\nconst TextureWrap = {\n  ClampToEdge: 0,\n  Repeat: 1\n};\nexport default (async (gl, packFileUrl, textureOptions) => {\n  const packFileContent = await fetch(packFileUrl).then(res => res.text());\n  const pages = [];\n  const regionsData = [];\n  let pageImage;\n  const lines = packFileContent.split(\"\\n\");\n  let i = 0;\n  let tuple;\n\n  while (true) {\n    let line = lines[i];\n\n    if (line === undefined) {\n      break;\n    }\n\n    if (line.trim().length === 0) {\n      pageImage = null;\n    } else if (pageImage === null) {\n      const file = concatAndResolveUrl(packFileUrl, `../${line}`);\n      i++;\n      line = lines[i];\n      tuple = line.split(\":\")[1].split(\",\").map(s => s.trim());\n      const width = parseInt(tuple[0], 10);\n      const height = parseInt(tuple[1], 10);\n      i++;\n      line = lines[i];\n      tuple = line.split(\":\")[1].split(\",\").map(s => s.trim());\n      const format = tuple[0];\n      i++;\n      line = lines[i];\n      tuple = line.split(\":\")[1].split(\",\").map(s => s.trim());\n      const [min, max] = tuple;\n      i++;\n      line = lines[i];\n      tuple = line.split(\":\")[1].split(\",\").map(s => s.trim());\n      const direction = tuple[0];\n      let repeatX = TextureWrap.ClampToEdge;\n      let repeatY = TextureWrap.ClampToEdge;\n\n      if (direction === \"x\") {\n        repeatX = TextureWrap.Repeat;\n      } else if (direction === \"y\") {\n        repeatY = TextureWrap.Repeat;\n      } else if (direction === \"xy\") {\n        repeatX = TextureWrap.Repeat;\n        repeatY = TextureWrap.Repeat;\n      }\n\n      const mipMaps = min !== \"Nearest\" && min !== \"Linear\";\n      pageImage = {\n        file,\n        width,\n        height,\n        format,\n        mipMaps,\n        min,\n        max,\n        direction,\n        repeatX,\n        repeatY\n      };\n      pages.push(pageImage);\n    } else {\n      const name = line;\n      i++;\n      line = lines[i];\n      tuple = line.split(\":\")[1].split(\",\").map(s => s.trim());\n      const rotate = tuple[0] === \"true\";\n      i++;\n      line = lines[i];\n      tuple = line.split(\":\")[1].split(\",\").map(s => s.trim());\n      const left = parseInt(tuple[0], 10);\n      const top = parseInt(tuple[1], 10);\n      i++;\n      line = lines[i];\n      tuple = line.split(\":\")[1].split(\",\").map(s => s.trim());\n      const width = parseInt(tuple[0], 10);\n      const height = parseInt(tuple[1], 10);\n      const region = {\n        name,\n        rotate,\n        left,\n        top,\n        width,\n        height,\n        page: pageImage\n      };\n      i++;\n      line = lines[i];\n      tuple = line.split(\":\")[1].split(\",\").map(s => s.trim());\n\n      if (tuple.length === 4) {\n        region.splits = tuple.map(i => parseInt(i, 10));\n        i++;\n        line = lines[i];\n        tuple = line.split(\":\")[1].split(\",\").map(s => s.trim());\n\n        if (tuple.length === 4) {\n          region.pads = tuple.map(i => parseInt(i, 10));\n          i++;\n          line = lines[i];\n          tuple = line.split(\":\")[1].split(\",\").map(s => s.trim());\n        }\n      }\n\n      region.originalWidth = parseInt(tuple[0], 10);\n      region.originalHeight = parseInt(tuple[1], 10);\n      i++;\n      line = lines[i];\n      tuple = line.split(\":\")[1].split(\",\").map(s => s.trim());\n      region.offsetX = parseInt(tuple[0], 10);\n      region.offsetY = parseInt(tuple[1], 10);\n      i++;\n      line = lines[i];\n      tuple = line.split(\":\")[1].split(\",\").map(s => s.trim());\n      region.index = parseInt(tuple[0], 10);\n      regionsData.push(region);\n    }\n\n    i++;\n  }\n\n  for (let page of pages) {\n    page.texture = await loadTexture(gl, page.file, textureOptions);\n    page.invTexWidth = 1 / page.texture.width;\n    page.invTexHeight = 1 / page.texture.height;\n  }\n\n  const regions = [];\n\n  for (let regionData of regionsData) {\n    const {\n      left: x,\n      top: y\n    } = regionData;\n    const width = regionData.rotate ? regionData.height : regionData.width;\n    const height = regionData.rotate ? regionData.width : regionData.height;\n    const {\n      texture,\n      invTexWidth,\n      invTexHeight\n    } = regionData.page;\n    regions.push(new TextureRegion(texture, x, y, width, height, regionData, invTexWidth, invTexHeight));\n  }\n\n  return {\n    getPages() {\n      return pages;\n    },\n\n    getRegions() {\n      return regions;\n    },\n\n    findRegion(name, index) {\n      for (let i = 0; i < regions.length; i++) {\n        let region = regions[i];\n        if (region.name !== name) continue;\n        if (index !== undefined && region.index !== index) continue;\n        return region;\n      }\n\n      return null;\n    },\n\n    findRegions(name) {\n      return regions.filter(region => region.name === name).sort((a, b) => a.index - b.index);\n    }\n\n  };\n});","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","var Class = require('klasse');\n\nvar GLContextWrapper = new Class({\n    \n    initialize: function GLContextWrapper(gl) {\n        this.gl = gl;\n    },\n\n    addManagedObject: function(e) { },\n    removeManagedObject: function(e) { },\n\n    width: {\n        get: function() {\n            return this.gl.canvas.width;\n        },\n        set: function(width) {\n            this.gl.canvas.width = width;\n        }\n    },\n\n    height: {\n        get: function() {\n            return this.gl.canvas.height;\n        },\n        set: function(height) {\n            this.gl.canvas.height = height;\n        }\n    }\n});\n\nmodule.exports = GLContextWrapper;","/**\n * Shader utilities for kami.\n * \n * @module kami-shader\n */\n\nvar Class = require('klasse');\nvar compileShader = require('webgl-compile-shader');\nvar wrapContext = require('kami-util').wrapContext;\n\nvar ShaderProgram = new Class({\n\t\n\t/**\n\t * Creates a new ShaderProgram from the given source, and an optional map of attribute\n\t * locations as <name, index> pairs.\n\t *\n\t * _Note:_ Chrome version 31 was giving me issues with attribute locations -- you may\n\t * want to omit this to let the browser pick the locations for you.\t\n\t *\n\t * @class  ShaderProgram\n\t * @constructor\n\t * @param  {WebGLRenderingContext|WebGLContext} context      the context to manage this object\n\t * @param  {String} vertSource         the vertex shader source\n\t * @param  {String} fragSource         the fragment shader source\n\t * @param  {Object} attributeLocations the attribute locations\n\t */\n\tinitialize: function ShaderProgram(context, vertSource, fragSource, attributeLocations) {\n\t\tif (!vertSource || !fragSource)\n\t\t\tthrow \"vertex and fragment shaders must be defined\";\n\t\tif (!context || typeof context !== \"object\")\n\t\t\tthrow \"valid GL context not specified to ShaderProgram\";\n\n\t\tthis.context = wrapContext(context);\n\n\t\tthis.vertShader = null;\n\t\tthis.fragShader = null;\n\t\tthis.program = null;\n\t\tthis.log = \"\";\n\n\t\tthis.uniformCache = null;\n\t\tthis.attributeCache = null;\n\n\t\tthis.attributeLocations = attributeLocations;\n\n\t\t//We trim so that the GLSL line numbers are\n\t\t//accurate on shader log\n\t\tthis.vertSource = vertSource.trim();\n\t\tthis.fragSource = fragSource.trim();\n\n\t\t//Adds this shader to the context, to be managed\n\t\t//This has no effect if the passed context is not a kami-context type\n\t\tthis.context.addManagedObject(this);\n\t\tthis.create();\n\t},\n\n\t/** \n\t * This is called during the ShaderProgram constructor,\n\t * and may need to be called again after context loss and restore.\n\t * \n\t * @method  create\n\t */\n\tcreate: function() {\n\t\tthis.gl = this.context.gl;\n\t\tthis._compileShaders();\n\t},\n\n\t//Compiles the shaders, throwing an error if the program was invalid.\n\t_compileShaders: function() {\n\t\tvar gl = this.gl; \n\t\t\n\t\tvar info = compileShader({\n\t\t\tgl: gl,\n\t\t\tvertex: this.vertSource,\n\t\t\tfragment: this.fragSource,\n\t\t\tverbose: ShaderProgram.VERBOSE_COMPILE,\n\t\t\tattributeLocations: this.attributeLocations\n\t\t});\n\n\t\tthis.log = info.log;\n\t\tthis.program = info.program;\n\t\tthis.vertShader = info.vertex;\n\t\tthis.fragShader = info.fragment;\n\t\t\n\t\tif (ShaderProgram.VERBOSE_COMPILE && this.log)\n\t\t\tconsole.warn(this.log);\n\n\t\tthis._fetchUniforms();\n\t\tthis._fetchAttributes();\n\t},\n\n\t_fetchUniforms: function() {\n\t\tvar gl = this.gl;\n\n\t\tthis.uniformCache = {};\n\n\t\tvar len = gl.getProgramParameter(this.program, gl.ACTIVE_UNIFORMS);\n\t\tif (!len) //null or zero\n\t\t\treturn;\n\n\t\tfor (var i=0; i<len; i++) {\n\t\t\tvar info = gl.getActiveUniform(this.program, i);\n\t\t\tif (info === null) \n\t\t\t\tcontinue;\n\t\t\tvar name = info.name;\n\t\t\tvar location = gl.getUniformLocation(this.program, name);\n\t\t\t\n\t\t\tthis.uniformCache[name] = {\n\t\t\t\tsize: info.size,\n\t\t\t\ttype: info.type,\n\t\t\t\tlocation: location\n\t\t\t};\n\t\t}\n\t},\n\n\t_fetchAttributes: function() { \n\t\tvar gl = this.gl; \n\n\t\tthis.attributeCache = {};\n\n\t\tvar len = gl.getProgramParameter(this.program, gl.ACTIVE_ATTRIBUTES);\n\t\tif (!len) //null or zero\n\t\t\treturn;\t\n\n\t\tfor (var i=0; i<len; i++) {\n\t\t\tvar info = gl.getActiveAttrib(this.program, i);\n\t\t\tif (info === null) \n\t\t\t\tcontinue;\n\t\t\tvar name = info.name;\n\n\t\t\t//the attrib location is a simple index\n\t\t\tvar location = gl.getAttribLocation(this.program, name);\n\t\t\t\n\t\t\tthis.attributeCache[name] = {\n\t\t\t\tsize: info.size,\n\t\t\t\ttype: info.type,\n\t\t\t\tlocation: location\n\t\t\t};\n\t\t}\n\t},\n\n\t/**\n\t * Called to bind this shader. Note that there is no \"unbind\" since\n\t * technically such a thing is not possible in the programmable pipeline.\n\t *\n\t * You must bind a shader before settings its uniforms.\n\t * \n\t * @method bind\n\t */\n\tbind: function() {\n\t\tthis.gl.useProgram(this.program);\n\t},\n\n\n\t/**\n\t * Destroys this shader and its resources. You should not try to use this\n\t * after destroying it.\n\t * @method  destroy\n\t */\n\tdestroy: function() {\n\t\tif (this.context)\n\t\t\tthis.context.removeManagedObject(this);\n\n\t\tif (this.gl && this.program) {\n\t\t\tvar gl = this.gl;\n\n\t\t    gl.detachShader(this.program, this.vertShader);\n\t\t    gl.detachShader(this.program, this.fragShader);\n\t\t    gl.deleteShader(this.vertShader);\n\t\t    gl.deleteShader(this.fragShader);\n\n\t\t\tgl.deleteProgram(this.program);\n\t\t}\n\t\tthis.attributeCache = null;\n\t\tthis.uniformCache = null;\n\t\tthis.vertShader = null;\n\t\tthis.fragShader = null;\n\t\tthis.program = null;\n\t\tthis.gl = null;\n\t\tthis.context = null;\n\t},\n\n\t/**\n\t * Returns the cached uniform info (size, type, location).\n\t * If the uniform is not found in the cache, it is assumed\n\t * to not exist, and this method returns null.\n\t *\n\t * This may return null even if the uniform is defined in GLSL:\n\t * if it is _inactive_ (i.e. not used in the program) then it may\n\t * be optimized out.\n\t *\n\t * @method  getUniformInfo\n\t * @param  {String} name the uniform name as defined in GLSL\n\t * @return {Object} an object containing location, size, and type\n\t */\n\tgetUniformInfo: function(name) {\n\t\treturn this.uniformCache[name] || null; \n\t},\n\n\t/**\n\t * Returns the cached attribute info (size, type, location).\n\t * If the attribute is not found in the cache, it is assumed\n\t * to not exist, and this method returns null.\n\t *\n\t * This may return null even if the attribute is defined in GLSL:\n\t * if it is _inactive_ (i.e. not used in the program or disabled) \n\t * then it may be optimized out.\n\t *\n\t * @method  getAttributeInfo\n\t * @param  {String} name the attribute name as defined in GLSL\n\t * @return {object} an object containing location, size and type\n\t */\n\tgetAttributeInfo: function(name) {\n\t\treturn this.attributeCache[name] || null; \n\t},\n\n\n\t/**\n\t * Returns the cached uniform location object.\n\t * If the uniform is not found, this method returns null.\n\t *\n\t * @method  getAttributeLocation\n\t * @param  {String} name the uniform name as defined in GLSL\n\t * @return {GLint} the location object\n\t */\n\tgetAttributeLocation: function(name) { //TODO: make faster, don't cache\n\t\tvar info = this.getAttributeInfo(name);\n\t\treturn info ? info.location : null;\n\t},\n\n\t/**\n\t * Returns the cached uniform location object, assuming it exists\n\t * and is active. Note that uniforms may be inactive if \n\t * the GLSL compiler deemed them unused.\n\t *\n\t * @method  getUniformLocation\n\t * @param  {String} name the uniform name as defined in GLSL\n\t * @return {WebGLUniformLocation} the location object\n\t */\n\tgetUniformLocation: function(name) {\n\t\tvar info = this.getUniformInfo(name);\n\t\treturn info ? info.location : null;\n\t},\n\n\t/**\n\t * Returns true if the uniform is active and found in this\n\t * compiled program. Note that uniforms may be inactive if \n\t * the GLSL compiler deemed them unused.\n\t *\n\t * @method  hasUniform\n\t * @param  {String}  name the uniform name\n\t * @return {Boolean} true if the uniform is found and active\n\t */\n\thasUniform: function(name) {\n\t\treturn this.getUniformInfo(name) !== null;\n\t},\n\n\t/**\n\t * Returns true if the attribute is active and found in this\n\t * compiled program.\n\t *\n\t * @method  hasAttribute\n\t * @param  {String}  name the attribute name\n\t * @return {Boolean} true if the attribute is found and active\n\t */\n\thasAttribute: function(name) {\n\t\treturn this.getAttributeInfo(name) !== null;\n\t},\n\n\t/**\n\t * Returns the uniform value by name.\n\t *\n\t * @method  getUniform\n\t * @param  {String} name the uniform name as defined in GLSL\n\t * @return {any} The value of the WebGL uniform\n\t */\n\tgetUniform: function(name) {\n\t\treturn this.gl.getUniform(this.program, this.getUniformLocation(name));\n\t},\n\n\t/**\n\t * Returns the uniform value at the specified WebGLUniformLocation.\n\t *\n\t * @method  getUniformAt\n\t * @param  {WebGLUniformLocation} location the location object\n\t * @return {any} The value of the WebGL uniform\n\t */\n\tgetUniformAt: function(location) {\n\t\treturn this.gl.getUniform(this.program, location);\n\t},\n\n\t/**\n\t * A convenience method to set uniformi from the given arguments.\n\t * We determine which GL call to make based on the number of arguments\n\t * passed. For example, `setUniformi(\"var\", 0, 1)` maps to `gl.uniform2i`.\n\t * \n\t * @method  setUniformi\n\t * @param {String} name        \t\tthe name of the uniform\n\t * @param {GLint} x  the x component for ints\n\t * @param {GLint} y  the y component for ivec2\n\t * @param {GLint} z  the z component for ivec3\n\t * @param {GLint} w  the w component for ivec4\n\t */\n\tsetUniformi: function(name, x, y, z, w) {\n\t\t'use strict';\n\t\tvar gl = this.gl;\n\t\tvar loc = this.getUniformLocation(name);\n\t\tif (loc === null)\n\t\t\treturn false;\n\t\tswitch (arguments.length) {\n\t\t\tcase 2: gl.uniform1i(loc, x); return true;\n\t\t\tcase 3: gl.uniform2i(loc, x, y); return true;\n\t\t\tcase 4: gl.uniform3i(loc, x, y, z); return true;\n\t\t\tcase 5: gl.uniform4i(loc, x, y, z, w); return true;\n\t\t\tdefault:\n\t\t\t\tthrow \"invalid arguments to setUniformi\"; \n\t\t}\n\t},\n\n\t/**\n\t * A convenience method to set uniformf from the given arguments.\n\t * We determine which GL call to make based on the number of arguments\n\t * passed. For example, `setUniformf(\"var\", 0, 1)` maps to `gl.uniform2f`.\n\t * \n\t * @method  setUniformf\n\t * @param {String} name        \t\tthe name of the uniform\n\t * @param {GLfloat} x  the x component for floats\n\t * @param {GLfloat} y  the y component for vec2\n\t * @param {GLfloat} z  the z component for vec3\n\t * @param {GLfloat} w  the w component for vec4\n\t */\n\tsetUniformf: function(name, x, y, z, w) {\n\t\t'use strict';\n\t\tvar gl = this.gl;\n\t\tvar loc = this.getUniformLocation(name);\n\t\tif (loc === null)\n\t\t\treturn false;\n\t\tswitch (arguments.length) {\n\t\t\tcase 2: gl.uniform1f(loc, x); return true;\n\t\t\tcase 3: gl.uniform2f(loc, x, y); return true;\n\t\t\tcase 4: gl.uniform3f(loc, x, y, z); return true;\n\t\t\tcase 5: gl.uniform4f(loc, x, y, z, w); return true;\n\t\t\tdefault:\n\t\t\t\tthrow \"invalid arguments to setUniformf\"; \n\t\t}\n\t},\n\n\t//I guess we won't support sequence<GLfloat> .. whatever that is ??\n\t\n\n\t///// \n\t\n\t/**\n\t * A convenience method to set uniformNfv from the given ArrayBuffer.\n\t * We determine which GL call to make based on the length of the array \n\t * buffer (for 1-4 component vectors stored in a Float32Array). To use\n\t * this method to upload data to uniform arrays, you need to specify the\n\t * 'count' parameter; i.e. the data type you are using for that array. If\n\t * specified, this will dictate whether to call uniform1fv, uniform2fv, etc.\n\t *\n\t * @method  setUniformfv\n\t * @param {String} name        \t\tthe name of the uniform\n\t * @param {ArrayBuffer} arrayBuffer the array buffer\n\t * @param {Number} count            optional, the explicit data type count, e.g. 2 for vec2\n\t */\n\tsetUniformfv: function(name, arrayBuffer, count) {\n\t\t'use strict';\n\t\tcount = count || arrayBuffer.length;\n\t\tvar gl = this.gl;\n\t\tvar loc = this.getUniformLocation(name);\n\t\tif (loc === null)\n\t\t\treturn false;\n\t\tswitch (count) {\n\t\t\tcase 1: gl.uniform1fv(loc, arrayBuffer); return true;\n\t\t\tcase 2: gl.uniform2fv(loc, arrayBuffer); return true;\n\t\t\tcase 3: gl.uniform3fv(loc, arrayBuffer); return true;\n\t\t\tcase 4: gl.uniform4fv(loc, arrayBuffer); return true;\n\t\t\tdefault:\n\t\t\t\tthrow \"invalid arguments to setUniformf\"; \n\t\t}\n\t},\n\n\t/**\n\t * A convenience method to set uniformNiv from the given ArrayBuffer.\n\t * We determine which GL call to make based on the length of the array \n\t * buffer (for 1-4 component vectors stored in a int array). To use\n\t * this method to upload data to uniform arrays, you need to specify the\n\t * 'count' parameter; i.e. the data type you are using for that array. If\n\t * specified, this will dictate whether to call uniform1fv, uniform2fv, etc.\n\t *\n\t * @method  setUniformiv\n\t * @param {String} name        \t\tthe name of the uniform\n\t * @param {ArrayBuffer} arrayBuffer the array buffer\n\t * @param {Number} count            optional, the explicit data type count, e.g. 2 for ivec2\n\t */\n\tsetUniformiv: function(name, arrayBuffer, count) {\n\t\t'use strict';\n\t\tcount = count || arrayBuffer.length;\n\t\tvar gl = this.gl;\n\t\tvar loc = this.getUniformLocation(name);\n\t\tif (loc === null)\n\t\t\treturn false;\n\t\tswitch (count) {\n\t\t\tcase 1: gl.uniform1iv(loc, arrayBuffer); return true;\n\t\t\tcase 2: gl.uniform2iv(loc, arrayBuffer); return true;\n\t\t\tcase 3: gl.uniform3iv(loc, arrayBuffer); return true;\n\t\t\tcase 4: gl.uniform4iv(loc, arrayBuffer); return true;\n\t\t\tdefault:\n\t\t\t\tthrow \"invalid arguments to setUniformf\"; \n\t\t}\n\t},\n\n\t/**\n\t * This is a convenience function to pass a Matrix3 (from vecmath,\n\t * kami's preferred math library) or a Float32Array (e.g. gl-matrix)\n\t * to a shader. If mat is an object with \"val\", it is considered to be\n\t * a Matrix3, otherwise assumed to be a typed array being passed directly\n\t * to the shader.\n\t * \n\t * @param {String} name the uniform name\n\t * @param {Matrix3|Float32Array} mat a Matrix3 or Float32Array\n\t * @param {Boolean} transpose whether to transpose the matrix, default false\n\t */\n\tsetUniformMatrix3: function(name, mat, transpose) {\n\t\t'use strict';\n\t\tvar arr = typeof mat === \"object\" && mat.val ? mat.val : mat;\n\t\ttranspose = !!transpose; //to boolean\n\n\t\tvar gl = this.gl;\n\t\tvar loc = this.getUniformLocation(name);\n\t\tif (loc === null)\n\t\t\treturn false;\n\t\tgl.uniformMatrix3fv(loc, transpose, arr)\n\t},\n\n\t/**\n\t * This is a convenience function to pass a Matrix4 (from vecmath,\n\t * kami's preferred math library) or a Float32Array (e.g. gl-matrix)\n\t * to a shader. If mat is an object with \"val\", it is considered to be\n\t * a Matrix4, otherwise assumed to be a typed array being passed directly\n\t * to the shader.\n\t * \n\t * @param {String} name the uniform name\n\t * @param {Matrix4|Float32Array} mat a Matrix4 or Float32Array\n\t * @param {Boolean} transpose whether to transpose the matrix, default false\n\t */\n\tsetUniformMatrix4: function(name, mat, transpose) {\n\t\t'use strict';\n\t\tvar arr = typeof mat === \"object\" && mat.val ? mat.val : mat;\n\t\ttranspose = !!transpose; //to boolean\n\n\t\tvar gl = this.gl;\n\t\tvar loc = this.getUniformLocation(name);\n\t\tif (loc === null)\n\t\t\treturn false;\n\t\tgl.uniformMatrix4fv(loc, transpose, arr)\n\t} \n \n});\n\n//Some default attribute names that parts of kami will use\n//when creating a standard shader.\nShaderProgram.POSITION_ATTRIBUTE = \"Position\";\nShaderProgram.NORMAL_ATTRIBUTE = \"Normal\";\nShaderProgram.COLOR_ATTRIBUTE = \"Color\";\nShaderProgram.TEXCOORD_ATTRIBUTE = \"TexCoord\";\n\n/**\n * Whether to include verbose warnings during shader compilation.\n * This includes:\n *\n *   - Printing full shaders (with line numbers) when there is an error\n *   - Printing warnings even if the shader compiled successfully \n *   \n * @property {Boolean} VERBOSE_COMPILE\n */\nShaderProgram.VERBOSE_COMPILE = true;\n\nmodule.exports = ShaderProgram;","var getGL = require('webgl-context');\n\nmodule.exports = function(opts) {\n    if (!opts || (!opts.vertex || !opts.fragment))\n        throw \"must specify 'vertex' and 'fragment' source\";\n    var vertSource = (opts.vertex).trim();\n    var fragSource = (opts.fragment).trim();\n\n\n    var gl = opts.gl;\n    if (!gl) {\n        gl = getGL();\n        if (!gl)\n            throw new Error(\"WebGL not supported -- try another browser\");\n    }\n    return compile(gl, vertSource, fragSource, opts.attributeLocations, opts.verbose);\n};\n\n//Compiles the shaders, throwing an error if the program was invalid.\nfunction compile(gl, vertSource, fragSource, attribs, verbose) {\n    var log = \"\";\n\n    var vert = loadShader(gl, gl.VERTEX_SHADER, vertSource, verbose);\n    var frag = loadShader(gl, gl.FRAGMENT_SHADER, fragSource, verbose);\n\n    var vertShader = vert.shader;\n    var fragShader = frag.shader;\n\n    log += vert.log + \"\\n\" + frag.log;\n\n    var program = gl.createProgram();\n\n    gl.attachShader(program, vertShader);\n    gl.attachShader(program, fragShader);\n\n    //TODO: Chrome seems a bit buggy with attribute bindings...\n    if (attribs) {\n        for (var key in attribs) {\n            if (attribs.hasOwnProperty(key)) {\n                gl.bindAttribLocation(program, Math.floor(attribs[key]), key);\n            }\n        }\n    }\n\n    gl.linkProgram(program); \n\n    log += gl.getProgramInfoLog(program) || \"\";\n\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n        if (verbose) {\n            console.error(\"Shader error:\\n\"+log);\n            console.error(\"Problematic shaders:\\nVERTEX_SHADER:\\n\"+addLineNumbers(vertSource)\n                    +\"\\n\\nFRAGMENT_SHADER:\\n\"+addLineNumbers(fragSource));\n        }\n        //delete before throwing error    \n        gl.detachShader(program, vertShader);\n        gl.detachShader(program, fragShader);\n        gl.deleteShader(vertShader);\n        gl.deleteShader(fragShader);\n        \n        throw new Error(\"Error linking the shader program:\\n\" + log);\n\n    }\n    return {\n        program: program,\n        vertex: vertShader,\n        fragment: fragShader,\n        log: log.trim()\n    };\n}\n\nfunction loadShader(gl, type, source, verbose) {\n    var shader = gl.createShader(type);\n    if (!shader) //should not occur...\n        return -1;\n\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n\n    //we do this so the user knows which shader has the error\n    var typeStr = (type === gl.VERTEX_SHADER) ? \"vertex\" : \"fragment\";\n\n    var logResult = gl.getShaderInfoLog(shader) || \"\";\n    \n\n    //Chrome will just print \"Uncaught error object\" if the Error.message \n    //is longer than 250 chars... WTF!\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS) ) {\n        if (verbose) {\n            console.error(\"Shader error:\\n\"+logResult);\n            console.error( \"Problematic \"+typeStr+\" shader:\\n\" + addLineNumbers(source) );\n        }\n        throw new Error(\"Could not compile \"+typeStr+\" shader:\\n\"+logResult);\n    }\n    if (!shader)\n        throw new Error(\"gl.createShader returned 0 for \"+typeStr+\" shader.\\n\"+logResult);\n    return {\n        shader: shader,\n        log: logResult\n    };\n}\n\nfunction addLineNumbers( string ) {\n    var lines = string.split( '\\n' );\n    for ( var i = 0; i < lines.length; i ++ ) {\n        lines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\n    }\n    return lines.join( '\\n' );\n}","module.exports = function(opts) {\n    opts = opts||{};\n    var canvas = opts.canvas || document.createElement(\"canvas\");\n    if (typeof opts.width === \"number\")\n        canvas.width = opts.width;\n    if (typeof opts.height === \"number\")\n        canvas.height = opts.height;\n    \n    var attribs = (opts.attributes || opts.attribs || {});\n    try {\n        gl = (canvas.getContext('webgl', attribs) || canvas.getContext('experimental-webgl', attribs));\n    } catch (e) {\n        gl = null;\n    }\n    return gl;\n};","/**\n * An abstract batcher for dynamic geometry. This handles\n * the basics, like setting blend functions, color, and so forth.\n * \n * @module kami-base-batch\n */\n\nvar Class = require('klasse');\nvar Mesh = require('kami-mesh-buffer');\nvar BaseObject = require('kami-util').BaseObject;\n\nvar colorToFloat = require('number-util').colorToFloat;\n\nvar BaseMixins = require('./mixins');\n\n/** \n * A batcher, typically used for quads (2 tris, indexed), but may\n * also be used for other dynamic types of geometry. This is generally\n * not static; the vertex buffers are using DYNAMIC_DRAW for performance.\n * \n * This is used internally; users should look at \n * {{#crossLink \"SpriteBatch\"}}{{/crossLink}} instead, which inherits from this\n * class. \n * \n * The batcher itself is not managed by WebGLContext; however, it makes\n * use of Mesh and Texture which will be managed. For this reason, the batcher\n * does not hold a direct reference to the GL state.\n *\n * Subclasses must implement the following:  \n * {{#crossLink \"BaseBatch/_createShader:method\"}}{{/crossLink}}  \n * {{#crossLink \"BaseBatch/_createVertexAttributes:method\"}}{{/crossLink}}  \n * {{#crossLink \"BaseBatch/getVertexSize:method\"}}{{/crossLink}}  \n * \n * @class BaseBatch\n * @protected\n * @abstract\n * \n * @constructor\n * @param {WebGLContext} context the context this batcher belongs to\n * @param {Object} options the options\n * @param {Number} options.size the optional size of this batch, i.e. max number of quads\n * @default  500\n */\nvar BaseBatch = new Class({\n\n\tMixins: BaseMixins,\n\n\t//Constructor\n\tinitialize: function BaseBatch(context, options) {\n\t\tBaseObject.call(this, context);\n\t\toptions = options||{};\n\n\t\tvar shader = this._createShader();\n\t\t\n\t\tthis.idx = 0;\n\n\t\tthis.mesh = this._createMesh(options.size);\n\n\t\t//set up the properties for our base batch...\n\t\tBaseMixins.call(this, this.context.gl, shader);\n\t},\n\n\t/**\n\t * Called from the constructor to create a new Mesh \n\t * based on the expected batch size. Should set up\n\t * verts & indices properly.\n\t *\n\t * Users should not call this directly; instead, it\n\t * should only be implemented by subclasses.\n\t * \n\t * @method _createMesh\n\t * @param {Number} size the size passed through the constructor\n\t */\n\t_createMesh: function(size) {\n\t\tsize = size||500;\n\t\t// 65535 is max index, so 65535 / 6 = 10922.\n\t\tif (size > 10922)\n\t\t\tthrow \"Can't have more than 10922 sprites per batch: \" + size;\n\t\t\n\t\t//the total number of floats in our batch\n\t\tvar numVerts = size * 4 * this.getVertexSize();\n\t\t//the total number of indices in our batch\n\t\tvar numIndices = size * 6;\n\t\tvar gl = this.context.gl;\n\n\t\t//vertex data\n\t\tthis.vertices = new Float32Array(numVerts);\n\t\t//index data\n\t\tthis.indices = new Uint16Array(numIndices); \n\t\t\n\t\tfor (var i=0, j=0; i < numIndices; i += 6, j += 4) \n\t\t{\n\t\t\tthis.indices[i + 0] = j + 0; \n\t\t\tthis.indices[i + 1] = j + 1;\n\t\t\tthis.indices[i + 2] = j + 2;\n\t\t\tthis.indices[i + 3] = j + 0;\n\t\t\tthis.indices[i + 4] = j + 2;\n\t\t\tthis.indices[i + 5] = j + 3;\n\t\t}\n\n\t\tvar mesh = new Mesh(this.context, false, \n\t\t\t\t\t\tnumVerts, numIndices, this._createVertexAttributes());\n\t\tmesh.vertices = this.vertices;\n\t\tmesh.indices = this.indices;\n\t\tmesh.vertexUsage = gl.DYNAMIC_DRAW;\n\t\tmesh.indexUsage = gl.STATIC_DRAW;\n\t\tmesh.dirty = true;\n\t\treturn mesh;\n\t},\n\n\t/**\n\t * Returns a shader for this batch. If you plan to support\n\t * multiple instances of your batch, it may or may not be wise\n\t * to use a shared shader to save resources.\n\t * \n\t * This method initially throws an error; so it must be overridden by\n\t * subclasses of BaseBatch.\n\t *\n\t * @method  _createShader\n\t * @return {Number} the size of a vertex, in # of floats\n\t */\n\t_createShader: function() {\n\t\tthrow \"_createShader not implemented\"\n\t},\t\n\n\t/**\n\t * Returns an array of vertex attributes for this mesh; \n\t * subclasses should implement this with the attributes \n\t * expected for their batch.\n\t *\n\t * This method initially throws an error; so it must be overridden by\n\t * subclasses of BaseBatch.\n\t *\n\t * @method _createVertexAttributes\n\t * @return {Array} an array of Mesh.VertexAttrib objects\n\t */\n\t_createVertexAttributes: function() {\n\t\tthrow \"_createVertexAttributes not implemented\";\n\t},\n\n\n\t/**\n\t * Returns the number of floats per vertex for this batcher.\n\t * \n\t * This method initially throws an error; so it must be overridden by\n\t * subclasses of BaseBatch.\n\t *\n\t * @method  getVertexSize\n\t * @return {Number} the size of a vertex, in # of floats\n\t */\n\tgetVertexSize: function() {\n\t\tthrow \"getVertexSize not implemented\";\n\t},\n\n\t\n\t/** \n\t * Begins the sprite batch. This will bind the shader\n\t * and mesh. Subclasses may want to disable depth or \n\t * set up blending.\n\t *\n\t * @method  begin\n\t */\n\tbegin: function()  {\n\t\tif (this.drawing) \n\t\t\tthrow \"batch.end() must be called before begin\";\n\t\tthis.drawing = true;\n\n\t\tthis.shader.bind();\n\n\t\t//bind the attributes now to avoid redundant calls\n\t\tthis.mesh.bind(this.shader);\n\n\t\tif (this._blendingEnabled) {\n\t\t\tvar gl = this.context.gl;\n\t\t\tgl.enable(gl.BLEND);\n\t\t}\n\t},\n\n\t/** \n\t * Ends the sprite batch. This will flush any remaining \n\t * data and set GL state back to normal.\n\t * \n\t * @method  end\n\t */\n\tend: function()  {\n\t\tif (!this.drawing)\n\t\t\tthrow \"batch.begin() must be called before end\";\n\t\tif (this.idx > 0)\n\t\t\tthis.flush();\n\t\tthis.drawing = false;\n\n\t\tthis.mesh.unbind(this.shader);\n\n\t\tif (this._blendingEnabled) {\n\t\t\tvar gl = this.context.gl;\n\t\t\tgl.disable(gl.BLEND);\n\t\t}\n\t},\n\n\t/** \n\t * Called before rendering to bind new textures.\n\t * This method does nothing by default.\n\t *\n\t * @method  _preRender\n\t */\n\t_preRender: function()  {\n\t},\n\n\t/**\n\t * Flushes the batch by pushing the current data\n\t * to GL.\n\t * \n\t * @method flush\n\t */\n\tflush: function()  {\n\t\tif (this.idx===0)\n\t\t\treturn;\n\n\t\tvar gl = this.context.gl;\n\n\t\t//premultiplied alpha\n\t\tif (this._blendingEnabled) {\n\t\t\t//set either to null if you want to call your own \n\t\t\t//blendFunc or blendFuncSeparate\n\t\t\tif (this._blendSrc && this._blendDst)\n\t\t\t\tgl.blendFunc(this._blendSrc, this._blendDst); \n\t\t}\n\n\t\tthis._preRender();\n\n\t\t//number of sprites in batch\n\t\tvar numComponents = this.getVertexSize();\n\t\tvar spriteCount = (this.idx / (numComponents * 4));\n\t\t\n\t\t//draw the sprites\n\t\tthis.mesh.verticesDirty = true;\n\t\tthis.mesh.draw(gl.TRIANGLES, spriteCount * 6, 0, this.idx);\n\n\t\tthis.idx = 0;\n\t},\n\n\t/**\n\t * Destroys the batch, deleting its buffers and removing it from the\n\t * WebGLContext management. Trying to use this\n\t * batch after destroying it can lead to unpredictable behaviour.\n\t *\n\t * If `ownsShader` is true, this will also delete the `defaultShader` object.\n\t * \n\t * @method destroy\n\t */\n\tdestroy: function() {\n\t\tthis.vertices = null;\n\t\tthis.indices = null;\n\t\tthis.maxVertices = 0;\n\n\t\tif (this.ownsShader && this.defaultShader)\n\t\t\tthis.defaultShader.destroy();\n\t\tthis.defaultShader = null;\n\t\tthis._shader = null; // remove reference to whatever shader is currently being used\n\n\t\tif (this.mesh) \n\t\t\tthis.mesh.destroy();\n\t\tthis.mesh = null;\n\t}\n});\n\nmodule.exports = BaseBatch;\n","var colorToFloat = require('number-util').colorToFloat;\nvar Class = require('klasse');\n\nmodule.exports = new Class({\n\n\tinitialize: \n\tfunction BaseBatchMixins(gl, shader) {\n\t\tthis._blendSrc = gl.ONE;\n\t\tthis._blendDst = gl.ONE_MINUS_SRC_ALPHA;\n\t\tthis._blendingEnabled = true;\n\t\tthis._shader = shader;\n\n\t\t/**\n\t\t * This shader will be used whenever \"null\" is passed\n\t\t * as the batch's shader. \n\t\t *\n\t\t * @property {ShaderProgram} shader\n\t\t */\n\t\tthis.defaultShader = this._shader;\n\n\t\t/**\n\t\t * By default, a SpriteBatch is created with its own ShaderProgram,\n\t\t * stored in `defaultShader`. If this flag is true, on deleting the SpriteBatch, its\n\t\t * `defaultShader` will also be deleted. If this flag is false, no shaders\n\t\t * will be deleted on destroy.\n\t\t *\n\t\t * Note that if you re-assign `defaultShader`, you will need to dispose the previous\n\t\t * default shader yoursel. \n\t\t *\n\t\t * @property ownsShader\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis.ownsShader = true;\n\n\t\t/**\n\t\t * Whether we are currently drawing to the batch. Do not modify.\n\t\t * \n\t\t * @property {Boolean} drawing\n\t\t */\n\t\tthis.drawing = false;\n\n\t\t/**\n\t\t * The ABGR packed color, as a single float. The default\n\t\t * value is the color white (255, 255, 255, 255).\n\t\t *\n\t\t * @property {Number} color\n\t\t * @readOnly \n\t\t */\n\t\tthis.color = colorToFloat(255, 255, 255, 255);\n\t\t\n\t\t/**\n\t\t * Whether to premultiply alpha on calls to setColor. \n\t\t * This is true by default, so that we can conveniently write:\n\t\t *\n\t\t *     batch.setColor(1, 0, 0, 0.25); //tints red with 25% opacity\n\t\t *\n\t\t * If false, you must premultiply the colors yourself to achieve\n\t\t * the same tint, like so:\n\t\t *\n\t\t *     batch.setColor(0.25, 0, 0, 0.25);\n\t\t * \n\t\t * @property premultiplied\n\t\t * @type {Boolean}\n\t\t * @default  true\n\t\t */\n\t\tthis.premultiplied = true;\n\t},\n\n\t/**\n\t * A property to enable or disable blending for this sprite batch. If\n\t * we are currently drawing, this will first flush the batch, and then\n\t * update GL_BLEND state (enabled or disabled) with our new value.\n\t * \n\t * @property {Boolean} blendingEnabled\n\t */\n\tblendingEnabled: {\n\t\tset: function(val) {\n\t\t\tvar old = this._blendingEnabled;\n\t\t\tif (this.drawing)\n\t\t\t\tthis.flush();\n\n\t\t\tthis._blendingEnabled = val;\n\n\t\t\t//if we have a new value, update it.\n\t\t\t//this is because blend is done in begin() / end() \n\t\t\tif (this.drawing && old != val) {\n\t\t\t\tvar gl = this.context.gl;\n\t\t\t\tif (val)\n\t\t\t\t\tgl.enable(gl.BLEND);\n\t\t\t\telse\n\t\t\t\t\tgl.disable(gl.BLEND);\n\t\t\t}\n\n\t\t},\n\n\t\tget: function() {\n\t\t\treturn this._blendingEnabled;\n\t\t}\n\t},\n\n\t/**\n\t * Sets the blend source parameters. \n\t * If we are currently drawing, this will flush the batch.\n\t *\n\t * Setting either src or dst to `null` or a falsy value tells the SpriteBatch\n\t * to ignore gl.blendFunc. This is useful if you wish to use your\n\t * own blendFunc or blendFuncSeparate. \n\t * \n\t * @property {GLenum} blendDst \n\t */\n\tblendSrc: {\n\t\tset: function(val) {\n\t\t\tif (this.drawing)\n\t\t\t\tthis.flush();\n\t\t\tthis._blendSrc = val;\n\t\t},\n\n\t\tget: function() {\n\t\t\treturn this._blendSrc;\n\t\t}\n\t},\n\n\t/**\n\t * Sets the blend destination parameters. \n\t * If we are currently drawing, this will flush the batch.\n\t *\n\t * Setting either src or dst to `null` or a falsy value tells the SpriteBatch\n\t * to ignore gl.blendFunc. This is useful if you wish to use your\n\t * own blendFunc or blendFuncSeparate. \n\t *\n\t * @property {GLenum} blendSrc \n\t */\n\tblendDst: {\n\t\tset: function(val) {\n\t\t\tif (this.drawing)\n\t\t\t\tthis.flush();\n\t\t\tthis._blendDst = val;\n\t\t},\n\n\t\tget: function() {\n\t\t\treturn this._blendDst;\n\t\t}\n\t},\n\n\t/**\n\t * Sets the blend source and destination parameters. This is \n\t * a convenience function for the blendSrc and blendDst setters.\n\t * If we are currently drawing, this will flush the batch.\n\t *\n\t * Setting either to `null` or a falsy value tells the SpriteBatch\n\t * to ignore gl.blendFunc. This is useful if you wish to use your\n\t * own blendFunc or blendFuncSeparate. \n\t *\n\t * @method  setBlendFunction\n\t * @param {GLenum} blendSrc the source blend parameter\n\t * @param {GLenum} blendDst the destination blend parameter\n\t */\n\tsetBlendFunction: function(blendSrc, blendDst) {\n\t\tthis.blendSrc = blendSrc;\n\t\tthis.blendDst = blendDst;\n\t},\n\n\t/**\n\t * This is a setter/getter for this batch's current ShaderProgram.\n\t * If this is set when the batch is drawing, the state will be flushed\n\t * to the GPU and the new shader will then be bound.\n\t *\n\t * If `null` or a falsy value is specified, the batch's `defaultShader` will be used. \n\t *\n\t * Note that shaders are bound on batch.begin().\n\t *\n\t * @property shader\n\t * @type {ShaderProgram}\n\t */\n\tshader: {\n\t\tset: function(val) {\n\t\t\tvar wasDrawing = this.drawing;\n\n\t\t\tif (wasDrawing) {\n\t\t\t\tthis.end(); //unbinds the shader from the mesh\n\t\t\t}\n\n\t\t\tthis._shader = val ? val : this.defaultShader;\n\n\t\t\tif (wasDrawing) {\n\t\t\t\tthis.begin();\n\t\t\t}\n\t\t},\n\n\t\tget: function() {\n\t\t\treturn this._shader;\n\t\t}\n\t},\n\n\t/**\n\t * Sets the color of this sprite batcher, which is used in subsequent draw\n\t * calls. This does not flush the batch.\n\t *\n\t * If r, g, b, are all numbers, this method assumes that RGB \n\t * or RGBA float values (0.0 to 1.0) are being passed. Alpha defaults to one\n\t * if undefined.\n\t * \n\t * If one or more of the (r, g, b) arguments are non-numbers, we only consider the first argument\n\t * and assign it to all four components -- this is useful for setting transparency \n\t * in a premultiplied alpha stage.\n\t * \n\t * If the first argument is invalid or not a number,\n\t * the color defaults to (1, 1, 1, 1).\n\t *\n\t * @method  setColor\n\t * @param {Number} r the red component, normalized\n\t * @param {Number} g the green component, normalized\n\t * @param {Number} b the blue component, normalized\n\t * @param {Number} a the alpha component, normalized\n\t */\n\tsetColor: function(r, g, b, a) {\n\t\tvar rnum = typeof r === \"number\";\n\t\tif (rnum\n\t\t\t\t&& typeof g === \"number\"\n\t\t\t\t&& typeof b === \"number\") {\n\t\t\t//default alpha to one \n\t\t\ta = typeof a === \"number\" ? a : 1.0;\n\t\t} else {\n\t\t\tr = g = b = a = rnum ? r : 1.0;\n\t\t}\n\t\t\n\t\tif (this.premultiplied) {\n\t\t\tr *= a;\n\t\t\tg *= a;\n\t\t\tb *= a;\n\t\t}\n\t\t\n\t\tthis.color = colorToFloat(\n\t\t\t~~(r * 255),\n\t\t\t~~(g * 255),\n\t\t\t~~(b * 255),\n\t\t\t~~(a * 255)\n\t\t);\n\t},\n});","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule BaseEventEmitter\n * @typechecks\n */\n\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar EmitterSubscription = require('./EmitterSubscription');\nvar EventSubscriptionVendor = require('./EventSubscriptionVendor');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * @class BaseEventEmitter\n * @description\n * An EventEmitter is responsible for managing a set of listeners and publishing\n * events to them when it is told that such events happened. In addition to the\n * data for the given event it also sends a event control object which allows\n * the listeners/handlers to prevent the default behavior of the given event.\n *\n * The emitter is designed to be generic enough to support all the different\n * contexts in which one might want to emit events. It is a simple multicast\n * mechanism on top of which extra functionality can be composed. For example, a\n * more advanced emitter may use an EventHolder and EventFactory.\n */\n\nvar BaseEventEmitter = (function () {\n  /**\n   * @constructor\n   */\n\n  function BaseEventEmitter() {\n    _classCallCheck(this, BaseEventEmitter);\n\n    this._subscriber = new EventSubscriptionVendor();\n    this._currentSubscription = null;\n  }\n\n  /**\n   * Adds a listener to be invoked when events of the specified type are\n   * emitted. An optional calling context may be provided. The data arguments\n   * emitted will be passed to the listener function.\n   *\n   * TODO: Annotate the listener arg's type. This is tricky because listeners\n   *       can be invoked with varargs.\n   *\n   * @param {string} eventType - Name of the event to listen to\n   * @param {function} listener - Function to invoke when the specified event is\n   *   emitted\n   * @param {*} context - Optional context object to use when invoking the\n   *   listener\n   */\n\n  BaseEventEmitter.prototype.addListener = function addListener(eventType, listener, context) {\n    return this._subscriber.addSubscription(eventType, new EmitterSubscription(this._subscriber, listener, context));\n  };\n\n  /**\n   * Similar to addListener, except that the listener is removed after it is\n   * invoked once.\n   *\n   * @param {string} eventType - Name of the event to listen to\n   * @param {function} listener - Function to invoke only once when the\n   *   specified event is emitted\n   * @param {*} context - Optional context object to use when invoking the\n   *   listener\n   */\n\n  BaseEventEmitter.prototype.once = function once(eventType, listener, context) {\n    var emitter = this;\n    return this.addListener(eventType, function () {\n      emitter.removeCurrentListener();\n      listener.apply(context, arguments);\n    });\n  };\n\n  /**\n   * Removes all of the registered listeners, including those registered as\n   * listener maps.\n   *\n   * @param {?string} eventType - Optional name of the event whose registered\n   *   listeners to remove\n   */\n\n  BaseEventEmitter.prototype.removeAllListeners = function removeAllListeners(eventType) {\n    this._subscriber.removeAllSubscriptions(eventType);\n  };\n\n  /**\n   * Provides an API that can be called during an eventing cycle to remove the\n   * last listener that was invoked. This allows a developer to provide an event\n   * object that can remove the listener (or listener map) during the\n   * invocation.\n   *\n   * If it is called when not inside of an emitting cycle it will throw.\n   *\n   * @throws {Error} When called not during an eventing cycle\n   *\n   * @example\n   *   var subscription = emitter.addListenerMap({\n   *     someEvent: function(data, event) {\n   *       console.log(data);\n   *       emitter.removeCurrentListener();\n   *     }\n   *   });\n   *\n   *   emitter.emit('someEvent', 'abc'); // logs 'abc'\n   *   emitter.emit('someEvent', 'def'); // does not log anything\n   */\n\n  BaseEventEmitter.prototype.removeCurrentListener = function removeCurrentListener() {\n    !!!this._currentSubscription ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Not in an emitting cycle; there is no current subscription') : invariant(false) : undefined;\n    this._subscriber.removeSubscription(this._currentSubscription);\n  };\n\n  /**\n   * Returns an array of listeners that are currently registered for the given\n   * event.\n   *\n   * @param {string} eventType - Name of the event to query\n   * @return {array}\n   */\n\n  BaseEventEmitter.prototype.listeners = function listeners(eventType) /* TODO: Array<EventSubscription> */{\n    var subscriptions = this._subscriber.getSubscriptionsForType(eventType);\n    return subscriptions ? subscriptions.filter(emptyFunction.thatReturnsTrue).map(function (subscription) {\n      return subscription.listener;\n    }) : [];\n  };\n\n  /**\n   * Emits an event of the given type with the given data. All handlers of that\n   * particular type will be notified.\n   *\n   * @param {string} eventType - Name of the event to emit\n   * @param {*} Arbitrary arguments to be passed to each registered listener\n   *\n   * @example\n   *   emitter.addListener('someEvent', function(message) {\n   *     console.log(message);\n   *   });\n   *\n   *   emitter.emit('someEvent', 'abc'); // logs 'abc'\n   */\n\n  BaseEventEmitter.prototype.emit = function emit(eventType) {\n    var subscriptions = this._subscriber.getSubscriptionsForType(eventType);\n    if (subscriptions) {\n      var keys = Object.keys(subscriptions);\n      for (var ii = 0; ii < keys.length; ii++) {\n        var key = keys[ii];\n        var subscription = subscriptions[key];\n        // The subscription may have been removed during this event loop.\n        if (subscription) {\n          this._currentSubscription = subscription;\n          this.__emitToSubscription.apply(this, [subscription].concat(Array.prototype.slice.call(arguments)));\n        }\n      }\n      this._currentSubscription = null;\n    }\n  };\n\n  /**\n   * Provides a hook to override how the emitter emits an event to a specific\n   * subscription. This allows you to set up logging and error boundaries\n   * specific to your environment.\n   *\n   * @param {EmitterSubscription} subscription\n   * @param {string} eventType\n   * @param {*} Arbitrary arguments to be passed to each registered listener\n   */\n\n  BaseEventEmitter.prototype.__emitToSubscription = function __emitToSubscription(subscription, eventType) {\n    var args = Array.prototype.slice.call(arguments, 2);\n    subscription.listener.apply(subscription.context, args);\n  };\n\n  return BaseEventEmitter;\n})();\n\nmodule.exports = BaseEventEmitter;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EventSubscription\n * @typechecks\n */\n\n'use strict';\n\n/**\n * EventSubscription represents a subscription to a particular event. It can\n * remove its own subscription.\n */\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar EventSubscription = (function () {\n\n  /**\n   * @param {EventSubscriptionVendor} subscriber the subscriber that controls\n   *   this subscription.\n   */\n\n  function EventSubscription(subscriber) {\n    _classCallCheck(this, EventSubscription);\n\n    this.subscriber = subscriber;\n  }\n\n  /**\n   * Removes this subscription from the subscriber that controls it.\n   */\n\n  EventSubscription.prototype.remove = function remove() {\n    if (this.subscriber) {\n      this.subscriber.removeSubscription(this);\n      this.subscriber = null;\n    }\n  };\n\n  return EventSubscription;\n})();\n\nmodule.exports = EventSubscription;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n * \n * @providesModule EventSubscriptionVendor\n * @typechecks\n */\n\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * EventSubscriptionVendor stores a set of EventSubscriptions that are\n * subscribed to a particular event type.\n */\n\nvar EventSubscriptionVendor = (function () {\n  function EventSubscriptionVendor() {\n    _classCallCheck(this, EventSubscriptionVendor);\n\n    this._subscriptionsForType = {};\n    this._currentSubscription = null;\n  }\n\n  /**\n   * Adds a subscription keyed by an event type.\n   *\n   * @param {string} eventType\n   * @param {EventSubscription} subscription\n   */\n\n  EventSubscriptionVendor.prototype.addSubscription = function addSubscription(eventType, subscription) {\n    !(subscription.subscriber === this) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'The subscriber of the subscription is incorrectly set.') : invariant(false) : undefined;\n    if (!this._subscriptionsForType[eventType]) {\n      this._subscriptionsForType[eventType] = [];\n    }\n    var key = this._subscriptionsForType[eventType].length;\n    this._subscriptionsForType[eventType].push(subscription);\n    subscription.eventType = eventType;\n    subscription.key = key;\n    return subscription;\n  };\n\n  /**\n   * Removes a bulk set of the subscriptions.\n   *\n   * @param {?string} eventType - Optional name of the event type whose\n   *   registered supscriptions to remove, if null remove all subscriptions.\n   */\n\n  EventSubscriptionVendor.prototype.removeAllSubscriptions = function removeAllSubscriptions(eventType) {\n    if (eventType === undefined) {\n      this._subscriptionsForType = {};\n    } else {\n      delete this._subscriptionsForType[eventType];\n    }\n  };\n\n  /**\n   * Removes a specific subscription. Instead of calling this function, call\n   * `subscription.remove()` directly.\n   *\n   * @param {object} subscription\n   */\n\n  EventSubscriptionVendor.prototype.removeSubscription = function removeSubscription(subscription) {\n    var eventType = subscription.eventType;\n    var key = subscription.key;\n\n    var subscriptionsForType = this._subscriptionsForType[eventType];\n    if (subscriptionsForType) {\n      delete subscriptionsForType[key];\n    }\n  };\n\n  /**\n   * Returns the array of subscriptions that are currently registered for the\n   * given event type.\n   *\n   * Note: This array can be potentially sparse as subscriptions are deleted\n   * from it when they are removed.\n   *\n   * TODO: This returns a nullable array. wat?\n   *\n   * @param {string} eventType\n   * @return {?array}\n   */\n\n  EventSubscriptionVendor.prototype.getSubscriptionsForType = function getSubscriptionsForType(eventType) {\n    return this._subscriptionsForType[eventType];\n  };\n\n  return EventSubscriptionVendor;\n})();\n\nmodule.exports = EventSubscriptionVendor;","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;","/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\r\n\r\n// Configuration Constants\r\nexport var EPSILON = 0.000001;\r\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\r\nexport var RANDOM = Math.random;\r\n\r\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Type} type Array type, such as Float32Array or Array\r\n */\r\nexport function setMatrixArrayType(type) {\r\n  ARRAY_TYPE = type;\r\n}\r\n\r\nvar degree = Math.PI / 180;\r\n\r\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\r\nexport function toRadian(a) {\r\n  return a * degree;\r\n}\r\n\r\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\r\n}","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 2x2 Matrix\r\n * @module mat2\r\n */\r\n\r\n/**\r\n * Creates a new identity mat2\r\n *\r\n * @returns {mat2} a new 2x2 matrix\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n  }\r\n  out[0] = 1;\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat2 initialized with values from an existing matrix\r\n *\r\n * @param {mat2} a matrix to clone\r\n * @returns {mat2} a new 2x2 matrix\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one mat2 to another\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a mat2 to the identity matrix\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @returns {mat2} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Create a new mat2 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out A new 2x2 matrix\r\n */\r\nexport function fromValues(m00, m01, m10, m11) {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m10;\r\n  out[3] = m11;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a mat2 to the given values\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out\r\n */\r\nexport function set(out, m00, m01, m10, m11) {\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m10;\r\n  out[3] = m11;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transpose the values of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\r\nexport function transpose(out, a) {\r\n  // If we are transposing ourselves we can skip a few steps but have to cache\r\n  // some values\r\n  if (out === a) {\r\n    var a1 = a[1];\r\n    out[1] = a[2];\r\n    out[2] = a1;\r\n  } else {\r\n    out[0] = a[0];\r\n    out[1] = a[2];\r\n    out[2] = a[1];\r\n    out[3] = a[3];\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Inverts a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\r\nexport function invert(out, a) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n\r\n  // Calculate the determinant\r\n  var det = a0 * a3 - a2 * a1;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = a3 * det;\r\n  out[1] = -a1 * det;\r\n  out[2] = -a2 * det;\r\n  out[3] = a0 * det;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the adjugate of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\r\nexport function adjoint(out, a) {\r\n  // Caching this value is nessecary if out == a\r\n  var a0 = a[0];\r\n  out[0] = a[3];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = a0;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the determinant of a mat2\r\n *\r\n * @param {mat2} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\nexport function determinant(a) {\r\n  return a[0] * a[3] - a[2] * a[1];\r\n}\r\n\r\n/**\r\n * Multiplies two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  out[0] = a0 * b0 + a2 * b1;\r\n  out[1] = a1 * b0 + a3 * b1;\r\n  out[2] = a0 * b2 + a2 * b3;\r\n  out[3] = a1 * b2 + a3 * b3;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a mat2 by the given angle\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\r\nexport function rotate(out, a, rad) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  out[0] = a0 * c + a2 * s;\r\n  out[1] = a1 * c + a3 * s;\r\n  out[2] = a0 * -s + a2 * c;\r\n  out[3] = a1 * -s + a3 * c;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales the mat2 by the dimensions in the given vec2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to rotate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat2} out\r\n **/\r\nexport function scale(out, a, v) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var v0 = v[0],\r\n      v1 = v[1];\r\n  out[0] = a0 * v0;\r\n  out[1] = a1 * v0;\r\n  out[2] = a2 * v1;\r\n  out[3] = a3 * v1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\r\nexport function fromRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  out[0] = c;\r\n  out[1] = s;\r\n  out[2] = -s;\r\n  out[3] = c;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.scale(dest, dest, vec);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat2} out\r\n */\r\nexport function fromScaling(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = v[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a mat2\r\n *\r\n * @param {mat2} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\r\nexport function str(a) {\r\n  return 'mat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\r\n}\r\n\r\n/**\r\n * Returns Frobenius norm of a mat2\r\n *\r\n * @param {mat2} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\r\nexport function frob(a) {\r\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2));\r\n}\r\n\r\n/**\r\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\r\n * @param {mat2} L the lower triangular matrix\r\n * @param {mat2} D the diagonal matrix\r\n * @param {mat2} U the upper triangular matrix\r\n * @param {mat2} a the input matrix to factorize\r\n */\r\n\r\nexport function LDU(L, D, U, a) {\r\n  L[2] = a[2] / a[0];\r\n  U[0] = a[0];\r\n  U[1] = a[1];\r\n  U[3] = a[3] - L[2] * U[1];\r\n  return [L, D, U];\r\n}\r\n\r\n/**\r\n * Adds two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat2} a The first matrix.\r\n * @param {mat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat2} a The first matrix.\r\n * @param {mat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\r\n}\r\n\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2} out\r\n */\r\nexport function multiplyScalar(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2} out the receiving vector\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2} out\r\n */\r\nexport function multiplyScalarAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Alias for {@link mat2.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link mat2.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 2x3 Matrix\r\n * @module mat2d\r\n *\r\n * @description\r\n * A mat2d contains six elements defined as:\r\n * <pre>\r\n * [a, c, tx,\r\n *  b, d, ty]\r\n * </pre>\r\n * This is a short form for the 3x3 matrix:\r\n * <pre>\r\n * [a, c, tx,\r\n *  b, d, ty,\r\n *  0, 0, 1]\r\n * </pre>\r\n * The last row is ignored so the array is shorter and operations are faster.\r\n */\r\n\r\n/**\r\n * Creates a new identity mat2d\r\n *\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(6);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[4] = 0;\r\n    out[5] = 0;\r\n  }\r\n  out[0] = 1;\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat2d initialized with values from an existing matrix\r\n *\r\n * @param {mat2d} a matrix to clone\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(6);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one mat2d to another\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a mat2d to the identity matrix\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @returns {mat2d} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Create a new mat2d with the given values\r\n *\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} A new mat2d\r\n */\r\nexport function fromValues(a, b, c, d, tx, ty) {\r\n  var out = new glMatrix.ARRAY_TYPE(6);\r\n  out[0] = a;\r\n  out[1] = b;\r\n  out[2] = c;\r\n  out[3] = d;\r\n  out[4] = tx;\r\n  out[5] = ty;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a mat2d to the given values\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} out\r\n */\r\nexport function set(out, a, b, c, d, tx, ty) {\r\n  out[0] = a;\r\n  out[1] = b;\r\n  out[2] = c;\r\n  out[3] = d;\r\n  out[4] = tx;\r\n  out[5] = ty;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Inverts a mat2d\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\r\nexport function invert(out, a) {\r\n  var aa = a[0],\r\n      ab = a[1],\r\n      ac = a[2],\r\n      ad = a[3];\r\n  var atx = a[4],\r\n      aty = a[5];\r\n\r\n  var det = aa * ad - ab * ac;\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = ad * det;\r\n  out[1] = -ab * det;\r\n  out[2] = -ac * det;\r\n  out[3] = aa * det;\r\n  out[4] = (ac * aty - ad * atx) * det;\r\n  out[5] = (ab * atx - aa * aty) * det;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the determinant of a mat2d\r\n *\r\n * @param {mat2d} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\nexport function determinant(a) {\r\n  return a[0] * a[3] - a[1] * a[2];\r\n}\r\n\r\n/**\r\n * Multiplies two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3],\r\n      b4 = b[4],\r\n      b5 = b[5];\r\n  out[0] = a0 * b0 + a2 * b1;\r\n  out[1] = a1 * b0 + a3 * b1;\r\n  out[2] = a0 * b2 + a2 * b3;\r\n  out[3] = a1 * b2 + a3 * b3;\r\n  out[4] = a0 * b4 + a2 * b5 + a4;\r\n  out[5] = a1 * b4 + a3 * b5 + a5;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a mat2d by the given angle\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\r\nexport function rotate(out, a, rad) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5];\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  out[0] = a0 * c + a2 * s;\r\n  out[1] = a1 * c + a3 * s;\r\n  out[2] = a0 * -s + a2 * c;\r\n  out[3] = a1 * -s + a3 * c;\r\n  out[4] = a4;\r\n  out[5] = a5;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to translate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat2d} out\r\n **/\r\nexport function scale(out, a, v) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5];\r\n  var v0 = v[0],\r\n      v1 = v[1];\r\n  out[0] = a0 * v0;\r\n  out[1] = a1 * v0;\r\n  out[2] = a2 * v1;\r\n  out[3] = a3 * v1;\r\n  out[4] = a4;\r\n  out[5] = a5;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Translates the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to translate\r\n * @param {vec2} v the vec2 to translate the matrix by\r\n * @returns {mat2d} out\r\n **/\r\nexport function translate(out, a, v) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5];\r\n  var v0 = v[0],\r\n      v1 = v[1];\r\n  out[0] = a0;\r\n  out[1] = a1;\r\n  out[2] = a2;\r\n  out[3] = a3;\r\n  out[4] = a0 * v0 + a2 * v1 + a4;\r\n  out[5] = a1 * v0 + a3 * v1 + a5;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\r\nexport function fromRotation(out, rad) {\r\n  var s = Math.sin(rad),\r\n      c = Math.cos(rad);\r\n  out[0] = c;\r\n  out[1] = s;\r\n  out[2] = -s;\r\n  out[3] = c;\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.scale(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat2d} out\r\n */\r\nexport function fromScaling(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = v[1];\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.translate(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {vec2} v Translation vector\r\n * @returns {mat2d} out\r\n */\r\nexport function fromTranslation(out, v) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  out[4] = v[0];\r\n  out[5] = v[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a mat2d\r\n *\r\n * @param {mat2d} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\r\nexport function str(a) {\r\n  return 'mat2d(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ')';\r\n}\r\n\r\n/**\r\n * Returns Frobenius norm of a mat2d\r\n *\r\n * @param {mat2d} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\r\nexport function frob(a) {\r\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + 1);\r\n}\r\n\r\n/**\r\n * Adds two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  out[4] = a[4] - b[4];\r\n  out[5] = a[5] - b[5];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2d} out\r\n */\r\nexport function multiplyScalar(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2d} out the receiving vector\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2d} out\r\n */\r\nexport function multiplyScalarAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  out[4] = a[4] + b[4] * scale;\r\n  out[5] = a[5] + b[5] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat2d} a The first matrix.\r\n * @param {mat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat2d} a The first matrix.\r\n * @param {mat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3],\r\n      b4 = b[4],\r\n      b5 = b[5];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5));\r\n}\r\n\r\n/**\r\n * Alias for {@link mat2d.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link mat2d.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 3x3 Matrix\r\n * @module mat3\r\n */\r\n\r\n/**\r\n * Creates a new identity mat3\r\n *\r\n * @returns {mat3} a new 3x3 matrix\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(9);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n    out[5] = 0;\r\n    out[6] = 0;\r\n    out[7] = 0;\r\n  }\r\n  out[0] = 1;\r\n  out[4] = 1;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copies the upper-left 3x3 values into the given mat3.\r\n *\r\n * @param {mat3} out the receiving 3x3 matrix\r\n * @param {mat4} a   the source 4x4 matrix\r\n * @returns {mat3} out\r\n */\r\nexport function fromMat4(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[4];\r\n  out[4] = a[5];\r\n  out[5] = a[6];\r\n  out[6] = a[8];\r\n  out[7] = a[9];\r\n  out[8] = a[10];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat3 initialized with values from an existing matrix\r\n *\r\n * @param {mat3} a matrix to clone\r\n * @returns {mat3} a new 3x3 matrix\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(9);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one mat3 to another\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Create a new mat3 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} A new mat3\r\n */\r\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\r\n  var out = new glMatrix.ARRAY_TYPE(9);\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m10;\r\n  out[4] = m11;\r\n  out[5] = m12;\r\n  out[6] = m20;\r\n  out[7] = m21;\r\n  out[8] = m22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a mat3 to the given values\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} out\r\n */\r\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m10;\r\n  out[4] = m11;\r\n  out[5] = m12;\r\n  out[6] = m20;\r\n  out[7] = m21;\r\n  out[8] = m22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a mat3 to the identity matrix\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @returns {mat3} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 1;\r\n  out[5] = 0;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transpose the values of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function transpose(out, a) {\r\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\r\n  if (out === a) {\r\n    var a01 = a[1],\r\n        a02 = a[2],\r\n        a12 = a[5];\r\n    out[1] = a[3];\r\n    out[2] = a[6];\r\n    out[3] = a01;\r\n    out[5] = a[7];\r\n    out[6] = a02;\r\n    out[7] = a12;\r\n  } else {\r\n    out[0] = a[0];\r\n    out[1] = a[3];\r\n    out[2] = a[6];\r\n    out[3] = a[1];\r\n    out[4] = a[4];\r\n    out[5] = a[7];\r\n    out[6] = a[2];\r\n    out[7] = a[5];\r\n    out[8] = a[8];\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Inverts a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function invert(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n\r\n  var b01 = a22 * a11 - a12 * a21;\r\n  var b11 = -a22 * a10 + a12 * a20;\r\n  var b21 = a21 * a10 - a11 * a20;\r\n\r\n  // Calculate the determinant\r\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = b01 * det;\r\n  out[1] = (-a22 * a01 + a02 * a21) * det;\r\n  out[2] = (a12 * a01 - a02 * a11) * det;\r\n  out[3] = b11 * det;\r\n  out[4] = (a22 * a00 - a02 * a20) * det;\r\n  out[5] = (-a12 * a00 + a02 * a10) * det;\r\n  out[6] = b21 * det;\r\n  out[7] = (-a21 * a00 + a01 * a20) * det;\r\n  out[8] = (a11 * a00 - a01 * a10) * det;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the adjugate of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function adjoint(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n\r\n  out[0] = a11 * a22 - a12 * a21;\r\n  out[1] = a02 * a21 - a01 * a22;\r\n  out[2] = a01 * a12 - a02 * a11;\r\n  out[3] = a12 * a20 - a10 * a22;\r\n  out[4] = a00 * a22 - a02 * a20;\r\n  out[5] = a02 * a10 - a00 * a12;\r\n  out[6] = a10 * a21 - a11 * a20;\r\n  out[7] = a01 * a20 - a00 * a21;\r\n  out[8] = a00 * a11 - a01 * a10;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the determinant of a mat3\r\n *\r\n * @param {mat3} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\nexport function determinant(a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n\r\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\r\n}\r\n\r\n/**\r\n * Multiplies two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n\r\n  var b00 = b[0],\r\n      b01 = b[1],\r\n      b02 = b[2];\r\n  var b10 = b[3],\r\n      b11 = b[4],\r\n      b12 = b[5];\r\n  var b20 = b[6],\r\n      b21 = b[7],\r\n      b22 = b[8];\r\n\r\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\r\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\r\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\r\n\r\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\r\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\r\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\r\n\r\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\r\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\r\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Translate a mat3 by the given vector\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to translate\r\n * @param {vec2} v vector to translate by\r\n * @returns {mat3} out\r\n */\r\nexport function translate(out, a, v) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5],\r\n      a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8],\r\n      x = v[0],\r\n      y = v[1];\r\n\r\n  out[0] = a00;\r\n  out[1] = a01;\r\n  out[2] = a02;\r\n\r\n  out[3] = a10;\r\n  out[4] = a11;\r\n  out[5] = a12;\r\n\r\n  out[6] = x * a00 + y * a10 + a20;\r\n  out[7] = x * a01 + y * a11 + a21;\r\n  out[8] = x * a02 + y * a12 + a22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a mat3 by the given angle\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\r\nexport function rotate(out, a, rad) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5],\r\n      a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8],\r\n      s = Math.sin(rad),\r\n      c = Math.cos(rad);\r\n\r\n  out[0] = c * a00 + s * a10;\r\n  out[1] = c * a01 + s * a11;\r\n  out[2] = c * a02 + s * a12;\r\n\r\n  out[3] = c * a10 - s * a00;\r\n  out[4] = c * a11 - s * a01;\r\n  out[5] = c * a12 - s * a02;\r\n\r\n  out[6] = a20;\r\n  out[7] = a21;\r\n  out[8] = a22;\r\n  return out;\r\n};\r\n\r\n/**\r\n * Scales the mat3 by the dimensions in the given vec2\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat3} out\r\n **/\r\nexport function scale(out, a, v) {\r\n  var x = v[0],\r\n      y = v[1];\r\n\r\n  out[0] = x * a[0];\r\n  out[1] = x * a[1];\r\n  out[2] = x * a[2];\r\n\r\n  out[3] = y * a[3];\r\n  out[4] = y * a[4];\r\n  out[5] = y * a[5];\r\n\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.translate(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Translation vector\r\n * @returns {mat3} out\r\n */\r\nexport function fromTranslation(out, v) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 1;\r\n  out[5] = 0;\r\n  out[6] = v[0];\r\n  out[7] = v[1];\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.rotate(dest, dest, rad);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\r\nexport function fromRotation(out, rad) {\r\n  var s = Math.sin(rad),\r\n      c = Math.cos(rad);\r\n\r\n  out[0] = c;\r\n  out[1] = s;\r\n  out[2] = 0;\r\n\r\n  out[3] = -s;\r\n  out[4] = c;\r\n  out[5] = 0;\r\n\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.scale(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat3} out\r\n */\r\nexport function fromScaling(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n\r\n  out[3] = 0;\r\n  out[4] = v[1];\r\n  out[5] = 0;\r\n\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copies the values from a mat2d into a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat2d} a the matrix to copy\r\n * @returns {mat3} out\r\n **/\r\nexport function fromMat2d(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = 0;\r\n\r\n  out[3] = a[2];\r\n  out[4] = a[3];\r\n  out[5] = 0;\r\n\r\n  out[6] = a[4];\r\n  out[7] = a[5];\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n* Calculates a 3x3 matrix from the given quaternion\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {quat} q Quaternion to create matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\r\nexport function fromQuat(out, q) {\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var yx = y * x2;\r\n  var yy = y * y2;\r\n  var zx = z * x2;\r\n  var zy = z * y2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n\r\n  out[0] = 1 - yy - zz;\r\n  out[3] = yx - wz;\r\n  out[6] = zx + wy;\r\n\r\n  out[1] = yx + wz;\r\n  out[4] = 1 - xx - zz;\r\n  out[7] = zy - wx;\r\n\r\n  out[2] = zx - wy;\r\n  out[5] = zy + wx;\r\n  out[8] = 1 - xx - yy;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {mat4} a Mat4 to derive the normal matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\r\nexport function normalFromMat4(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  var b00 = a00 * a11 - a01 * a10;\r\n  var b01 = a00 * a12 - a02 * a10;\r\n  var b02 = a00 * a13 - a03 * a10;\r\n  var b03 = a01 * a12 - a02 * a11;\r\n  var b04 = a01 * a13 - a03 * a11;\r\n  var b05 = a02 * a13 - a03 * a12;\r\n  var b06 = a20 * a31 - a21 * a30;\r\n  var b07 = a20 * a32 - a22 * a30;\r\n  var b08 = a20 * a33 - a23 * a30;\r\n  var b09 = a21 * a32 - a22 * a31;\r\n  var b10 = a21 * a33 - a23 * a31;\r\n  var b11 = a22 * a33 - a23 * a32;\r\n\r\n  // Calculate the determinant\r\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n\r\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n\r\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a 2D projection matrix with the given bounds\r\n *\r\n * @param {mat3} out mat3 frustum matrix will be written into\r\n * @param {number} width Width of your gl context\r\n * @param {number} height Height of gl context\r\n * @returns {mat3} out\r\n */\r\nexport function projection(out, width, height) {\r\n  out[0] = 2 / width;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = -2 / height;\r\n  out[5] = 0;\r\n  out[6] = -1;\r\n  out[7] = 1;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a mat3\r\n *\r\n * @param {mat3} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\r\nexport function str(a) {\r\n  return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ')';\r\n}\r\n\r\n/**\r\n * Returns Frobenius norm of a mat3\r\n *\r\n * @param {mat3} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\r\nexport function frob(a) {\r\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2));\r\n}\r\n\r\n/**\r\n * Adds two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  out[6] = a[6] + b[6];\r\n  out[7] = a[7] + b[7];\r\n  out[8] = a[8] + b[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  out[4] = a[4] - b[4];\r\n  out[5] = a[5] - b[5];\r\n  out[6] = a[6] - b[6];\r\n  out[7] = a[7] - b[7];\r\n  out[8] = a[8] - b[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat3} out\r\n */\r\nexport function multiplyScalar(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  out[6] = a[6] * b;\r\n  out[7] = a[7] * b;\r\n  out[8] = a[8] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat3} out the receiving vector\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat3} out\r\n */\r\nexport function multiplyScalarAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  out[4] = a[4] + b[4] * scale;\r\n  out[5] = a[5] + b[5] * scale;\r\n  out[6] = a[6] + b[6] * scale;\r\n  out[7] = a[7] + b[7] * scale;\r\n  out[8] = a[8] + b[8] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5],\r\n      a6 = a[6],\r\n      a7 = a[7],\r\n      a8 = a[8];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3],\r\n      b4 = b[4],\r\n      b5 = b[5],\r\n      b6 = b[6],\r\n      b7 = b[7],\r\n      b8 = b[8];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\r\n}\r\n\r\n/**\r\n * Alias for {@link mat3.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link mat3.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\r\n\r\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(16);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n    out[4] = 0;\r\n    out[6] = 0;\r\n    out[7] = 0;\r\n    out[8] = 0;\r\n    out[9] = 0;\r\n    out[11] = 0;\r\n    out[12] = 0;\r\n    out[13] = 0;\r\n    out[14] = 0;\r\n  }\r\n  out[0] = 1;\r\n  out[5] = 1;\r\n  out[10] = 1;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {mat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(16);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  out[9] = a[9];\r\n  out[10] = a[10];\r\n  out[11] = a[11];\r\n  out[12] = a[12];\r\n  out[13] = a[13];\r\n  out[14] = a[14];\r\n  out[15] = a[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  out[9] = a[9];\r\n  out[10] = a[10];\r\n  out[11] = a[11];\r\n  out[12] = a[12];\r\n  out[13] = a[13];\r\n  out[14] = a[14];\r\n  out[15] = a[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\r\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\r\n  var out = new glMatrix.ARRAY_TYPE(16);\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m03;\r\n  out[4] = m10;\r\n  out[5] = m11;\r\n  out[6] = m12;\r\n  out[7] = m13;\r\n  out[8] = m20;\r\n  out[9] = m21;\r\n  out[10] = m22;\r\n  out[11] = m23;\r\n  out[12] = m30;\r\n  out[13] = m31;\r\n  out[14] = m32;\r\n  out[15] = m33;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\r\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m03;\r\n  out[4] = m10;\r\n  out[5] = m11;\r\n  out[6] = m12;\r\n  out[7] = m13;\r\n  out[8] = m20;\r\n  out[9] = m21;\r\n  out[10] = m22;\r\n  out[11] = m23;\r\n  out[12] = m30;\r\n  out[13] = m31;\r\n  out[14] = m32;\r\n  out[15] = m33;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = 1;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 1;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function transpose(out, a) {\r\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\r\n  if (out === a) {\r\n    var a01 = a[1],\r\n        a02 = a[2],\r\n        a03 = a[3];\r\n    var a12 = a[6],\r\n        a13 = a[7];\r\n    var a23 = a[11];\r\n\r\n    out[1] = a[4];\r\n    out[2] = a[8];\r\n    out[3] = a[12];\r\n    out[4] = a01;\r\n    out[6] = a[9];\r\n    out[7] = a[13];\r\n    out[8] = a02;\r\n    out[9] = a12;\r\n    out[11] = a[14];\r\n    out[12] = a03;\r\n    out[13] = a13;\r\n    out[14] = a23;\r\n  } else {\r\n    out[0] = a[0];\r\n    out[1] = a[4];\r\n    out[2] = a[8];\r\n    out[3] = a[12];\r\n    out[4] = a[1];\r\n    out[5] = a[5];\r\n    out[6] = a[9];\r\n    out[7] = a[13];\r\n    out[8] = a[2];\r\n    out[9] = a[6];\r\n    out[10] = a[10];\r\n    out[11] = a[14];\r\n    out[12] = a[3];\r\n    out[13] = a[7];\r\n    out[14] = a[11];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function invert(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  var b00 = a00 * a11 - a01 * a10;\r\n  var b01 = a00 * a12 - a02 * a10;\r\n  var b02 = a00 * a13 - a03 * a10;\r\n  var b03 = a01 * a12 - a02 * a11;\r\n  var b04 = a01 * a13 - a03 * a11;\r\n  var b05 = a02 * a13 - a03 * a12;\r\n  var b06 = a20 * a31 - a21 * a30;\r\n  var b07 = a20 * a32 - a22 * a30;\r\n  var b08 = a20 * a33 - a23 * a30;\r\n  var b09 = a21 * a32 - a22 * a31;\r\n  var b10 = a21 * a33 - a23 * a31;\r\n  var b11 = a22 * a33 - a23 * a32;\r\n\r\n  // Calculate the determinant\r\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\r\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\r\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\r\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\r\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\r\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\r\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function adjoint(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\r\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\r\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\r\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\r\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\r\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\r\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\r\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\r\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\r\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\r\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\r\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\r\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\r\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\r\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\r\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {mat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\nexport function determinant(a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  var b00 = a00 * a11 - a01 * a10;\r\n  var b01 = a00 * a12 - a02 * a10;\r\n  var b02 = a00 * a13 - a03 * a10;\r\n  var b03 = a01 * a12 - a02 * a11;\r\n  var b04 = a01 * a13 - a03 * a11;\r\n  var b05 = a02 * a13 - a03 * a12;\r\n  var b06 = a20 * a31 - a21 * a30;\r\n  var b07 = a20 * a32 - a22 * a30;\r\n  var b08 = a20 * a33 - a23 * a30;\r\n  var b09 = a21 * a32 - a22 * a31;\r\n  var b10 = a21 * a33 - a23 * a31;\r\n  var b11 = a22 * a33 - a23 * a32;\r\n\r\n  // Calculate the determinant\r\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n}\r\n\r\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  // Cache only the current line of the second matrix\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n  b0 = b[4];b1 = b[5];b2 = b[6];b3 = b[7];\r\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n  b0 = b[8];b1 = b[9];b2 = b[10];b3 = b[11];\r\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n  b0 = b[12];b1 = b[13];b2 = b[14];b3 = b[15];\r\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\r\nexport function translate(out, a, v) {\r\n  var x = v[0],\r\n      y = v[1],\r\n      z = v[2];\r\n  var a00 = void 0,\r\n      a01 = void 0,\r\n      a02 = void 0,\r\n      a03 = void 0;\r\n  var a10 = void 0,\r\n      a11 = void 0,\r\n      a12 = void 0,\r\n      a13 = void 0;\r\n  var a20 = void 0,\r\n      a21 = void 0,\r\n      a22 = void 0,\r\n      a23 = void 0;\r\n\r\n  if (a === out) {\r\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\r\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\r\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\r\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\r\n  } else {\r\n    a00 = a[0];a01 = a[1];a02 = a[2];a03 = a[3];\r\n    a10 = a[4];a11 = a[5];a12 = a[6];a13 = a[7];\r\n    a20 = a[8];a21 = a[9];a22 = a[10];a23 = a[11];\r\n\r\n    out[0] = a00;out[1] = a01;out[2] = a02;out[3] = a03;\r\n    out[4] = a10;out[5] = a11;out[6] = a12;out[7] = a13;\r\n    out[8] = a20;out[9] = a21;out[10] = a22;out[11] = a23;\r\n\r\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\r\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\r\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\r\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {vec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\r\nexport function scale(out, a, v) {\r\n  var x = v[0],\r\n      y = v[1],\r\n      z = v[2];\r\n\r\n  out[0] = a[0] * x;\r\n  out[1] = a[1] * x;\r\n  out[2] = a[2] * x;\r\n  out[3] = a[3] * x;\r\n  out[4] = a[4] * y;\r\n  out[5] = a[5] * y;\r\n  out[6] = a[6] * y;\r\n  out[7] = a[7] * y;\r\n  out[8] = a[8] * z;\r\n  out[9] = a[9] * z;\r\n  out[10] = a[10] * z;\r\n  out[11] = a[11] * z;\r\n  out[12] = a[12];\r\n  out[13] = a[13];\r\n  out[14] = a[14];\r\n  out[15] = a[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\r\nexport function rotate(out, a, rad, axis) {\r\n  var x = axis[0],\r\n      y = axis[1],\r\n      z = axis[2];\r\n  var len = Math.sqrt(x * x + y * y + z * z);\r\n  var s = void 0,\r\n      c = void 0,\r\n      t = void 0;\r\n  var a00 = void 0,\r\n      a01 = void 0,\r\n      a02 = void 0,\r\n      a03 = void 0;\r\n  var a10 = void 0,\r\n      a11 = void 0,\r\n      a12 = void 0,\r\n      a13 = void 0;\r\n  var a20 = void 0,\r\n      a21 = void 0,\r\n      a22 = void 0,\r\n      a23 = void 0;\r\n  var b00 = void 0,\r\n      b01 = void 0,\r\n      b02 = void 0;\r\n  var b10 = void 0,\r\n      b11 = void 0,\r\n      b12 = void 0;\r\n  var b20 = void 0,\r\n      b21 = void 0,\r\n      b22 = void 0;\r\n\r\n  if (len < glMatrix.EPSILON) {\r\n    return null;\r\n  }\r\n\r\n  len = 1 / len;\r\n  x *= len;\r\n  y *= len;\r\n  z *= len;\r\n\r\n  s = Math.sin(rad);\r\n  c = Math.cos(rad);\r\n  t = 1 - c;\r\n\r\n  a00 = a[0];a01 = a[1];a02 = a[2];a03 = a[3];\r\n  a10 = a[4];a11 = a[5];a12 = a[6];a13 = a[7];\r\n  a20 = a[8];a21 = a[9];a22 = a[10];a23 = a[11];\r\n\r\n  // Construct the elements of the rotation matrix\r\n  b00 = x * x * t + c;b01 = y * x * t + z * s;b02 = z * x * t - y * s;\r\n  b10 = x * y * t - z * s;b11 = y * y * t + c;b12 = z * y * t + x * s;\r\n  b20 = x * z * t + y * s;b21 = y * z * t - x * s;b22 = z * z * t + c;\r\n\r\n  // Perform rotation-specific matrix multiplication\r\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\r\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\r\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\r\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\r\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\r\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\r\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\r\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\r\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\r\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\r\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\r\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged last row\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function rotateX(out, a, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  var a10 = a[4];\r\n  var a11 = a[5];\r\n  var a12 = a[6];\r\n  var a13 = a[7];\r\n  var a20 = a[8];\r\n  var a21 = a[9];\r\n  var a22 = a[10];\r\n  var a23 = a[11];\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged rows\r\n    out[0] = a[0];\r\n    out[1] = a[1];\r\n    out[2] = a[2];\r\n    out[3] = a[3];\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[4] = a10 * c + a20 * s;\r\n  out[5] = a11 * c + a21 * s;\r\n  out[6] = a12 * c + a22 * s;\r\n  out[7] = a13 * c + a23 * s;\r\n  out[8] = a20 * c - a10 * s;\r\n  out[9] = a21 * c - a11 * s;\r\n  out[10] = a22 * c - a12 * s;\r\n  out[11] = a23 * c - a13 * s;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function rotateY(out, a, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  var a00 = a[0];\r\n  var a01 = a[1];\r\n  var a02 = a[2];\r\n  var a03 = a[3];\r\n  var a20 = a[8];\r\n  var a21 = a[9];\r\n  var a22 = a[10];\r\n  var a23 = a[11];\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged rows\r\n    out[4] = a[4];\r\n    out[5] = a[5];\r\n    out[6] = a[6];\r\n    out[7] = a[7];\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = a00 * c - a20 * s;\r\n  out[1] = a01 * c - a21 * s;\r\n  out[2] = a02 * c - a22 * s;\r\n  out[3] = a03 * c - a23 * s;\r\n  out[8] = a00 * s + a20 * c;\r\n  out[9] = a01 * s + a21 * c;\r\n  out[10] = a02 * s + a22 * c;\r\n  out[11] = a03 * s + a23 * c;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function rotateZ(out, a, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  var a00 = a[0];\r\n  var a01 = a[1];\r\n  var a02 = a[2];\r\n  var a03 = a[3];\r\n  var a10 = a[4];\r\n  var a11 = a[5];\r\n  var a12 = a[6];\r\n  var a13 = a[7];\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged last row\r\n    out[8] = a[8];\r\n    out[9] = a[9];\r\n    out[10] = a[10];\r\n    out[11] = a[11];\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = a00 * c + a10 * s;\r\n  out[1] = a01 * c + a11 * s;\r\n  out[2] = a02 * c + a12 * s;\r\n  out[3] = a03 * c + a13 * s;\r\n  out[4] = a10 * c - a00 * s;\r\n  out[5] = a11 * c - a01 * s;\r\n  out[6] = a12 * c - a02 * s;\r\n  out[7] = a13 * c - a03 * s;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromTranslation(out, v) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = 1;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 1;\r\n  out[11] = 0;\r\n  out[12] = v[0];\r\n  out[13] = v[1];\r\n  out[14] = v[2];\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromScaling(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = v[1];\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = v[2];\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotation(out, rad, axis) {\r\n  var x = axis[0],\r\n      y = axis[1],\r\n      z = axis[2];\r\n  var len = Math.sqrt(x * x + y * y + z * z);\r\n  var s = void 0,\r\n      c = void 0,\r\n      t = void 0;\r\n\r\n  if (len < glMatrix.EPSILON) {\r\n    return null;\r\n  }\r\n\r\n  len = 1 / len;\r\n  x *= len;\r\n  y *= len;\r\n  z *= len;\r\n\r\n  s = Math.sin(rad);\r\n  c = Math.cos(rad);\r\n  t = 1 - c;\r\n\r\n  // Perform rotation-specific matrix multiplication\r\n  out[0] = x * x * t + c;\r\n  out[1] = y * x * t + z * s;\r\n  out[2] = z * x * t - y * s;\r\n  out[3] = 0;\r\n  out[4] = x * y * t - z * s;\r\n  out[5] = y * y * t + c;\r\n  out[6] = z * y * t + x * s;\r\n  out[7] = 0;\r\n  out[8] = x * z * t + y * s;\r\n  out[9] = y * z * t - x * s;\r\n  out[10] = z * z * t + c;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function fromXRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = c;\r\n  out[6] = s;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = -s;\r\n  out[10] = c;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function fromYRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = c;\r\n  out[1] = 0;\r\n  out[2] = -s;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = 1;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = s;\r\n  out[9] = 0;\r\n  out[10] = c;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function fromZRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = c;\r\n  out[1] = s;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = -s;\r\n  out[5] = c;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 1;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotationTranslation(out, q, v) {\r\n  // Quaternion math\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var xy = x * y2;\r\n  var xz = x * z2;\r\n  var yy = y * y2;\r\n  var yz = y * z2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n\r\n  out[0] = 1 - (yy + zz);\r\n  out[1] = xy + wz;\r\n  out[2] = xz - wy;\r\n  out[3] = 0;\r\n  out[4] = xy - wz;\r\n  out[5] = 1 - (xx + zz);\r\n  out[6] = yz + wx;\r\n  out[7] = 0;\r\n  out[8] = xz + wy;\r\n  out[9] = yz - wx;\r\n  out[10] = 1 - (xx + yy);\r\n  out[11] = 0;\r\n  out[12] = v[0];\r\n  out[13] = v[1];\r\n  out[14] = v[2];\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {quat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\r\nexport function fromQuat2(out, a) {\r\n  var translation = new glMatrix.ARRAY_TYPE(3);\r\n  var bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3],\r\n      ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7];\r\n\r\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw;\r\n  //Only scale if it makes sense\r\n  if (magnitude > 0) {\r\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\r\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\r\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\r\n  } else {\r\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\r\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\r\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\r\n  }\r\n  fromRotationTranslation(out, a, translation);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\r\nexport function getTranslation(out, mat) {\r\n  out[0] = mat[12];\r\n  out[1] = mat[13];\r\n  out[2] = mat[14];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\r\nexport function getScaling(out, mat) {\r\n  var m11 = mat[0];\r\n  var m12 = mat[1];\r\n  var m13 = mat[2];\r\n  var m21 = mat[4];\r\n  var m22 = mat[5];\r\n  var m23 = mat[6];\r\n  var m31 = mat[8];\r\n  var m32 = mat[9];\r\n  var m33 = mat[10];\r\n\r\n  out[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\r\n  out[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\r\n  out[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {mat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\r\nexport function getRotation(out, mat) {\r\n  // Algorithm taken from http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\r\n  var trace = mat[0] + mat[5] + mat[10];\r\n  var S = 0;\r\n\r\n  if (trace > 0) {\r\n    S = Math.sqrt(trace + 1.0) * 2;\r\n    out[3] = 0.25 * S;\r\n    out[0] = (mat[6] - mat[9]) / S;\r\n    out[1] = (mat[8] - mat[2]) / S;\r\n    out[2] = (mat[1] - mat[4]) / S;\r\n  } else if (mat[0] > mat[5] && mat[0] > mat[10]) {\r\n    S = Math.sqrt(1.0 + mat[0] - mat[5] - mat[10]) * 2;\r\n    out[3] = (mat[6] - mat[9]) / S;\r\n    out[0] = 0.25 * S;\r\n    out[1] = (mat[1] + mat[4]) / S;\r\n    out[2] = (mat[8] + mat[2]) / S;\r\n  } else if (mat[5] > mat[10]) {\r\n    S = Math.sqrt(1.0 + mat[5] - mat[0] - mat[10]) * 2;\r\n    out[3] = (mat[8] - mat[2]) / S;\r\n    out[0] = (mat[1] + mat[4]) / S;\r\n    out[1] = 0.25 * S;\r\n    out[2] = (mat[6] + mat[9]) / S;\r\n  } else {\r\n    S = Math.sqrt(1.0 + mat[10] - mat[0] - mat[5]) * 2;\r\n    out[3] = (mat[1] - mat[4]) / S;\r\n    out[0] = (mat[8] + mat[2]) / S;\r\n    out[1] = (mat[6] + mat[9]) / S;\r\n    out[2] = 0.25 * S;\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotationTranslationScale(out, q, v, s) {\r\n  // Quaternion math\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var xy = x * y2;\r\n  var xz = x * z2;\r\n  var yy = y * y2;\r\n  var yz = y * z2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n  var sx = s[0];\r\n  var sy = s[1];\r\n  var sz = s[2];\r\n\r\n  out[0] = (1 - (yy + zz)) * sx;\r\n  out[1] = (xy + wz) * sx;\r\n  out[2] = (xz - wy) * sx;\r\n  out[3] = 0;\r\n  out[4] = (xy - wz) * sy;\r\n  out[5] = (1 - (xx + zz)) * sy;\r\n  out[6] = (yz + wx) * sy;\r\n  out[7] = 0;\r\n  out[8] = (xz + wy) * sz;\r\n  out[9] = (yz - wx) * sz;\r\n  out[10] = (1 - (xx + yy)) * sz;\r\n  out[11] = 0;\r\n  out[12] = v[0];\r\n  out[13] = v[1];\r\n  out[14] = v[2];\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @param {vec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\r\n  // Quaternion math\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var xy = x * y2;\r\n  var xz = x * z2;\r\n  var yy = y * y2;\r\n  var yz = y * z2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n\r\n  var sx = s[0];\r\n  var sy = s[1];\r\n  var sz = s[2];\r\n\r\n  var ox = o[0];\r\n  var oy = o[1];\r\n  var oz = o[2];\r\n\r\n  var out0 = (1 - (yy + zz)) * sx;\r\n  var out1 = (xy + wz) * sx;\r\n  var out2 = (xz - wy) * sx;\r\n  var out4 = (xy - wz) * sy;\r\n  var out5 = (1 - (xx + zz)) * sy;\r\n  var out6 = (yz + wx) * sy;\r\n  var out8 = (xz + wy) * sz;\r\n  var out9 = (yz - wx) * sz;\r\n  var out10 = (1 - (xx + yy)) * sz;\r\n\r\n  out[0] = out0;\r\n  out[1] = out1;\r\n  out[2] = out2;\r\n  out[3] = 0;\r\n  out[4] = out4;\r\n  out[5] = out5;\r\n  out[6] = out6;\r\n  out[7] = 0;\r\n  out[8] = out8;\r\n  out[9] = out9;\r\n  out[10] = out10;\r\n  out[11] = 0;\r\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\r\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\r\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\r\nexport function fromQuat(out, q) {\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var yx = y * x2;\r\n  var yy = y * y2;\r\n  var zx = z * x2;\r\n  var zy = z * y2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n\r\n  out[0] = 1 - yy - zz;\r\n  out[1] = yx + wz;\r\n  out[2] = zx - wy;\r\n  out[3] = 0;\r\n\r\n  out[4] = yx - wz;\r\n  out[5] = 1 - xx - zz;\r\n  out[6] = zy + wx;\r\n  out[7] = 0;\r\n\r\n  out[8] = zx + wy;\r\n  out[9] = zy - wx;\r\n  out[10] = 1 - xx - yy;\r\n  out[11] = 0;\r\n\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\nexport function frustum(out, left, right, bottom, top, near, far) {\r\n  var rl = 1 / (right - left);\r\n  var tb = 1 / (top - bottom);\r\n  var nf = 1 / (near - far);\r\n  out[0] = near * 2 * rl;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = near * 2 * tb;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = (right + left) * rl;\r\n  out[9] = (top + bottom) * tb;\r\n  out[10] = (far + near) * nf;\r\n  out[11] = -1;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = far * near * 2 * nf;\r\n  out[15] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\r\nexport function perspective(out, fovy, aspect, near, far) {\r\n  var f = 1.0 / Math.tan(fovy / 2),\r\n      nf = void 0;\r\n  out[0] = f / aspect;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = f;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[11] = -1;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[15] = 0;\r\n  if (far != null && far !== Infinity) {\r\n    nf = 1 / (near - far);\r\n    out[10] = (far + near) * nf;\r\n    out[14] = 2 * far * near * nf;\r\n  } else {\r\n    out[10] = -1;\r\n    out[14] = -2 * near;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\r\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\r\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\r\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\r\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\r\n  var xScale = 2.0 / (leftTan + rightTan);\r\n  var yScale = 2.0 / (upTan + downTan);\r\n\r\n  out[0] = xScale;\r\n  out[1] = 0.0;\r\n  out[2] = 0.0;\r\n  out[3] = 0.0;\r\n  out[4] = 0.0;\r\n  out[5] = yScale;\r\n  out[6] = 0.0;\r\n  out[7] = 0.0;\r\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\r\n  out[9] = (upTan - downTan) * yScale * 0.5;\r\n  out[10] = far / (near - far);\r\n  out[11] = -1.0;\r\n  out[12] = 0.0;\r\n  out[13] = 0.0;\r\n  out[14] = far * near / (near - far);\r\n  out[15] = 0.0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\nexport function ortho(out, left, right, bottom, top, near, far) {\r\n  var lr = 1 / (left - right);\r\n  var bt = 1 / (bottom - top);\r\n  var nf = 1 / (near - far);\r\n  out[0] = -2 * lr;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = -2 * bt;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 2 * nf;\r\n  out[11] = 0;\r\n  out[12] = (left + right) * lr;\r\n  out[13] = (top + bottom) * bt;\r\n  out[14] = (far + near) * nf;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\r\nexport function lookAt(out, eye, center, up) {\r\n  var x0 = void 0,\r\n      x1 = void 0,\r\n      x2 = void 0,\r\n      y0 = void 0,\r\n      y1 = void 0,\r\n      y2 = void 0,\r\n      z0 = void 0,\r\n      z1 = void 0,\r\n      z2 = void 0,\r\n      len = void 0;\r\n  var eyex = eye[0];\r\n  var eyey = eye[1];\r\n  var eyez = eye[2];\r\n  var upx = up[0];\r\n  var upy = up[1];\r\n  var upz = up[2];\r\n  var centerx = center[0];\r\n  var centery = center[1];\r\n  var centerz = center[2];\r\n\r\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\r\n    return identity(out);\r\n  }\r\n\r\n  z0 = eyex - centerx;\r\n  z1 = eyey - centery;\r\n  z2 = eyez - centerz;\r\n\r\n  len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\r\n  z0 *= len;\r\n  z1 *= len;\r\n  z2 *= len;\r\n\r\n  x0 = upy * z2 - upz * z1;\r\n  x1 = upz * z0 - upx * z2;\r\n  x2 = upx * z1 - upy * z0;\r\n  len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\r\n  if (!len) {\r\n    x0 = 0;\r\n    x1 = 0;\r\n    x2 = 0;\r\n  } else {\r\n    len = 1 / len;\r\n    x0 *= len;\r\n    x1 *= len;\r\n    x2 *= len;\r\n  }\r\n\r\n  y0 = z1 * x2 - z2 * x1;\r\n  y1 = z2 * x0 - z0 * x2;\r\n  y2 = z0 * x1 - z1 * x0;\r\n\r\n  len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\r\n  if (!len) {\r\n    y0 = 0;\r\n    y1 = 0;\r\n    y2 = 0;\r\n  } else {\r\n    len = 1 / len;\r\n    y0 *= len;\r\n    y1 *= len;\r\n    y2 *= len;\r\n  }\r\n\r\n  out[0] = x0;\r\n  out[1] = y0;\r\n  out[2] = z0;\r\n  out[3] = 0;\r\n  out[4] = x1;\r\n  out[5] = y1;\r\n  out[6] = z1;\r\n  out[7] = 0;\r\n  out[8] = x2;\r\n  out[9] = y2;\r\n  out[10] = z2;\r\n  out[11] = 0;\r\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\r\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\r\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\r\nexport function targetTo(out, eye, target, up) {\r\n  var eyex = eye[0],\r\n      eyey = eye[1],\r\n      eyez = eye[2],\r\n      upx = up[0],\r\n      upy = up[1],\r\n      upz = up[2];\r\n\r\n  var z0 = eyex - target[0],\r\n      z1 = eyey - target[1],\r\n      z2 = eyez - target[2];\r\n\r\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\r\n  if (len > 0) {\r\n    len = 1 / Math.sqrt(len);\r\n    z0 *= len;\r\n    z1 *= len;\r\n    z2 *= len;\r\n  }\r\n\r\n  var x0 = upy * z2 - upz * z1,\r\n      x1 = upz * z0 - upx * z2,\r\n      x2 = upx * z1 - upy * z0;\r\n\r\n  len = x0 * x0 + x1 * x1 + x2 * x2;\r\n  if (len > 0) {\r\n    len = 1 / Math.sqrt(len);\r\n    x0 *= len;\r\n    x1 *= len;\r\n    x2 *= len;\r\n  }\r\n\r\n  out[0] = x0;\r\n  out[1] = x1;\r\n  out[2] = x2;\r\n  out[3] = 0;\r\n  out[4] = z1 * x2 - z2 * x1;\r\n  out[5] = z2 * x0 - z0 * x2;\r\n  out[6] = z0 * x1 - z1 * x0;\r\n  out[7] = 0;\r\n  out[8] = z0;\r\n  out[9] = z1;\r\n  out[10] = z2;\r\n  out[11] = 0;\r\n  out[12] = eyex;\r\n  out[13] = eyey;\r\n  out[14] = eyez;\r\n  out[15] = 1;\r\n  return out;\r\n};\r\n\r\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {mat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\r\nexport function str(a) {\r\n  return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' + a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\r\n}\r\n\r\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {mat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\r\nexport function frob(a) {\r\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2));\r\n}\r\n\r\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  out[6] = a[6] + b[6];\r\n  out[7] = a[7] + b[7];\r\n  out[8] = a[8] + b[8];\r\n  out[9] = a[9] + b[9];\r\n  out[10] = a[10] + b[10];\r\n  out[11] = a[11] + b[11];\r\n  out[12] = a[12] + b[12];\r\n  out[13] = a[13] + b[13];\r\n  out[14] = a[14] + b[14];\r\n  out[15] = a[15] + b[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  out[4] = a[4] - b[4];\r\n  out[5] = a[5] - b[5];\r\n  out[6] = a[6] - b[6];\r\n  out[7] = a[7] - b[7];\r\n  out[8] = a[8] - b[8];\r\n  out[9] = a[9] - b[9];\r\n  out[10] = a[10] - b[10];\r\n  out[11] = a[11] - b[11];\r\n  out[12] = a[12] - b[12];\r\n  out[13] = a[13] - b[13];\r\n  out[14] = a[14] - b[14];\r\n  out[15] = a[15] - b[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\r\nexport function multiplyScalar(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  out[6] = a[6] * b;\r\n  out[7] = a[7] * b;\r\n  out[8] = a[8] * b;\r\n  out[9] = a[9] * b;\r\n  out[10] = a[10] * b;\r\n  out[11] = a[11] * b;\r\n  out[12] = a[12] * b;\r\n  out[13] = a[13] * b;\r\n  out[14] = a[14] * b;\r\n  out[15] = a[15] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\r\nexport function multiplyScalarAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  out[4] = a[4] + b[4] * scale;\r\n  out[5] = a[5] + b[5] * scale;\r\n  out[6] = a[6] + b[6] * scale;\r\n  out[7] = a[7] + b[7] * scale;\r\n  out[8] = a[8] + b[8] * scale;\r\n  out[9] = a[9] + b[9] * scale;\r\n  out[10] = a[10] + b[10] * scale;\r\n  out[11] = a[11] + b[11] * scale;\r\n  out[12] = a[12] + b[12] * scale;\r\n  out[13] = a[13] + b[13] * scale;\r\n  out[14] = a[14] + b[14] * scale;\r\n  out[15] = a[15] + b[15] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var a4 = a[4],\r\n      a5 = a[5],\r\n      a6 = a[6],\r\n      a7 = a[7];\r\n  var a8 = a[8],\r\n      a9 = a[9],\r\n      a10 = a[10],\r\n      a11 = a[11];\r\n  var a12 = a[12],\r\n      a13 = a[13],\r\n      a14 = a[14],\r\n      a15 = a[15];\r\n\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  var b4 = b[4],\r\n      b5 = b[5],\r\n      b6 = b[6],\r\n      b7 = b[7];\r\n  var b8 = b[8],\r\n      b9 = b[9],\r\n      b10 = b[10],\r\n      b11 = b[11];\r\n  var b12 = b[12],\r\n      b13 = b[13],\r\n      b14 = b[14],\r\n      b15 = b[15];\r\n\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\r\n}\r\n\r\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\r\n\r\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(3);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {vec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(3);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport function length(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  return Math.sqrt(x * x + y * y + z * z);\r\n}\r\n\r\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\r\nexport function fromValues(x, y, z) {\r\n  var out = new glMatrix.ARRAY_TYPE(3);\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the source vector\r\n * @returns {vec3} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\r\nexport function set(out, x, y, z) {\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  out[0] = a[0] * b[0];\r\n  out[1] = a[1] * b[1];\r\n  out[2] = a[2] * b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function divide(out, a, b) {\r\n  out[0] = a[0] / b[0];\r\n  out[1] = a[1] / b[1];\r\n  out[2] = a[2] / b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\r\nexport function ceil(out, a) {\r\n  out[0] = Math.ceil(a[0]);\r\n  out[1] = Math.ceil(a[1]);\r\n  out[2] = Math.ceil(a[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to floor\r\n * @returns {vec3} out\r\n */\r\nexport function floor(out, a) {\r\n  out[0] = Math.floor(a[0]);\r\n  out[1] = Math.floor(a[1]);\r\n  out[2] = Math.floor(a[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function min(out, a, b) {\r\n  out[0] = Math.min(a[0], b[0]);\r\n  out[1] = Math.min(a[1], b[1]);\r\n  out[2] = Math.min(a[2], b[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function max(out, a, b) {\r\n  out[0] = Math.max(a[0], b[0]);\r\n  out[1] = Math.max(a[1], b[1]);\r\n  out[2] = Math.max(a[2], b[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to round\r\n * @returns {vec3} out\r\n */\r\nexport function round(out, a) {\r\n  out[0] = Math.round(a[0]);\r\n  out[1] = Math.round(a[1]);\r\n  out[2] = Math.round(a[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\r\nexport function scaleAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\r\nexport function distance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  return Math.sqrt(x * x + y * y + z * z);\r\n}\r\n\r\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\r\nexport function squaredDistance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  return x * x + y * y + z * z;\r\n}\r\n\r\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\r\nexport function squaredLength(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  return x * x + y * y + z * z;\r\n}\r\n\r\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to negate\r\n * @returns {vec3} out\r\n */\r\nexport function negate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to invert\r\n * @returns {vec3} out\r\n */\r\nexport function inverse(out, a) {\r\n  out[0] = 1.0 / a[0];\r\n  out[1] = 1.0 / a[1];\r\n  out[2] = 1.0 / a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\r\nexport function normalize(out, a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var len = x * x + y * y + z * z;\r\n  if (len > 0) {\r\n    //TODO: evaluate use of glm_invsqrt here?\r\n    len = 1 / Math.sqrt(len);\r\n    out[0] = a[0] * len;\r\n    out[1] = a[1] * len;\r\n    out[2] = a[2] * len;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\r\nexport function dot(a, b) {\r\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\r\n}\r\n\r\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function cross(out, a, b) {\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2];\r\n  var bx = b[0],\r\n      by = b[1],\r\n      bz = b[2];\r\n\r\n  out[0] = ay * bz - az * by;\r\n  out[1] = az * bx - ax * bz;\r\n  out[2] = ax * by - ay * bx;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n  var ax = a[0];\r\n  var ay = a[1];\r\n  var az = a[2];\r\n  out[0] = ax + t * (b[0] - ax);\r\n  out[1] = ay + t * (b[1] - ay);\r\n  out[2] = az + t * (b[2] - az);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\r\nexport function hermite(out, a, b, c, d, t) {\r\n  var factorTimes2 = t * t;\r\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\r\n  var factor2 = factorTimes2 * (t - 2) + t;\r\n  var factor3 = factorTimes2 * (t - 1);\r\n  var factor4 = factorTimes2 * (3 - 2 * t);\r\n\r\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\r\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\r\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\r\nexport function bezier(out, a, b, c, d, t) {\r\n  var inverseFactor = 1 - t;\r\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\r\n  var factorTimes2 = t * t;\r\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\r\n  var factor2 = 3 * t * inverseFactorTimesTwo;\r\n  var factor3 = 3 * factorTimes2 * inverseFactor;\r\n  var factor4 = factorTimes2 * t;\r\n\r\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\r\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\r\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\r\nexport function random(out, scale) {\r\n  scale = scale || 1.0;\r\n\r\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\r\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\r\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\r\n\r\n  out[0] = Math.cos(r) * zScale;\r\n  out[1] = Math.sin(r) * zScale;\r\n  out[2] = z * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\r\nexport function transformMat4(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\r\n  w = w || 1.0;\r\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\r\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\r\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\r\nexport function transformMat3(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  out[0] = x * m[0] + y * m[3] + z * m[6];\r\n  out[1] = x * m[1] + y * m[4] + z * m[7];\r\n  out[2] = x * m[2] + y * m[5] + z * m[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\r\nexport function transformQuat(out, a, q) {\r\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\r\n  var qx = q[0],\r\n      qy = q[1],\r\n      qz = q[2],\r\n      qw = q[3];\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  // var qvec = [qx, qy, qz];\r\n  // var uv = vec3.cross([], qvec, a);\r\n  var uvx = qy * z - qz * y,\r\n      uvy = qz * x - qx * z,\r\n      uvz = qx * y - qy * x;\r\n  // var uuv = vec3.cross([], qvec, uv);\r\n  var uuvx = qy * uvz - qz * uvy,\r\n      uuvy = qz * uvx - qx * uvz,\r\n      uuvz = qx * uvy - qy * uvx;\r\n  // vec3.scale(uv, uv, 2 * w);\r\n  var w2 = qw * 2;\r\n  uvx *= w2;\r\n  uvy *= w2;\r\n  uvz *= w2;\r\n  // vec3.scale(uuv, uuv, 2);\r\n  uuvx *= 2;\r\n  uuvy *= 2;\r\n  uuvz *= 2;\r\n  // return vec3.add(out, a, vec3.add(out, uv, uuv));\r\n  out[0] = x + uvx + uuvx;\r\n  out[1] = y + uvy + uuvy;\r\n  out[2] = z + uvz + uuvz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\r\nexport function rotateX(out, a, b, c) {\r\n  var p = [],\r\n      r = [];\r\n  //Translate point to the origin\r\n  p[0] = a[0] - b[0];\r\n  p[1] = a[1] - b[1];\r\n  p[2] = a[2] - b[2];\r\n\r\n  //perform rotation\r\n  r[0] = p[0];\r\n  r[1] = p[1] * Math.cos(c) - p[2] * Math.sin(c);\r\n  r[2] = p[1] * Math.sin(c) + p[2] * Math.cos(c);\r\n\r\n  //translate to correct position\r\n  out[0] = r[0] + b[0];\r\n  out[1] = r[1] + b[1];\r\n  out[2] = r[2] + b[2];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\r\nexport function rotateY(out, a, b, c) {\r\n  var p = [],\r\n      r = [];\r\n  //Translate point to the origin\r\n  p[0] = a[0] - b[0];\r\n  p[1] = a[1] - b[1];\r\n  p[2] = a[2] - b[2];\r\n\r\n  //perform rotation\r\n  r[0] = p[2] * Math.sin(c) + p[0] * Math.cos(c);\r\n  r[1] = p[1];\r\n  r[2] = p[2] * Math.cos(c) - p[0] * Math.sin(c);\r\n\r\n  //translate to correct position\r\n  out[0] = r[0] + b[0];\r\n  out[1] = r[1] + b[1];\r\n  out[2] = r[2] + b[2];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\r\nexport function rotateZ(out, a, b, c) {\r\n  var p = [],\r\n      r = [];\r\n  //Translate point to the origin\r\n  p[0] = a[0] - b[0];\r\n  p[1] = a[1] - b[1];\r\n  p[2] = a[2] - b[2];\r\n\r\n  //perform rotation\r\n  r[0] = p[0] * Math.cos(c) - p[1] * Math.sin(c);\r\n  r[1] = p[0] * Math.sin(c) + p[1] * Math.cos(c);\r\n  r[2] = p[2];\r\n\r\n  //translate to correct position\r\n  out[0] = r[0] + b[0];\r\n  out[1] = r[1] + b[1];\r\n  out[2] = r[2] + b[2];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {vec3} a The first operand\r\n * @param {vec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\r\nexport function angle(a, b) {\r\n  var tempA = fromValues(a[0], a[1], a[2]);\r\n  var tempB = fromValues(b[0], b[1], b[2]);\r\n\r\n  normalize(tempA, tempA);\r\n  normalize(tempB, tempB);\r\n\r\n  var cosine = dot(tempA, tempB);\r\n\r\n  if (cosine > 1.0) {\r\n    return 0;\r\n  } else if (cosine < -1.0) {\r\n    return Math.PI;\r\n  } else {\r\n    return Math.acos(cosine);\r\n  }\r\n}\r\n\r\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\r\n}\r\n\r\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;\r\n\r\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\r\nexport var div = divide;\r\n\r\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\r\nexport var dist = distance;\r\n\r\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\r\nexport var sqrDist = squaredDistance;\r\n\r\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\r\nexport var forEach = function () {\r\n  var vec = create();\r\n\r\n  return function (a, stride, offset, count, fn, arg) {\r\n    var i = void 0,\r\n        l = void 0;\r\n    if (!stride) {\r\n      stride = 3;\r\n    }\r\n\r\n    if (!offset) {\r\n      offset = 0;\r\n    }\r\n\r\n    if (count) {\r\n      l = Math.min(count * stride + offset, a.length);\r\n    } else {\r\n      l = a.length;\r\n    }\r\n\r\n    for (i = offset; i < l; i += stride) {\r\n      vec[0] = a[i];vec[1] = a[i + 1];vec[2] = a[i + 2];\r\n      fn(vec, vec, arg);\r\n      a[i] = vec[0];a[i + 1] = vec[1];a[i + 2] = vec[2];\r\n    }\r\n\r\n    return a;\r\n  };\r\n}();","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 4 Dimensional Vector\r\n * @module vec4\r\n */\r\n\r\n/**\r\n * Creates a new, empty vec4\r\n *\r\n * @returns {vec4} a new 4D vector\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec4 initialized with values from an existing vector\r\n *\r\n * @param {vec4} a vector to clone\r\n * @returns {vec4} a new 4D vector\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec4 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} a new 4D vector\r\n */\r\nexport function fromValues(x, y, z, w) {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  out[3] = w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one vec4 to another\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the source vector\r\n * @returns {vec4} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a vec4 to the given values\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} out\r\n */\r\nexport function set(out, x, y, z, w) {\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  out[3] = w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiplies two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  out[0] = a[0] * b[0];\r\n  out[1] = a[1] * b[1];\r\n  out[2] = a[2] * b[2];\r\n  out[3] = a[3] * b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Divides two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function divide(out, a, b) {\r\n  out[0] = a[0] / b[0];\r\n  out[1] = a[1] / b[1];\r\n  out[2] = a[2] / b[2];\r\n  out[3] = a[3] / b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.ceil the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to ceil\r\n * @returns {vec4} out\r\n */\r\nexport function ceil(out, a) {\r\n  out[0] = Math.ceil(a[0]);\r\n  out[1] = Math.ceil(a[1]);\r\n  out[2] = Math.ceil(a[2]);\r\n  out[3] = Math.ceil(a[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.floor the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to floor\r\n * @returns {vec4} out\r\n */\r\nexport function floor(out, a) {\r\n  out[0] = Math.floor(a[0]);\r\n  out[1] = Math.floor(a[1]);\r\n  out[2] = Math.floor(a[2]);\r\n  out[3] = Math.floor(a[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the minimum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function min(out, a, b) {\r\n  out[0] = Math.min(a[0], b[0]);\r\n  out[1] = Math.min(a[1], b[1]);\r\n  out[2] = Math.min(a[2], b[2]);\r\n  out[3] = Math.min(a[3], b[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the maximum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function max(out, a, b) {\r\n  out[0] = Math.max(a[0], b[0]);\r\n  out[1] = Math.max(a[1], b[1]);\r\n  out[2] = Math.max(a[2], b[2]);\r\n  out[3] = Math.max(a[3], b[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.round the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to round\r\n * @returns {vec4} out\r\n */\r\nexport function round(out, a) {\r\n  out[0] = Math.round(a[0]);\r\n  out[1] = Math.round(a[1]);\r\n  out[2] = Math.round(a[2]);\r\n  out[3] = Math.round(a[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales a vec4 by a scalar number\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec4} out\r\n */\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec4's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec4} out\r\n */\r\nexport function scaleAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\r\nexport function distance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  var w = b[3] - a[3];\r\n  return Math.sqrt(x * x + y * y + z * z + w * w);\r\n}\r\n\r\n/**\r\n * Calculates the squared euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\r\nexport function squaredDistance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  var w = b[3] - a[3];\r\n  return x * x + y * y + z * z + w * w;\r\n}\r\n\r\n/**\r\n * Calculates the length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport function length(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var w = a[3];\r\n  return Math.sqrt(x * x + y * y + z * z + w * w);\r\n}\r\n\r\n/**\r\n * Calculates the squared length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\r\nexport function squaredLength(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var w = a[3];\r\n  return x * x + y * y + z * z + w * w;\r\n}\r\n\r\n/**\r\n * Negates the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to negate\r\n * @returns {vec4} out\r\n */\r\nexport function negate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = -a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the inverse of the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to invert\r\n * @returns {vec4} out\r\n */\r\nexport function inverse(out, a) {\r\n  out[0] = 1.0 / a[0];\r\n  out[1] = 1.0 / a[1];\r\n  out[2] = 1.0 / a[2];\r\n  out[3] = 1.0 / a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Normalize a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to normalize\r\n * @returns {vec4} out\r\n */\r\nexport function normalize(out, a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var w = a[3];\r\n  var len = x * x + y * y + z * z + w * w;\r\n  if (len > 0) {\r\n    len = 1 / Math.sqrt(len);\r\n    out[0] = x * len;\r\n    out[1] = y * len;\r\n    out[2] = z * len;\r\n    out[3] = w * len;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the dot product of two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\r\nexport function dot(a, b) {\r\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\r\n}\r\n\r\n/**\r\n * Performs a linear interpolation between two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec4} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n  var ax = a[0];\r\n  var ay = a[1];\r\n  var az = a[2];\r\n  var aw = a[3];\r\n  out[0] = ax + t * (b[0] - ax);\r\n  out[1] = ay + t * (b[1] - ay);\r\n  out[2] = az + t * (b[2] - az);\r\n  out[3] = aw + t * (b[3] - aw);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec4} out\r\n */\r\nexport function random(out, scale) {\r\n  scale = scale || 1.0;\r\n\r\n  // Marsaglia, George. Choosing a Point from the Surface of a\r\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\r\n  // http://projecteuclid.org/euclid.aoms/1177692644;\r\n  var v1, v2, v3, v4;\r\n  var s1, s2;\r\n  do {\r\n    v1 = glMatrix.RANDOM() * 2 - 1;\r\n    v2 = glMatrix.RANDOM() * 2 - 1;\r\n    s1 = v1 * v1 + v2 * v2;\r\n  } while (s1 >= 1);\r\n  do {\r\n    v3 = glMatrix.RANDOM() * 2 - 1;\r\n    v4 = glMatrix.RANDOM() * 2 - 1;\r\n    s2 = v3 * v3 + v4 * v4;\r\n  } while (s2 >= 1);\r\n\r\n  var d = Math.sqrt((1 - s1) / s2);\r\n  out[0] = scale * v1;\r\n  out[1] = scale * v2;\r\n  out[2] = scale * v3 * d;\r\n  out[3] = scale * v4 * d;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec4 with a mat4.\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec4} out\r\n */\r\nexport function transformMat4(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2],\r\n      w = a[3];\r\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\r\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\r\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\r\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec4 with a quat\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec4} out\r\n */\r\nexport function transformQuat(out, a, q) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  var qx = q[0],\r\n      qy = q[1],\r\n      qz = q[2],\r\n      qw = q[3];\r\n\r\n  // calculate quat * vec\r\n  var ix = qw * x + qy * z - qz * y;\r\n  var iy = qw * y + qz * x - qx * z;\r\n  var iz = qw * z + qx * y - qy * x;\r\n  var iw = -qx * x - qy * y - qz * z;\r\n\r\n  // calculate result * inverse quat\r\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\r\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\r\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec4} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\r\n}\r\n\r\n/**\r\n * Alias for {@link vec4.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;\r\n\r\n/**\r\n * Alias for {@link vec4.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link vec4.divide}\r\n * @function\r\n */\r\nexport var div = divide;\r\n\r\n/**\r\n * Alias for {@link vec4.distance}\r\n * @function\r\n */\r\nexport var dist = distance;\r\n\r\n/**\r\n * Alias for {@link vec4.squaredDistance}\r\n * @function\r\n */\r\nexport var sqrDist = squaredDistance;\r\n\r\n/**\r\n * Alias for {@link vec4.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Alias for {@link vec4.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Perform some operation over an array of vec4s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\r\nexport var forEach = function () {\r\n  var vec = create();\r\n\r\n  return function (a, stride, offset, count, fn, arg) {\r\n    var i = void 0,\r\n        l = void 0;\r\n    if (!stride) {\r\n      stride = 4;\r\n    }\r\n\r\n    if (!offset) {\r\n      offset = 0;\r\n    }\r\n\r\n    if (count) {\r\n      l = Math.min(count * stride + offset, a.length);\r\n    } else {\r\n      l = a.length;\r\n    }\r\n\r\n    for (i = offset; i < l; i += stride) {\r\n      vec[0] = a[i];vec[1] = a[i + 1];vec[2] = a[i + 2];vec[3] = a[i + 3];\r\n      fn(vec, vec, arg);\r\n      a[i] = vec[0];a[i + 1] = vec[1];a[i + 2] = vec[2];a[i + 3] = vec[3];\r\n    }\r\n\r\n    return a;\r\n  };\r\n}();","import * as glMatrix from \"./common.js\";\r\nimport * as mat3 from \"./mat3.js\";\r\nimport * as vec3 from \"./vec3.js\";\r\nimport * as vec4 from \"./vec4.js\";\r\n\r\n/**\r\n * Quaternion\r\n * @module quat\r\n */\r\n\r\n/**\r\n * Creates a new identity quat\r\n *\r\n * @returns {quat} a new quaternion\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n  }\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a quat to the identity quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 0;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Sets a quat from the given angle and rotation axis,\r\n * then returns it.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {vec3} axis the axis around which to rotate\r\n * @param {Number} rad the angle in radians\r\n * @returns {quat} out\r\n **/\r\nexport function setAxisAngle(out, axis, rad) {\r\n  rad = rad * 0.5;\r\n  var s = Math.sin(rad);\r\n  out[0] = s * axis[0];\r\n  out[1] = s * axis[1];\r\n  out[2] = s * axis[2];\r\n  out[3] = Math.cos(rad);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Gets the rotation axis and angle for a given\r\n *  quaternion. If a quaternion is created with\r\n *  setAxisAngle, this method will return the same\r\n *  values as providied in the original parameter list\r\n *  OR functionally equivalent values.\r\n * Example: The quaternion formed by axis [0, 0, 1] and\r\n *  angle -90 is the same as the quaternion formed by\r\n *  [0, 0, 1] and 270. This method favors the latter.\r\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\r\n * @param  {quat} q     Quaternion to be decomposed\r\n * @return {Number}     Angle, in radians, of the rotation\r\n */\r\nexport function getAxisAngle(out_axis, q) {\r\n  var rad = Math.acos(q[3]) * 2.0;\r\n  var s = Math.sin(rad / 2.0);\r\n  if (s > glMatrix.EPSILON) {\r\n    out_axis[0] = q[0] / s;\r\n    out_axis[1] = q[1] / s;\r\n    out_axis[2] = q[2] / s;\r\n  } else {\r\n    // If s is zero, return any axis (no rotation - axis does not matter)\r\n    out_axis[0] = 1;\r\n    out_axis[1] = 0;\r\n    out_axis[2] = 0;\r\n  }\r\n  return rad;\r\n}\r\n\r\n/**\r\n * Multiplies two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bx = b[0],\r\n      by = b[1],\r\n      bz = b[2],\r\n      bw = b[3];\r\n\r\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\r\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\r\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\r\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a quaternion by the given angle about the X axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\r\nexport function rotateX(out, a, rad) {\r\n  rad *= 0.5;\r\n\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bx = Math.sin(rad),\r\n      bw = Math.cos(rad);\r\n\r\n  out[0] = ax * bw + aw * bx;\r\n  out[1] = ay * bw + az * bx;\r\n  out[2] = az * bw - ay * bx;\r\n  out[3] = aw * bw - ax * bx;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a quaternion by the given angle about the Y axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\r\nexport function rotateY(out, a, rad) {\r\n  rad *= 0.5;\r\n\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var by = Math.sin(rad),\r\n      bw = Math.cos(rad);\r\n\r\n  out[0] = ax * bw - az * by;\r\n  out[1] = ay * bw + aw * by;\r\n  out[2] = az * bw + ax * by;\r\n  out[3] = aw * bw - ay * by;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a quaternion by the given angle about the Z axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\r\nexport function rotateZ(out, a, rad) {\r\n  rad *= 0.5;\r\n\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bz = Math.sin(rad),\r\n      bw = Math.cos(rad);\r\n\r\n  out[0] = ax * bw + ay * bz;\r\n  out[1] = ay * bw - ax * bz;\r\n  out[2] = az * bw + aw * bz;\r\n  out[3] = aw * bw - az * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the W component of a quat from the X, Y, and Z components.\r\n * Assumes that quaternion is 1 unit in length.\r\n * Any existing W component will be ignored.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate W component of\r\n * @returns {quat} out\r\n */\r\nexport function calculateW(out, a) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a spherical linear interpolation between two quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\r\nexport function slerp(out, a, b, t) {\r\n  // benchmarks:\r\n  //    http://jsperf.com/quaternion-slerp-implementations\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bx = b[0],\r\n      by = b[1],\r\n      bz = b[2],\r\n      bw = b[3];\r\n\r\n  var omega = void 0,\r\n      cosom = void 0,\r\n      sinom = void 0,\r\n      scale0 = void 0,\r\n      scale1 = void 0;\r\n\r\n  // calc cosine\r\n  cosom = ax * bx + ay * by + az * bz + aw * bw;\r\n  // adjust signs (if necessary)\r\n  if (cosom < 0.0) {\r\n    cosom = -cosom;\r\n    bx = -bx;\r\n    by = -by;\r\n    bz = -bz;\r\n    bw = -bw;\r\n  }\r\n  // calculate coefficients\r\n  if (1.0 - cosom > glMatrix.EPSILON) {\r\n    // standard case (slerp)\r\n    omega = Math.acos(cosom);\r\n    sinom = Math.sin(omega);\r\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\r\n    scale1 = Math.sin(t * omega) / sinom;\r\n  } else {\r\n    // \"from\" and \"to\" quaternions are very close\r\n    //  ... so we can do a linear interpolation\r\n    scale0 = 1.0 - t;\r\n    scale1 = t;\r\n  }\r\n  // calculate final values\r\n  out[0] = scale0 * ax + scale1 * bx;\r\n  out[1] = scale0 * ay + scale1 * by;\r\n  out[2] = scale0 * az + scale1 * bz;\r\n  out[3] = scale0 * aw + scale1 * bw;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a random quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\r\nexport function random(out) {\r\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\r\n  // TODO: Calling random 3 times is probably not the fastest solution\r\n  var u1 = glMatrix.RANDOM();\r\n  var u2 = glMatrix.RANDOM();\r\n  var u3 = glMatrix.RANDOM();\r\n\r\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\r\n  var sqrtU1 = Math.sqrt(u1);\r\n\r\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\r\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\r\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\r\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the inverse of a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate inverse of\r\n * @returns {quat} out\r\n */\r\nexport function invert(out, a) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\r\n  var invDot = dot ? 1.0 / dot : 0;\r\n\r\n  // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\r\n\r\n  out[0] = -a0 * invDot;\r\n  out[1] = -a1 * invDot;\r\n  out[2] = -a2 * invDot;\r\n  out[3] = a3 * invDot;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the conjugate of a quat\r\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate conjugate of\r\n * @returns {quat} out\r\n */\r\nexport function conjugate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a quaternion from the given 3x3 rotation matrix.\r\n *\r\n * NOTE: The resultant quaternion is not normalized, so you should be sure\r\n * to renormalize the quaternion yourself where necessary.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {mat3} m rotation matrix\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport function fromMat3(out, m) {\r\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\r\n  // article \"Quaternion Calculus and Fast Animation\".\r\n  var fTrace = m[0] + m[4] + m[8];\r\n  var fRoot = void 0;\r\n\r\n  if (fTrace > 0.0) {\r\n    // |w| > 1/2, may as well choose w > 1/2\r\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\r\n    out[3] = 0.5 * fRoot;\r\n    fRoot = 0.5 / fRoot; // 1/(4w)\r\n    out[0] = (m[5] - m[7]) * fRoot;\r\n    out[1] = (m[6] - m[2]) * fRoot;\r\n    out[2] = (m[1] - m[3]) * fRoot;\r\n  } else {\r\n    // |w| <= 1/2\r\n    var i = 0;\r\n    if (m[4] > m[0]) i = 1;\r\n    if (m[8] > m[i * 3 + i]) i = 2;\r\n    var j = (i + 1) % 3;\r\n    var k = (i + 2) % 3;\r\n\r\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\r\n    out[i] = 0.5 * fRoot;\r\n    fRoot = 0.5 / fRoot;\r\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\r\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\r\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a quaternion from the given euler angle x, y, z.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {x} Angle to rotate around X axis in degrees.\r\n * @param {y} Angle to rotate around Y axis in degrees.\r\n * @param {z} Angle to rotate around Z axis in degrees.\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport function fromEuler(out, x, y, z) {\r\n  var halfToRad = 0.5 * Math.PI / 180.0;\r\n  x *= halfToRad;\r\n  y *= halfToRad;\r\n  z *= halfToRad;\r\n\r\n  var sx = Math.sin(x);\r\n  var cx = Math.cos(x);\r\n  var sy = Math.sin(y);\r\n  var cy = Math.cos(y);\r\n  var sz = Math.sin(z);\r\n  var cz = Math.cos(z);\r\n\r\n  out[0] = sx * cy * cz - cx * sy * sz;\r\n  out[1] = cx * sy * cz + sx * cy * sz;\r\n  out[2] = cx * cy * sz - sx * sy * cz;\r\n  out[3] = cx * cy * cz + sx * sy * sz;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a quatenion\r\n *\r\n * @param {quat} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\r\n}\r\n\r\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {quat} a quaternion to clone\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\r\nexport var clone = vec4.clone;\r\n\r\n/**\r\n * Creates a new quat initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\r\nexport var fromValues = vec4.fromValues;\r\n\r\n/**\r\n * Copy the values from one quat to another\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the source quaternion\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var copy = vec4.copy;\r\n\r\n/**\r\n * Set the components of a quat to the given values\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var set = vec4.set;\r\n\r\n/**\r\n * Adds two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var add = vec4.add;\r\n\r\n/**\r\n * Alias for {@link quat.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Scales a quat by a scalar number\r\n *\r\n * @param {quat} out the receiving vector\r\n * @param {quat} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var scale = vec4.scale;\r\n\r\n/**\r\n * Calculates the dot product of two quat's\r\n *\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\r\nexport var dot = vec4.dot;\r\n\r\n/**\r\n * Performs a linear interpolation between two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var lerp = vec4.lerp;\r\n\r\n/**\r\n * Calculates the length of a quat\r\n *\r\n * @param {quat} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport var length = vec4.length;\r\n\r\n/**\r\n * Alias for {@link quat.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Calculates the squared length of a quat\r\n *\r\n * @param {quat} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\r\nexport var squaredLength = vec4.squaredLength;\r\n\r\n/**\r\n * Alias for {@link quat.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Normalize a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quaternion to normalize\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var normalize = vec4.normalize;\r\n\r\n/**\r\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {quat} a The first quaternion.\r\n * @param {quat} b The second quaternion.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport var exactEquals = vec4.exactEquals;\r\n\r\n/**\r\n * Returns whether or not the quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {quat} a The first vector.\r\n * @param {quat} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport var equals = vec4.equals;\r\n\r\n/**\r\n * Sets a quaternion to represent the shortest rotation from one\r\n * vector to another.\r\n *\r\n * Both vectors are assumed to be unit length.\r\n *\r\n * @param {quat} out the receiving quaternion.\r\n * @param {vec3} a the initial vector\r\n * @param {vec3} b the destination vector\r\n * @returns {quat} out\r\n */\r\nexport var rotationTo = function () {\r\n  var tmpvec3 = vec3.create();\r\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\r\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\r\n\r\n  return function (out, a, b) {\r\n    var dot = vec3.dot(a, b);\r\n    if (dot < -0.999999) {\r\n      vec3.cross(tmpvec3, xUnitVec3, a);\r\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\r\n      vec3.normalize(tmpvec3, tmpvec3);\r\n      setAxisAngle(out, tmpvec3, Math.PI);\r\n      return out;\r\n    } else if (dot > 0.999999) {\r\n      out[0] = 0;\r\n      out[1] = 0;\r\n      out[2] = 0;\r\n      out[3] = 1;\r\n      return out;\r\n    } else {\r\n      vec3.cross(tmpvec3, a, b);\r\n      out[0] = tmpvec3[0];\r\n      out[1] = tmpvec3[1];\r\n      out[2] = tmpvec3[2];\r\n      out[3] = 1 + dot;\r\n      return normalize(out, out);\r\n    }\r\n  };\r\n}();\r\n\r\n/**\r\n * Performs a spherical linear interpolation with two control points\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {quat} c the third operand\r\n * @param {quat} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\r\nexport var sqlerp = function () {\r\n  var temp1 = create();\r\n  var temp2 = create();\r\n\r\n  return function (out, a, b, c, d, t) {\r\n    slerp(temp1, a, d, t);\r\n    slerp(temp2, b, c, t);\r\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\r\n\r\n    return out;\r\n  };\r\n}();\r\n\r\n/**\r\n * Sets the specified quaternion with values corresponding to the given\r\n * axes. Each axis is a vec3 and is expected to be unit length and\r\n * perpendicular to all other specified axes.\r\n *\r\n * @param {vec3} view  the vector representing the viewing direction\r\n * @param {vec3} right the vector representing the local \"right\" direction\r\n * @param {vec3} up    the vector representing the local \"up\" direction\r\n * @returns {quat} out\r\n */\r\nexport var setAxes = function () {\r\n  var matr = mat3.create();\r\n\r\n  return function (out, view, right, up) {\r\n    matr[0] = right[0];\r\n    matr[3] = right[1];\r\n    matr[6] = right[2];\r\n\r\n    matr[1] = up[0];\r\n    matr[4] = up[1];\r\n    matr[7] = up[2];\r\n\r\n    matr[2] = -view[0];\r\n    matr[5] = -view[1];\r\n    matr[8] = -view[2];\r\n\r\n    return normalize(out, fromMat3(out, matr));\r\n  };\r\n}();","import * as glMatrix from \"./common.js\";\r\nimport * as quat from \"./quat.js\";\r\nimport * as mat4 from \"./mat4.js\";\r\n\r\n/**\r\n * Dual Quaternion<br>\r\n * Format: [real, dual]<br>\r\n * Quaternion format: XYZW<br>\r\n * Make sure to have normalized dual quaternions, otherwise the functions may not work as intended.<br>\r\n * @module quat2\r\n */\r\n\r\n/**\r\n * Creates a new identity dual quat\r\n *\r\n * @returns {quat2} a new dual quaternion [real -> rotation, dual -> translation]\r\n */\r\nexport function create() {\r\n  var dq = new glMatrix.ARRAY_TYPE(8);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    dq[0] = 0;\r\n    dq[1] = 0;\r\n    dq[2] = 0;\r\n    dq[4] = 0;\r\n    dq[5] = 0;\r\n    dq[6] = 0;\r\n    dq[7] = 0;\r\n  }\r\n  dq[3] = 1;\r\n  return dq;\r\n}\r\n\r\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {quat2} a dual quaternion to clone\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\r\nexport function clone(a) {\r\n  var dq = new glMatrix.ARRAY_TYPE(8);\r\n  dq[0] = a[0];\r\n  dq[1] = a[1];\r\n  dq[2] = a[2];\r\n  dq[3] = a[3];\r\n  dq[4] = a[4];\r\n  dq[5] = a[5];\r\n  dq[6] = a[6];\r\n  dq[7] = a[7];\r\n  return dq;\r\n}\r\n\r\n/**\r\n * Creates a new dual quat initialized with the given values\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\r\nexport function fromValues(x1, y1, z1, w1, x2, y2, z2, w2) {\r\n  var dq = new glMatrix.ARRAY_TYPE(8);\r\n  dq[0] = x1;\r\n  dq[1] = y1;\r\n  dq[2] = z1;\r\n  dq[3] = w1;\r\n  dq[4] = x2;\r\n  dq[5] = y2;\r\n  dq[6] = z2;\r\n  dq[7] = w2;\r\n  return dq;\r\n}\r\n\r\n/**\r\n * Creates a new dual quat from the given values (quat and translation)\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component (translation)\r\n * @param {Number} y2 Y component (translation)\r\n * @param {Number} z2 Z component (translation)\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\r\nexport function fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\r\n  var dq = new glMatrix.ARRAY_TYPE(8);\r\n  dq[0] = x1;\r\n  dq[1] = y1;\r\n  dq[2] = z1;\r\n  dq[3] = w1;\r\n  var ax = x2 * 0.5,\r\n      ay = y2 * 0.5,\r\n      az = z2 * 0.5;\r\n  dq[4] = ax * w1 + ay * z1 - az * y1;\r\n  dq[5] = ay * w1 + az * x1 - ax * z1;\r\n  dq[6] = az * w1 + ax * y1 - ay * x1;\r\n  dq[7] = -ax * x1 - ay * y1 - az * z1;\r\n  return dq;\r\n}\r\n\r\n/**\r\n * Creates a dual quat from a quaternion and a translation\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {quat} q quaternion\r\n * @param {vec3} t tranlation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\r\nexport function fromRotationTranslation(out, q, t) {\r\n  var ax = t[0] * 0.5,\r\n      ay = t[1] * 0.5,\r\n      az = t[2] * 0.5,\r\n      bx = q[0],\r\n      by = q[1],\r\n      bz = q[2],\r\n      bw = q[3];\r\n  out[0] = bx;\r\n  out[1] = by;\r\n  out[2] = bz;\r\n  out[3] = bw;\r\n  out[4] = ax * bw + ay * bz - az * by;\r\n  out[5] = ay * bw + az * bx - ax * bz;\r\n  out[6] = az * bw + ax * by - ay * bx;\r\n  out[7] = -ax * bx - ay * by - az * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a dual quat from a translation\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {vec3} t translation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\r\nexport function fromTranslation(out, t) {\r\n  out[0] = 0;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  out[4] = t[0] * 0.5;\r\n  out[5] = t[1] * 0.5;\r\n  out[6] = t[2] * 0.5;\r\n  out[7] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a dual quat from a quaternion\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {quat} q the quaternion\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\r\nexport function fromRotation(out, q) {\r\n  out[0] = q[0];\r\n  out[1] = q[1];\r\n  out[2] = q[2];\r\n  out[3] = q[3];\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new dual quat from a matrix (4x4)\r\n *\r\n * @param {quat2} out the dual quaternion\r\n * @param {mat4} a the matrix\r\n * @returns {quat2} dual quat receiving operation result\r\n * @function\r\n */\r\nexport function fromMat4(out, a) {\r\n  //TODO Optimize this\r\n  var outer = quat.create();\r\n  mat4.getRotation(outer, a);\r\n  var t = new glMatrix.ARRAY_TYPE(3);\r\n  mat4.getTranslation(t, a);\r\n  fromRotationTranslation(out, outer, t);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one dual quat to another\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the source dual quaternion\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a dual quat to the identity dual quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @returns {quat2} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 0;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a dual quat to the given values\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function set(out, x1, y1, z1, w1, x2, y2, z2, w2) {\r\n  out[0] = x1;\r\n  out[1] = y1;\r\n  out[2] = z1;\r\n  out[3] = w1;\r\n\r\n  out[4] = x2;\r\n  out[5] = y2;\r\n  out[6] = z2;\r\n  out[7] = w2;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Gets the real part of a dual quat\r\n * @param  {quat} out real part\r\n * @param  {quat2} a Dual Quaternion\r\n * @return {quat} real part\r\n */\r\nexport var getReal = quat.copy;\r\n\r\n/**\r\n * Gets the dual part of a dual quat\r\n * @param  {quat} out dual part\r\n * @param  {quat2} a Dual Quaternion\r\n * @return {quat} dual part\r\n */\r\nexport function getDual(out, a) {\r\n  out[0] = a[4];\r\n  out[1] = a[5];\r\n  out[2] = a[6];\r\n  out[3] = a[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the real component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat} q a quaternion representing the real part\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport var setReal = quat.copy;\r\n\r\n/**\r\n * Set the dual component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat} q a quaternion representing the dual part\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function setDual(out, q) {\r\n  out[4] = q[0];\r\n  out[5] = q[1];\r\n  out[6] = q[2];\r\n  out[7] = q[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Gets the translation of a normalized dual quat\r\n * @param  {vec3} out translation\r\n * @param  {quat2} a Dual Quaternion to be decomposed\r\n * @return {vec3} translation\r\n */\r\nexport function getTranslation(out, a) {\r\n  var ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7],\r\n      bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3];\r\n  out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\r\n  out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\r\n  out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Translates a dual quat by the given vector\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {quat2} out\r\n */\r\nexport function translate(out, a, v) {\r\n  var ax1 = a[0],\r\n      ay1 = a[1],\r\n      az1 = a[2],\r\n      aw1 = a[3],\r\n      bx1 = v[0] * 0.5,\r\n      by1 = v[1] * 0.5,\r\n      bz1 = v[2] * 0.5,\r\n      ax2 = a[4],\r\n      ay2 = a[5],\r\n      az2 = a[6],\r\n      aw2 = a[7];\r\n  out[0] = ax1;\r\n  out[1] = ay1;\r\n  out[2] = az1;\r\n  out[3] = aw1;\r\n  out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;\r\n  out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;\r\n  out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;\r\n  out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat around the X axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\r\nexport function rotateX(out, a, rad) {\r\n  var bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3],\r\n      ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7],\r\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\r\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\r\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\r\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\r\n  quat.rotateX(out, a, rad);\r\n  bx = out[0];\r\n  by = out[1];\r\n  bz = out[2];\r\n  bw = out[3];\r\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\r\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\r\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\r\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat around the Y axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\r\nexport function rotateY(out, a, rad) {\r\n  var bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3],\r\n      ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7],\r\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\r\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\r\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\r\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\r\n  quat.rotateY(out, a, rad);\r\n  bx = out[0];\r\n  by = out[1];\r\n  bz = out[2];\r\n  bw = out[3];\r\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\r\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\r\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\r\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat around the Z axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\r\nexport function rotateZ(out, a, rad) {\r\n  var bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3],\r\n      ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7],\r\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\r\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\r\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\r\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\r\n  quat.rotateZ(out, a, rad);\r\n  bx = out[0];\r\n  by = out[1];\r\n  bz = out[2];\r\n  bw = out[3];\r\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\r\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\r\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\r\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat by a given quaternion (a * q)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {quat} q quaternion to rotate by\r\n * @returns {quat2} out\r\n */\r\nexport function rotateByQuatAppend(out, a, q) {\r\n  var qx = q[0],\r\n      qy = q[1],\r\n      qz = q[2],\r\n      qw = q[3],\r\n      ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n\r\n  out[0] = ax * qw + aw * qx + ay * qz - az * qy;\r\n  out[1] = ay * qw + aw * qy + az * qx - ax * qz;\r\n  out[2] = az * qw + aw * qz + ax * qy - ay * qx;\r\n  out[3] = aw * qw - ax * qx - ay * qy - az * qz;\r\n  ax = a[4];\r\n  ay = a[5];\r\n  az = a[6];\r\n  aw = a[7];\r\n  out[4] = ax * qw + aw * qx + ay * qz - az * qy;\r\n  out[5] = ay * qw + aw * qy + az * qx - ax * qz;\r\n  out[6] = az * qw + aw * qz + ax * qy - ay * qx;\r\n  out[7] = aw * qw - ax * qx - ay * qy - az * qz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat by a given quaternion (q * a)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat} q quaternion to rotate by\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @returns {quat2} out\r\n */\r\nexport function rotateByQuatPrepend(out, q, a) {\r\n  var qx = q[0],\r\n      qy = q[1],\r\n      qz = q[2],\r\n      qw = q[3],\r\n      bx = a[0],\r\n      by = a[1],\r\n      bz = a[2],\r\n      bw = a[3];\r\n\r\n  out[0] = qx * bw + qw * bx + qy * bz - qz * by;\r\n  out[1] = qy * bw + qw * by + qz * bx - qx * bz;\r\n  out[2] = qz * bw + qw * bz + qx * by - qy * bx;\r\n  out[3] = qw * bw - qx * bx - qy * by - qz * bz;\r\n  bx = a[4];\r\n  by = a[5];\r\n  bz = a[6];\r\n  bw = a[7];\r\n  out[4] = qx * bw + qw * bx + qy * bz - qz * by;\r\n  out[5] = qy * bw + qw * by + qz * bx - qx * bz;\r\n  out[6] = qz * bw + qw * bz + qx * by - qy * bx;\r\n  out[7] = qw * bw - qx * bx - qy * by - qz * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat around a given axis. Does the normalisation automatically\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {vec3} axis the axis to rotate around\r\n * @param {Number} rad how far the rotation should be\r\n * @returns {quat2} out\r\n */\r\nexport function rotateAroundAxis(out, a, axis, rad) {\r\n  //Special case for rad = 0\r\n  if (Math.abs(rad) < glMatrix.EPSILON) {\r\n    return copy(out, a);\r\n  }\r\n  var axisLength = Math.sqrt(axis[0] * axis[0] + axis[1] * axis[1] + axis[2] * axis[2]);\r\n\r\n  rad = rad * 0.5;\r\n  var s = Math.sin(rad);\r\n  var bx = s * axis[0] / axisLength;\r\n  var by = s * axis[1] / axisLength;\r\n  var bz = s * axis[2] / axisLength;\r\n  var bw = Math.cos(rad);\r\n\r\n  var ax1 = a[0],\r\n      ay1 = a[1],\r\n      az1 = a[2],\r\n      aw1 = a[3];\r\n  out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\r\n  out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\r\n  out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\r\n  out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\r\n\r\n  var ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7];\r\n  out[4] = ax * bw + aw * bx + ay * bz - az * by;\r\n  out[5] = ay * bw + aw * by + az * bx - ax * bz;\r\n  out[6] = az * bw + aw * bz + ax * by - ay * bx;\r\n  out[7] = aw * bw - ax * bx - ay * by - az * bz;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  out[6] = a[6] + b[6];\r\n  out[7] = a[7] + b[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiplies two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {quat2} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var ax0 = a[0],\r\n      ay0 = a[1],\r\n      az0 = a[2],\r\n      aw0 = a[3],\r\n      bx1 = b[4],\r\n      by1 = b[5],\r\n      bz1 = b[6],\r\n      bw1 = b[7],\r\n      ax1 = a[4],\r\n      ay1 = a[5],\r\n      az1 = a[6],\r\n      aw1 = a[7],\r\n      bx0 = b[0],\r\n      by0 = b[1],\r\n      bz0 = b[2],\r\n      bw0 = b[3];\r\n  out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;\r\n  out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;\r\n  out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;\r\n  out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;\r\n  out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;\r\n  out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;\r\n  out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;\r\n  out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Alias for {@link quat2.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Scales a dual quat by a scalar number\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {quat2} a the dual quat to scale\r\n * @param {Number} b amount to scale the dual quat by\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  out[6] = a[6] * b;\r\n  out[7] = a[7] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the dot product of two dual quat's (The dot product of the real parts)\r\n *\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\r\nexport var dot = quat.dot;\r\n\r\n/**\r\n * Performs a linear interpolation between two dual quats's\r\n * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when t = 0.5)\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat2} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n  var mt = 1 - t;\r\n  if (dot(a, b) < 0) t = -t;\r\n\r\n  out[0] = a[0] * mt + b[0] * t;\r\n  out[1] = a[1] * mt + b[1] * t;\r\n  out[2] = a[2] * mt + b[2] * t;\r\n  out[3] = a[3] * mt + b[3] * t;\r\n  out[4] = a[4] * mt + b[4] * t;\r\n  out[5] = a[5] * mt + b[5] * t;\r\n  out[6] = a[6] * mt + b[6] * t;\r\n  out[7] = a[7] * mt + b[7] * t;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the inverse of a dual quat. If they are normalized, conjugate is cheaper\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a dual quat to calculate inverse of\r\n * @returns {quat2} out\r\n */\r\nexport function invert(out, a) {\r\n  var sqlen = squaredLength(a);\r\n  out[0] = -a[0] / sqlen;\r\n  out[1] = -a[1] / sqlen;\r\n  out[2] = -a[2] / sqlen;\r\n  out[3] = a[3] / sqlen;\r\n  out[4] = -a[4] / sqlen;\r\n  out[5] = -a[5] / sqlen;\r\n  out[6] = -a[6] / sqlen;\r\n  out[7] = a[7] / sqlen;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the conjugate of a dual quat\r\n * If the dual quaternion is normalized, this function is faster than quat2.inverse and produces the same result.\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat2} a quat to calculate conjugate of\r\n * @returns {quat2} out\r\n */\r\nexport function conjugate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = a[3];\r\n  out[4] = -a[4];\r\n  out[5] = -a[5];\r\n  out[6] = -a[6];\r\n  out[7] = a[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the length of a dual quat\r\n *\r\n * @param {quat2} a dual quat to calculate length of\r\n * @returns {Number} length of a\r\n * @function\r\n */\r\nexport var length = quat.length;\r\n\r\n/**\r\n * Alias for {@link quat2.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Calculates the squared length of a dual quat\r\n *\r\n * @param {quat2} a dual quat to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\r\nexport var squaredLength = quat.squaredLength;\r\n\r\n/**\r\n * Alias for {@link quat2.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Normalize a dual quat\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a dual quaternion to normalize\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function normalize(out, a) {\r\n  var magnitude = squaredLength(a);\r\n  if (magnitude > 0) {\r\n    magnitude = Math.sqrt(magnitude);\r\n\r\n    var a0 = a[0] / magnitude;\r\n    var a1 = a[1] / magnitude;\r\n    var a2 = a[2] / magnitude;\r\n    var a3 = a[3] / magnitude;\r\n\r\n    var b0 = a[4];\r\n    var b1 = a[5];\r\n    var b2 = a[6];\r\n    var b3 = a[7];\r\n\r\n    var a_dot_b = a0 * b0 + a1 * b1 + a2 * b2 + a3 * b3;\r\n\r\n    out[0] = a0;\r\n    out[1] = a1;\r\n    out[2] = a2;\r\n    out[3] = a3;\r\n\r\n    out[4] = (b0 - a0 * a_dot_b) / magnitude;\r\n    out[5] = (b1 - a1 * a_dot_b) / magnitude;\r\n    out[6] = (b2 - a2 * a_dot_b) / magnitude;\r\n    out[7] = (b3 - a3 * a_dot_b) / magnitude;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a dual quatenion\r\n *\r\n * @param {quat2} a dual quaternion to represent as a string\r\n * @returns {String} string representation of the dual quat\r\n */\r\nexport function str(a) {\r\n  return 'quat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ')';\r\n}\r\n\r\n/**\r\n * Returns whether or not the dual quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {quat2} a the first dual quaternion.\r\n * @param {quat2} b the second dual quaternion.\r\n * @returns {Boolean} true if the dual quaternions are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];\r\n}\r\n\r\n/**\r\n * Returns whether or not the dual quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {quat2} a the first dual quat.\r\n * @param {quat2} b the second dual quat.\r\n * @returns {Boolean} true if the dual quats are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5],\r\n      a6 = a[6],\r\n      a7 = a[7];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3],\r\n      b4 = b[4],\r\n      b5 = b[5],\r\n      b6 = b[6],\r\n      b7 = b[7];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7));\r\n}","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 2 Dimensional Vector\r\n * @module vec2\r\n */\r\n\r\n/**\r\n * Creates a new, empty vec2\r\n *\r\n * @returns {vec2} a new 2D vector\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(2);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec2 initialized with values from an existing vector\r\n *\r\n * @param {vec2} a vector to clone\r\n * @returns {vec2} a new 2D vector\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(2);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec2 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} a new 2D vector\r\n */\r\nexport function fromValues(x, y) {\r\n  var out = new glMatrix.ARRAY_TYPE(2);\r\n  out[0] = x;\r\n  out[1] = y;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one vec2 to another\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the source vector\r\n * @returns {vec2} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a vec2 to the given values\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} out\r\n */\r\nexport function set(out, x, y) {\r\n  out[0] = x;\r\n  out[1] = y;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiplies two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  out[0] = a[0] * b[0];\r\n  out[1] = a[1] * b[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Divides two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function divide(out, a, b) {\r\n  out[0] = a[0] / b[0];\r\n  out[1] = a[1] / b[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.ceil the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to ceil\r\n * @returns {vec2} out\r\n */\r\nexport function ceil(out, a) {\r\n  out[0] = Math.ceil(a[0]);\r\n  out[1] = Math.ceil(a[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.floor the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to floor\r\n * @returns {vec2} out\r\n */\r\nexport function floor(out, a) {\r\n  out[0] = Math.floor(a[0]);\r\n  out[1] = Math.floor(a[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the minimum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function min(out, a, b) {\r\n  out[0] = Math.min(a[0], b[0]);\r\n  out[1] = Math.min(a[1], b[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the maximum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function max(out, a, b) {\r\n  out[0] = Math.max(a[0], b[0]);\r\n  out[1] = Math.max(a[1], b[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.round the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to round\r\n * @returns {vec2} out\r\n */\r\nexport function round(out, a) {\r\n  out[0] = Math.round(a[0]);\r\n  out[1] = Math.round(a[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales a vec2 by a scalar number\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec2} out\r\n */\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec2's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec2} out\r\n */\r\nexport function scaleAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the euclidian distance between two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\r\nexport function distance(a, b) {\r\n  var x = b[0] - a[0],\r\n      y = b[1] - a[1];\r\n  return Math.sqrt(x * x + y * y);\r\n}\r\n\r\n/**\r\n * Calculates the squared euclidian distance between two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\r\nexport function squaredDistance(a, b) {\r\n  var x = b[0] - a[0],\r\n      y = b[1] - a[1];\r\n  return x * x + y * y;\r\n}\r\n\r\n/**\r\n * Calculates the length of a vec2\r\n *\r\n * @param {vec2} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport function length(a) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  return Math.sqrt(x * x + y * y);\r\n}\r\n\r\n/**\r\n * Calculates the squared length of a vec2\r\n *\r\n * @param {vec2} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\r\nexport function squaredLength(a) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  return x * x + y * y;\r\n}\r\n\r\n/**\r\n * Negates the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to negate\r\n * @returns {vec2} out\r\n */\r\nexport function negate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the inverse of the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to invert\r\n * @returns {vec2} out\r\n */\r\nexport function inverse(out, a) {\r\n  out[0] = 1.0 / a[0];\r\n  out[1] = 1.0 / a[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Normalize a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to normalize\r\n * @returns {vec2} out\r\n */\r\nexport function normalize(out, a) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  var len = x * x + y * y;\r\n  if (len > 0) {\r\n    //TODO: evaluate use of glm_invsqrt here?\r\n    len = 1 / Math.sqrt(len);\r\n    out[0] = a[0] * len;\r\n    out[1] = a[1] * len;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the dot product of two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\r\nexport function dot(a, b) {\r\n  return a[0] * b[0] + a[1] * b[1];\r\n}\r\n\r\n/**\r\n * Computes the cross product of two vec2's\r\n * Note that the cross product must by definition produce a 3D vector\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function cross(out, a, b) {\r\n  var z = a[0] * b[1] - a[1] * b[0];\r\n  out[0] = out[1] = 0;\r\n  out[2] = z;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a linear interpolation between two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec2} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n  var ax = a[0],\r\n      ay = a[1];\r\n  out[0] = ax + t * (b[0] - ax);\r\n  out[1] = ay + t * (b[1] - ay);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec2} out\r\n */\r\nexport function random(out, scale) {\r\n  scale = scale || 1.0;\r\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\r\n  out[0] = Math.cos(r) * scale;\r\n  out[1] = Math.sin(r) * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec2 with a mat2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat2} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat2(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  out[0] = m[0] * x + m[2] * y;\r\n  out[1] = m[1] * x + m[3] * y;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec2 with a mat2d\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat2d} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat2d(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  out[0] = m[0] * x + m[2] * y + m[4];\r\n  out[1] = m[1] * x + m[3] * y + m[5];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec2 with a mat3\r\n * 3rd vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat3} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat3(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  out[0] = m[0] * x + m[3] * y + m[6];\r\n  out[1] = m[1] * x + m[4] * y + m[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec2 with a mat4\r\n * 3rd vector component is implicitly '0'\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat4(out, a, m) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  out[0] = m[0] * x + m[4] * y + m[12];\r\n  out[1] = m[1] * x + m[5] * y + m[13];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 2D vector\r\n * @param {vec2} out The receiving vec2\r\n * @param {vec2} a The vec2 point to rotate\r\n * @param {vec2} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec2} out\r\n */\r\nexport function rotate(out, a, b, c) {\r\n  //Translate point to the origin\r\n  var p0 = a[0] - b[0],\r\n      p1 = a[1] - b[1],\r\n      sinC = Math.sin(c),\r\n      cosC = Math.cos(c);\r\n\r\n  //perform rotation and translate to correct position\r\n  out[0] = p0 * cosC - p1 * sinC + b[0];\r\n  out[1] = p0 * sinC + p1 * cosC + b[1];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Get the angle between two 2D vectors\r\n * @param {vec2} a The first operand\r\n * @param {vec2} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\r\nexport function angle(a, b) {\r\n  var x1 = a[0],\r\n      y1 = a[1],\r\n      x2 = b[0],\r\n      y2 = b[1];\r\n\r\n  var len1 = x1 * x1 + y1 * y1;\r\n  if (len1 > 0) {\r\n    //TODO: evaluate use of glm_invsqrt here?\r\n    len1 = 1 / Math.sqrt(len1);\r\n  }\r\n\r\n  var len2 = x2 * x2 + y2 * y2;\r\n  if (len2 > 0) {\r\n    //TODO: evaluate use of glm_invsqrt here?\r\n    len2 = 1 / Math.sqrt(len2);\r\n  }\r\n\r\n  var cosine = (x1 * x2 + y1 * y2) * len1 * len2;\r\n\r\n  if (cosine > 1.0) {\r\n    return 0;\r\n  } else if (cosine < -1.0) {\r\n    return Math.PI;\r\n  } else {\r\n    return Math.acos(cosine);\r\n  }\r\n}\r\n\r\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec2} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return 'vec2(' + a[0] + ', ' + a[1] + ')';\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec2} a The first vector.\r\n * @param {vec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1];\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec2} a The first vector.\r\n * @param {vec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1];\r\n  var b0 = b[0],\r\n      b1 = b[1];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\r\n}\r\n\r\n/**\r\n * Alias for {@link vec2.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Alias for {@link vec2.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;\r\n\r\n/**\r\n * Alias for {@link vec2.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link vec2.divide}\r\n * @function\r\n */\r\nexport var div = divide;\r\n\r\n/**\r\n * Alias for {@link vec2.distance}\r\n * @function\r\n */\r\nexport var dist = distance;\r\n\r\n/**\r\n * Alias for {@link vec2.squaredDistance}\r\n * @function\r\n */\r\nexport var sqrDist = squaredDistance;\r\n\r\n/**\r\n * Alias for {@link vec2.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Perform some operation over an array of vec2s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\r\nexport var forEach = function () {\r\n  var vec = create();\r\n\r\n  return function (a, stride, offset, count, fn, arg) {\r\n    var i = void 0,\r\n        l = void 0;\r\n    if (!stride) {\r\n      stride = 2;\r\n    }\r\n\r\n    if (!offset) {\r\n      offset = 0;\r\n    }\r\n\r\n    if (count) {\r\n      l = Math.min(count * stride + offset, a.length);\r\n    } else {\r\n      l = a.length;\r\n    }\r\n\r\n    for (i = offset; i < l; i += stride) {\r\n      vec[0] = a[i];vec[1] = a[i + 1];\r\n      fn(vec, vec, arg);\r\n      a[i] = vec[0];a[i + 1] = vec[1];\r\n    }\r\n\r\n    return a;\r\n  };\r\n}();","import * as glMatrix from \"./gl-matrix/common.js\";\r\nimport * as mat2 from \"./gl-matrix/mat2.js\";\r\nimport * as mat2d from \"./gl-matrix/mat2d.js\";\r\nimport * as mat3 from \"./gl-matrix/mat3.js\";\r\nimport * as mat4 from \"./gl-matrix/mat4.js\";\r\nimport * as quat from \"./gl-matrix/quat.js\";\r\nimport * as quat2 from \"./gl-matrix/quat2.js\";\r\nimport * as vec2 from \"./gl-matrix/vec2.js\";\r\nimport * as vec3 from \"./gl-matrix/vec3.js\";\r\nimport * as vec4 from \"./gl-matrix/vec4.js\";\r\n\r\nexport { glMatrix, mat2, mat2d, mat3, mat4, quat, quat2, vec2, vec3, vec4 };"],"sourceRoot":""}